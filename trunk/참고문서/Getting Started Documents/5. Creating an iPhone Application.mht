From: <Windows Internet Explorer 7로 저장>
Subject: Apple Developer Connection - iPhone Dev Center - Getting Started Docs
Date: Tue, 12 Aug 2008 17:11:46 +0900
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_003E_01C8FC9E.8072D220"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3198

This is a multi-part message in MIME format.

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: text/html;
	charset="Windows-1252"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://developer.apple.com/iphone/gettingstarted/docs/creatingiphoneapps.action

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" =
"http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<HTML><HEAD><TITLE>Apple Developer Connection - iPhone Dev Center - =
Getting Started Docs</TITLE>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=euc-kr">
<META http-equiv=3Dpics-label=20
content=3D'(pics-1.1 "http://www.icra.org/ratingsv02.html" l gen true =
for "http://www.apple.com" r (cz 1 lz 1 nz 1 oz 1 vz 1) =
"http://www.rsac.org/ratingsv01.html" l gen true for =
"http://www.apple.com" r (n 0 s 0 v 0 l 0))'>
<META http-equiv=3DExpires content=3D"Fri, 26 Mar 1999 23:59:59 GMT">
<META content=3D"Apple Computer, Inc." name=3DAuthor>
<META content=3Dwidth=3D1024 name=3Dviewport><LINK=20
href=3D"http://devimages.apple.com/global/styles/adc.css" =
type=3Dtext/css=20
charset=UTF-8 rel=3Dstylesheet>
<SCRIPT =
src=3D"http://devimages.apple.com/global/scripts/lib/prototype.js"=20
type=3Dtext/javascript charset=UTF-8></SCRIPT>

<SCRIPT =
src=3D"http://devimages.apple.com/global/scripts/lib/scriptaculous.js"=20
type=3Dtext/javascript charset=UTF-8></SCRIPT>

<SCRIPT =
src=3D"http://devimages.apple.com/global/scripts/browserdetect.js"=20
type=3Dtext/javascript charset=UTF-8></SCRIPT>

<SCRIPT src=3D"http://devimages.apple.com/global/scripts/apple_core.js"=20
type=3Dtext/javascript charset=UTF-8></SCRIPT>

<SCRIPT =
src=3D"http://devimages.apple.com/global/scripts/search_decorator.js"=20
type=3Dtext/javascript charset=UTF-8></SCRIPT>

<SCRIPT src=3D"http://devimages.apple.com/global/scripts/adc_core.js"=20
type=3Dtext/javascript charset=UTF-8></SCRIPT>

<SCRIPT type=3Dtext/javascript charset=UTF-8>=0A=
		document.write('<link rel=3D"stylesheet" type=3D"text/css" =
href=3D"http://devimages.apple.com/global/styles/script.css" =
media=3D"screen">')=0A=
	</SCRIPT>
<LINK href=3D"http://developer.apple.com/iphone/styles/iphone.css" =
type=3Dtext/css=20
charset=UTF-8 rel=3Dstylesheet>
<STYLE type=3Dtext/css>#main #header {
	PADDING-LEFT: 135px
}
#main #header H1 {
	MARGIN-TOP: 0.4em
}
#main #header IMG.hero {
	LEFT: -14px
}
BODY#iphoneosoverview #sidebar #sbn-iphoneosoverview A {
	CURSOR: default; COLOR: #333; TEXT-DECORATION: none
}
BODY#iphonedevtools #sidebar #sbn-iphonedevtools A {
	CURSOR: default; COLOR: #333; TEXT-DECORATION: none
}
BODY#objectivecprimer #sidebar #sbn-objectivecprimer A {
	CURSOR: default; COLOR: #333; TEXT-DECORATION: none
}
BODY#creatingiphoneapps #sidebar #sbn-creatingiphoneapps A {
	CURSOR: default; COLOR: #333; TEXT-DECORATION: none
}
BODY#iphoneosforcocoadevelopers #sidebar #sbn-iphoneosforcocoadevelopers =
A {
	CURSOR: default; COLOR: #333; TEXT-DECORATION: none
}
BODY#gettingstartedfaq #sidebar #sbn-gettingstartedfaq A {
	CURSOR: default; COLOR: #333; TEXT-DECORATION: none
}
BODY#signingcodeforiphonedev #sidebar #sbn-signingcodeforiphonedev A {
	CURSOR: default; COLOR: #333; TEXT-DECORATION: none
}
</STYLE>

<META content=3D"MSHTML 6.00.6000.16674" name=3DGENERATOR></HEAD>
<BODY class=3D"iphone gettingstarted docs" id=3Dcreatingiphoneapps>
<DIV id=3Dglobalheader>
<H2><A href=3D"http://developer.apple.com/">Apple Developer =
Connection</A></H2>
<UL id=3Dgh-links style=3D"RIGHT: 0px">
  <LI id=3Dgh-links-apple><A href=3D"http://www.apple.com/">Apple</A> =
</LI>
  <LI id=3Dgh-links-account><A=20
  =
href=3D"https://connect.apple.com/cgi-bin/WebObjects/MemberSite.woa/wa/pr=
omo?source=3DADCLOG&amp;code=3DADCLOG-NEX">ADC=20
  Member Site</A> </LI>
  <LI id=3Dgh-links-contact><A =
href=3D"http://developer.apple.com/contact/">Contact=20
  Us</A> </LI></UL>
<UL id=3Dgh-nav>
  <LI class=3Dmenu id=3Dgh-nav-devcenters><A=20
  href=3D"http://developer.apple.com/"><SPAN>Dev=20
  Centers</SPAN><B><B>&gt;</B></B></A>=20
  <UL>
    <LI><A href=3D"http://developer.apple.com/iphone/">iPhone Dev =
Center</A> </LI>
    <LI><A href=3D"http://developer.apple.com/mac/">Mac Dev Center</A> =
</LI>
    <LI><A href=3D"http://developer.apple.com/webapps/">Web Apps Dev =
Center</A>=20
    </LI>
    <LI class=3Dmenubottom></LI></UL></LI>
  <LI id=3Dgh-nav-adconitunes><A=20
  href=3D"http://developer.apple.com/adconitunes/overview.html">ADC on =
iTunes</A>=20
  </LI>
  <LI id=3Dgh-nav-resources><A=20
  href=3D"http://developer.apple.com/information/">Information</A> =
</LI></UL>
<SCRIPT type=3Dtext/javascript charset=UTF-8>=0A=
		var menus =3D $$('#globalheader ul#gh-nav li.menu');=0A=
		var menu =3D new ADC.Menus(menus);=0A=
	</SCRIPT>
</DIV><!-- SiteCatalyst code version: H.8. Copyright 1997-2006 Omniture, =
Inc. -->
<SCRIPT language=3DJavaScript><!--=0A=
/* RSID: */=0A=
var s_account=3D"appleglobal,appleusdeveloper"=0A=
//--></SCRIPT>

<SCRIPT language=3DJavaScript=20
src=3D"http://images.apple.com/global/metrics/js/cid_check.js"=20
type=3Dtext/javascript></SCRIPT>

<SCRIPT language=3DJavaScript=20
src=3D"http://images.apple.com/global/metrics/js/s_code_h.js"=20
type=3Dtext/javascript></SCRIPT>

<SCRIPT language=3DJavaScript><!--=0A=
s.pageName=3Ddocument.title+" (US)";=0A=
s.server=3D""=0A=
s.channel=3D"www.us.developer"=0A=
s.pageType=3D""=0A=
s.prop1=3D"ADR: iPhone Dev Center"=0A=
s.prop2=3D""=0A=
s.prop3=3D""=0A=
s.prop4=3Ddocument.location;=0A=
=0A=
=0A=
/* E-commerce Variables */=0A=
s.campaign=3D""=0A=
s.state=3D""=0A=
s.zip=3D""=0A=
s.events=3D""=0A=
s.products=3D""=0A=
s.purchaseID=3D""=0A=
s.eVar1=3D""=0A=
s.eVar2=3D""=0A=
s.eVar3=3D""=0A=
s.eVar4=3D""=0A=
s.eVar5=3D""=0A=
=0A=
/************* DO NOT ALTER ANYTHING BELOW THIS LINE ! **************/=0A=
var s_code=3Ds.t();if(s_code)document.write(s_code)//--></SCRIPT>
<!-- End SiteCatalyst code version: H.8. -->
<DIV id=3Dcontainer>
<DIV id=3Dmainheader>
<H1><A href=3D"http://developer.apple.com/iphone/index.action">iPhone =
Dev=20
Center</A></H1>
<P><STRONG>Welcome, Sa&nbsp;sin</STRONG> <B>|</B> <A=20
href=3D"http://developer.apple.com/iphone/urlRedirect.action?mode=3Dupdat=
e_profile&amp;userAction=3DupdateAccount&amp;cancelPath=3D/iphone/index.a=
ction&amp;successPath=3D/iphone/index.action">Edit=20
Profile</A> <B>|</B> <A=20
href=3D"http://developer.apple.com/iphone/logout.action">Log out</A> =
</P></DIV><!--/header-->
<DIV id=3Dmain>
<DIV id=3Dcontent>
<H2>Creating an iPhone Application</H2>
<P>하이레벨에서의 iPhone 어플리케이션을 제작하는 과정은 Mac OS X 어플리케이션을 제작하는 과정과 비슷한다. 
둘다 같은 툴들과 많은 같은 기본 라이브러리를 사용한다. 유사성에도 불구하고, 중요한 차이점은 물론 있다. 
iPhone은 데스트탑 컴퓨터가 아니다. 이것은 다른 용도를 가지며 매우 다른 디자인 접근을 요구한다. 
이러한 접근은 iPhone OS의 힘의 장점과 모바일 환경에서 이상하거나 비현실적인 특징들을 앞서나가는 것을 필요로한다. 
작은 크기의 iPhone과 iPod touch의 스크린 역시 당신의 어플리케이션의 유저 인터페이스가 잘 조직되고 언제나 유저의 필요에 최대한 맞춰져야함을 의미한다.
<br>At a high level, the process for creating an iPhone application is =
similar to=20
that for creating a Mac OS X application. Both use the same tools and =
many of=20
the same basic libraries. Despite the similarities, there are also =
significant=20
differences. An iPhone is not a desktop computer; it has a different =
purpose and=20
requires a very different design approach. That approach needs to take =
advantage=20
of the strengths of iPhone OS and forego features that might be =
irrelevant or=20
impractical in a mobile environment. The smaller size of the iPhone and =
iPod=20
touch screens also means that your application's user interface should =
be well=20
organized and always focused on the information the user needs most. =
</P>
<P>iPhone OS는 유저들이 iPhone과 iPod touch장치들과 데스크탑 어플리케이션에서 할 수 없었던 상호작용을 하게한다. 
멀티터치 인터페이스는 이벤트를 받는 혁명적인 새로운 방식이다. 스크린을 만지는 각각 떨어진 손가락을 보고하고, 그것을 여러개의 손가락을 이용한 제스쳐와 조합으로 쉽게 만들어낸다. 
더해서, 몇몇 데스크탑에서 제공되는 Accelerometers와 같은 내부의 하드웨어는 iPhone OS에서 당신의 컨텐츠에 맞게 스크린의 현재 위치를 추척하는데 좀 더 광범위하게 사용된다.(의역이 많이 들어갔군...) 
당신의 어플리케이션 안에서 이러한 특징을 어떻게 사용하는지 이해하는 것은 당신의 유저에 맞춘 디자인을 도와준다.
<br>iPhone OS lets users interact with iPhone and iPod touch devices in =
ways that=20
you cannot interact with desktop applications. The Multi-Touch interface =
is a=20
revolutionary new way to receive events, reporting on each separate =
finger that=20
touches the screen and making it possible to handle multifinger gestures =
and=20
other complex input easily. In addition, built-in hardware features such =
as the=20
accelerometers, although present in some desktop systems, are used more=20
extensively in iPhone OS to track the screen's current orientation and =
adjust=20
your content accordingly. Understanding how you can use these features =
in your=20
applications will help you focus on a design that is right for your =
users. </P>
<P>
iPhone 어플리케이션의 디자인을 이해하는 최고의 방법은 예제를 보는 것이다. 
이 문서는 샘플 어플리케이션인 "MoveMe"를 둘러보게 한다. 
이 샘플은 다음의 것들을 포함하여 iPhone 어플리케이션의 전형적인 행동을 보여준다.
<br>The best way to understand the design of an iPhone application is to =
look at=20
an example. This article takes you on a tour of the <SPAN =
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/samplecode/MoveMe/index=
.html"=20
target=3D_top>MoveMe</A></SPAN> sample application. This sample =
demonstrates many=20
of the typical behaviors of an iPhone application, including: </P>
<UL class=3Dsquare>
  <LI>어플리케이션의 초기화<br>Initializing the application=20
  <LI>윈도우 보여주기<br>Displaying a window=20
  <LI>컨텐츠 그리기<br>Drawing custom content=20
  <LI>터치이벤트 핸들링<br>Handling touch events=20
  <LI>에니메이션 실행<br>Performing animations </LI></UL>
<P><SPAN class=3Dcontent_text>Figure 1</SPAN> shows the interface for =
this=20
application. Touching the Welcome button triggers an animation that =
causes the=20
button to pulse and center itself under your finger. As you drag your =
finger=20
around the screen, the button follows your finger. Lift your finger from =
the=20
screen and, using another animation, the button snaps back to its =
original=20
location. Double-tapping anywhere outside the button changes the =
language of the=20
button's greeting. </P><BR><A title=3D"Figure 1The MoveMe application =
window"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW2=20
turn_anchor=3D"yes"></A>
<P><B>Figure 1&nbsp;&nbsp;</B>The MoveMe application window </P><IMG =
height=3D594=20
alt=3D"The MoveMe application"=20
src=3D"http://devimages.apple.com/iphone/gettingstarted/docs/images/MoveM=
e.jpg"=20
width=3D309> <BR>
<P>Before reading the other sections of this article, you should =
download the=20
sample (<SPAN class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/samplecode/MoveMe/index=
.html"=20
target=3D_top>MoveMe</A></SPAN>) so that you can follow along directly =
in the=20
source code. You should also have already read the following orientation =
pages=20
in the iPhone Dev Center to get a basic understanding of iPhone OS and =
the tools=20
and language you use for development: </P>
<UL class=3Dsquare>
  <LI><SPAN class=3Dcontent_text><A=20
  =
href=3D"http://developer.apple.com/iphone/gettingstarted/docs/iphoneosove=
rview.action"=20
  target=3D_top>iPhone OS Overview</A></SPAN>=20
  <LI><SPAN class=3Dcontent_text><A=20
  =
href=3D"http://developer.apple.com/iphone/gettingstarted/docs/iphonedevto=
ols.action"=20
  target=3D_top>Tools for iPhone Development</A></SPAN> </LI></UL>
<P>If you are not familiar with the Objective-C programming language, =
you should=20
also have read <SPAN class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/gettingstarted/docs/objectivecp=
rimer.action"=20
target=3D_top>Learning Objective-C: A Primer</A></SPAN> to familiarize =
yourself=20
with the basic syntax of Objective-C. </P><A=20
title=3D"Examining the MoveMe Sample Project"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW17=20
turn_anchor=3D"yes"></A>
<H3>Examining the MoveMe Sample Project</H3>
<P>Downloading the <SPAN class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/samplecode/MoveMe/index=
.html"=20
target=3D_top>MoveMe</A></SPAN> sample provides you with the source code =
and=20
support files needed to build and run the application. You manage =
projects for=20
iPhone OS using the Xcode application (located in=20
<CODE>/Developer/Applications</CODE> by default). Each Xcode project =
window=20
combines a workspace for gathering your code and resource files, build =
rules for=20
compiling your source and assembling your application, and tools for =
editing and=20
debugging your code. </P>
<P><SPAN class=3Dcontent_text>Figure 2</SPAN> shows the Xcode project =
window for=20
the MoveMe application. To open this project, copy it to your local hard =
drive=20
and double-click the <CODE>MoveMe.xcodeproj</CODE> file to open it. (You =
can=20
also open the project from within Xcode by selecting File &gt; Open and =
choosing=20
the file.) The project includes several Objective-C source files =
(denoted by the=20
<CODE>.m</CODE> extension), some image files and other resources, and a=20
predefined target (<CODE>MoveMe</CODE>) for building the application =
bundle.=20
</P><A title=3D"Figure 2The MoveMe project window"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW3=20
turn_anchor=3D"yes"></A>
<P><B>Figure 2&nbsp;&nbsp;</B>The MoveMe project window </P><IMG =
height=3D544=20
alt=3D"The MoveMe project window"=20
src=3D"http://devimages.apple.com/iphone/gettingstarted/docs/images/movem=
e_project.jpg"=20
width=3D797> <BR>
<P>In iPhone OS, the ultimate target of your Xcode project is an =
application=20
bundle, which is a special type of directory that houses your =
application's=20
binary executable and supporting resource files. Bundles in iPhone OS =
have a=20
relatively flat directory structure, with most files residing at the top =
level=20
of the bundle directory. However, a bundle may also contain =
subdirectories to=20
store localized versions of strings and other language-specific resource =
files.=20
You do not need to know the exact structure of the application bundle =
for the=20
purposes of this article, but you can find that information in <SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/ApplicationEnvironment/chapter_6_sectio=
n_4.html"=20
target=3D_top>"The Application Bundle"</A></SPAN> in <SPAN =
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/index.html"=20
target=3D_top>iPhone OS Programming Guide</A></SPAN> if you are =
interested in it.=20
</P><A title=3D"Building the MoveMe Application"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW7=20
turn_anchor=3D"yes"></A>
<H4>Building the MoveMe Application</H4>
<P>To build the MoveMe application and run it in the simulator, do the=20
following: </P>
<OL class=3Dol>
  <LI>Open the <CODE>MoveMe.xcodeproj</CODE> file in Xcode.=20
  <LI>In the project toolbar, make sure the simulator option is selected =
in the=20
  Active SDK menu. (If the Active SDK menu does not appear in the =
toolbar,=20
  choose Project &gt; Set Active SDK &gt; Simulator.)=20
  <LI>Select Build &gt; Build and Go (Run) from the menu, or simply =
click the=20
  Build and Go button in the toolbar. </LI></OL>
<P>When the application finishes building, Xcode loads it into the =
iPhone=20
simulator and launches it. Using your mouse, you can click the Welcome =
button=20
and drag it around the screen to see the application's behavior. If you =
have a=20
device configured for development, you can also build your application =
and run=20
it on that device. For information about how to configure devices for=20
development and load applications, see <SPAN class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/DevelopmentEnvironmentOverview/chapter_=
4_section_1.html"=20
target=3D_top>"Development Environment"</A></SPAN> in <SPAN =
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/index.html"=20
target=3D_top>iPhone OS Programming Guide</A></SPAN>. </P><A=20
title=3D"A Word About Memory Management"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW11=20
turn_anchor=3D"yes"></A>
<H4>A Word About Memory Management</H4>
<P>iPhone OS is primarily an object-oriented system, so most of the =
memory you=20
allocate is in the form of Objective-C objects. Objects in iPhone OS use =
a=20
reference-counting scheme to know when it is safe to free up the memory =
occupied=20
by the object. When you first create an object, it starts off with a =
reference=20
count of 1. Clients receiving that object can opt to retain it, thereby=20
incrementing its reference count by 1. If a client retains an object, =
the client=20
must also release that object when it is no longer needed. Releasing an =
object=20
decrements its reference count by 1. When an object's reference count =
equals 0,=20
the system automatically reclaims the memory for the object. </P>
<DIV class=3Dnote><A title=3DNote=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW20=20
turn_anchor=3D"yes"></A>
<P><B>Note:</B>&nbsp;iPhone OS does not support memory management using =
the=20
garbage collection feature that is in Mac OS X v10.5 and later. </P>
<P></P></DIV>
<P>If you want to allocate generic blocks of memory=97that is, memory =
not=20
associated with an object=97you can do so using the standard malloc =
library of=20
calls. As is the case with any memory you allocate using =
<CODE>malloc</CODE>,=20
you are responsible for releasing that memory when you are done with it =
by=20
calling the <CODE>free</CODE> function. The system does not release =
malloc-based=20
blocks for you. </P>
<P>Regardless of how you allocate memory, managing your overall memory =
usage is=20
more important in iPhone OS than it is in Mac OS X. Although iPhone OS =
has a=20
virtual memory system, it does not use a swap file. This means that code =
pages=20
can be flushed as needed but your application's data must all fit into =
memory at=20
the same time. The system monitors the overall amount of free memory and =
does=20
what it can to give your application the memory it needs. If memory =
usage=20
becomes too critical though, the system may terminate your application. =
However,=20
this option is used only as a last resort, to ensure that the system has =
enough=20
memory to perform critical operations such as receiving phone calls. =
</P>
<P>For more information about how to allocate objects in iPhone OS, see =
<SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/Cocoa/Con=
ceptual/CocoaFundamentals/index.html"=20
target=3D_top>Cocoa Fundamentals Guide</A></SPAN>. For information and =
tips on how=20
to improve your application's memory usage, see <SPAN =
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/ApplicationDesignGuidelines/chapter_5_s=
ection_3.html"=20
target=3D_top>"Managing Your Memory Usage"</A></SPAN> in <SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/index.html"=20
target=3D_top>iPhone OS Programming Guide</A></SPAN>. </P><A=20
title=3D"Initializing the MoveMe Application"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW24=20
turn_anchor=3D"yes"></A>
<H3>Initializing the MoveMe Application</H3>
<P>As is true for every C-based application, the initial entry point for =
every=20
iPhone application is a function called <CODE>main</CODE>. The good news =
is=20
that, when you create a new project using the iPhone templates in Xcode, =
you do=20
not have to write this function yourself. The project templates include =
a=20
version of this function with all the code needed to start your =
application.=20
</P>
<P><SPAN class=3Dcontent_text>Listing 1</SPAN> shows the =
<CODE>main</CODE>=20
function for the MoveMe application. The main function is located in =
that=20
project's <CODE>main.m</CODE> file. Every application you create will =
have a=20
<CODE>main</CODE> function that is almost identical to this one. This =
function=20
performs two key tasks. First, it creates the application's top-level=20
autorelease pool, whose job is to reclaim the memory for Objective-C =
objects=20
that are freed using their <CODE>autorelease</CODE> method. Second, it =
calls the=20
<CODE>UIApplicationMain</CODE> function to create the MoveMe =
application's key=20
objects, initialize those objects, and start the event-processing loop. =
The=20
application does not return from this function until it quits. </P><A=20
title=3D"Listing 1Using the provided main function"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW9=20
turn_anchor=3D"yes"></A>
<P class=3Dcodesample><B>Listing 1&nbsp;&nbsp;</B>Using the provided=20
<CODE>main</CODE> function </P><PRE>int main(int argc, char =
*argv[])<SPAN></SPAN>
{<SPAN></SPAN>
    NSAutoreleasePool * pool =3D [[NSAutoreleasePool alloc] =
init];<SPAN></SPAN>
    int retVal =3D UIApplicationMain(argc, argv, nil, nil);<SPAN></SPAN>
    [pool release];<SPAN></SPAN>
    return retVal;<SPAN></SPAN>
}<SPAN></SPAN>
</PRE><A title=3D"Defining the Application Delegate"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-DontLinkElementID_1=20
turn_anchor=3D"yes"></A>
<H3>Defining the Application Delegate</H3>
<P>One of the most important architectural details of your project is =
defining=20
the application delegate object, which is instantiated from a class you =
provide=20
in your project. The application delegate class in MoveMe project =
declares its=20
interface in <CODE>MoveMeAppDelegate.h</CODE> and defines its =
implementation in=20
<CODE>MoveMeAppDelegate.m</CODE>. Once you have added these files to the =

project, you can use Interface Builder to designate the class as the =
application=20
delegate. Interface Builder is a visual tool that you use to create and =
arrange=20
views in a window, set up view hierarchies, configure each view's =
options, and=20
establish relationships between the views and the other objects of your=20
application. Because it is a visual tool, you perform all of these tasks =
by=20
dragging components around a window surface. The result is an =
interactive=20
version of your interface that you can see immediately and change in =
seconds.=20
Interface Builder saves your user interface in a file known as a nib =
file, which=20
is an archive of your application's object graph. </P>
<P>To launch Interface Builder and see how the application delegate =
object's=20
role is defined, double-click the <CODE>MainWindow.xib</CODE> file =
(under MoveMe=20
&gt; Resources) in the Groups &amp; Files pane of the Xcode project =
window.=20
<CODE>MainWindow.xib</CODE> is the nib file that contains your =
application's=20
window and defines the relationships among several important objects in =
your=20
application, including the application delegate. To see how the =
application=20
delegate relationship is established, click the File's Owner icon in the =
nib=20
file document window (titled =93MainWindow.xib=94), show the Inspector =
window=20
(choose Tools &gt; Inspector), and click the Inspector window's =
Application=20
Connections tab. As shown in <SPAN class=3Dcontent_text>Figure 3</SPAN>, =
the=20
Inspector shows that the File's Owner object (which represents the =
application=20
in the nib file) has a delegate outlet connected to the=20
<CODE>MoveMeAppDelegate</CODE> object. </P><BR><A=20
title=3D"Figure 3The application delegate"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW25=20
turn_anchor=3D"yes"></A>
<P><B>Figure 3&nbsp;&nbsp;</B>The application delegate </P>
<P><IMG height=3D361 alt=3D"Figure 3 The application delegate"=20
src=3D"http://devimages.apple.com/iphone/gettingstarted/docs/images/appde=
legate.jpg"=20
width=3D701> </P>
<P>The application delegate object works in tandem with the standard=20
<CODE>UIApplication</CODE> object to respond to changing conditions in =
the=20
application. The application object does most of the heavy lifting, but =
the=20
delegate is responsible for several key behaviors, including the =
following: </P>
<UL class=3Dsquare>
  <LI>Setting up the application's window and initial user interface=20
  <LI>Performing any additional initialization tasks needed for your =
custom data=20
  engine=20
  <LI>Opening content associated with the application's custom URL =
schemes=20
  <LI>Responding to changes in the orientation of the device=20
  <LI>Handling low-memory warnings=20
  <LI>Handling system requests to quit the application </LI></UL>
<P>At launch time, the most immediate concern for the delegate object is =
to set=20
up and present the application window to the user, which is described in =
<SPAN=20
class=3Dcontent_text>=93Creating the Application Window=94</SPAN>. The =
delegate should=20
also perform any tasks needed to prepare your application for immediate =
use,=20
such as restoring the application to a previous state or creating any =
required=20
objects. When the application quits, the delegate needs to perform an =
orderly=20
shutdown of the application and save any state information needed for =
the next=20
launch cycle. </P>
<P>For more information about the fundamental architecture and life =
cycle of an=20
iPhone application, see <SPAN class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/ApplicationEnvironment/chapter_6_sectio=
n_2.html"=20
target=3D_top>"Core Application Architecture"</A></SPAN> in <SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/index.html"=20
target=3D_top>iPhone OS Programming Guide</A></SPAN>. </P><A=20
title=3D"Creating the Application Window"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW10=20
turn_anchor=3D"yes"></A>
<H3>Creating the Application Window</H3>
<P>Every application is responsible for creating a window that spans the =
entire=20
screen and for filling that window with content. Graphical applications =
running=20
in iPhone OS do not run side-by-side with other applications. In fact, =
other=20
than the kernel and a few low-level system daemons, your application is =
the only=20
thing running after it is launched. What's more, your application should =
never=20
need more than one window=97an instance of the <CODE>UIWindow</CODE> =
class. In=20
situations where you need to change your user interface, you change the =
views=20
displayed by your window. </P>
<P>Windows provide the drawing surface for your user interface, but view =
objects=20
provide the actual content. A view object is an instance of the=20
<CODE>UIView</CODE> class that draws some content and responds to =
interactions=20
with that content. iPhone OS defines standard views to represent things =
such as=20
tables, buttons, text fields, and other types of interactive controls. =
You can=20
add any of these views to your window, or you can define custom views by =

subclassing <CODE>UIView</CODE> and implementing some custom drawing and =

event-handling code. The MoveMe application defines two such =
views=97represented=20
by the <CODE>MoveMeView</CODE> and <CODE>PlacardView</CODE> classes=97to =
display=20
the application's interface and handle user interactions. </P>
<P>At launch time, the goal is to create the application window and =
display some=20
initial content as quickly as possible. The window is unarchived from =
the=20
<CODE>MainWindow.xib</CODE> nib file. When the application reaches a =
state where=20
it is launched and ready to start processing events, the=20
<CODE>UIApplication</CODE> object sends the delegate an=20
<CODE>applicationDidFinishLaunching:</CODE> message. This message is the =

delegate's cue to put content in its window and perform any other =
initialization=20
the application might require. </P>
<P>In the MoveMe application, the delegate's=20
<CODE>applicationDidFinishLaunching:</CODE> method does the following: =
</P>
<OL class=3Dol>
  <LI>
  <P>It creates a view controller object whose job is to manage the =
content view=20
  of the window. </P>
  <LI>
  <P>It initializes the view controller with an instance of the=20
  <CODE>MoveMeView</CODE> class, which is stored in the=20
  <CODE>MoveMeView.xib</CODE> nib file, to act as the background view =
and fill=20
  the entire window frame. </P>
  <LI>
  <P>It adds the controller's view as a subview of the window. </P>
  <LI>
  <P>It shows the window. </P></LI></OL>
<P><SPAN class=3Dcontent_text>Listing 2</SPAN> shows the=20
<CODE>applicationDidFinishLaunching:</CODE> method for the MoveMe =
application,=20
which is defined in the application delegate's implementation file,=20
<CODE>MoveMeAppDelegate.m</CODE>. This method creates the main content =
view for=20
the window and makes the window visible. Showing the window lets the =
system know=20
that your application is ready to begin handling events. </P><A=20
title=3D"Listing 2Creating the content view"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW21=20
turn_anchor=3D"yes"></A>
<P class=3Dcodesample><B>Listing 2&nbsp;&nbsp;</B>Creating the content =
view </P><PRE>- (void)applicationDidFinishLaunching:(UIApplication =
*)application<SPAN></SPAN>
{<SPAN></SPAN>
    // Set up the view controller<SPAN></SPAN>
    UIViewController *aViewController =3D [[UIViewController =
alloc]<SPAN></SPAN>
               initWithNibName:@"MoveMeView" bundle:[NSBundle =
mainBundle]];<SPAN></SPAN>
    self.viewController =3D aViewController;<SPAN></SPAN>
    [aViewController release];<SPAN></SPAN>
 <SPAN></SPAN>
    // Add the view controller's view as a subview of the =
window<SPAN></SPAN>
    UIView *controllersView =3D [viewController view];<SPAN></SPAN>
    [window addSubview:controllersView];<SPAN></SPAN>
    [window makeKeyAndVisible];<SPAN></SPAN>
}<SPAN></SPAN>
</PRE>
<DIV class=3Dnotebox><A title=3DNote=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW4=20
turn_anchor=3D"yes"></A>
<P><B>Note:</B>&nbsp;You can use the =
<CODE>applicationDidFinishLaunching:</CODE>=20
method to perform other tasks besides setting up your application user=20
interface. Many applications use it to initialize required data =
structures, read=20
any user preferences, or return the application to the state it was in =
when it=20
last quit. </P>
<P></P></DIV>
<P>Although the preceding code creates the window's background view and =
then=20
shows the window, what you do not see in the preceding code is the =
creation of=20
the <CODE>PlacardView</CODE> class that displays the Welcome button. =
That=20
behavior is handled by the <CODE>setUpPlacardView</CODE> method of the=20
<CODE>MoveMeView</CODE> class, which is called from the=20
<CODE>initWithCoder:</CODE> method called when the =
<CODE>MoveMeView</CODE>=20
object is unarchived from its nib file. The =
<CODE>setUpPlacardView</CODE> method=20
is shown in <SPAN class=3Dcontent_text>Listing 3</SPAN>. Part of the=20
initialization of this view includes the creation of a =
<CODE>PlacardView</CODE>=20
object. Because the <CODE>MoveMeView</CODE> class provides the =
background for=20
the entire application, it adds the <CODE>PlacardView</CODE> object as a =

subview. The relationship between the two views not only causes the =
Welcome=20
button to be displayed on top of the application's background, it also =
allows=20
the <CODE>MoveMeView</CODE> class to handle events that are targeted at =
the=20
button. </P><A title=3D"Listing 3Creating the placard view"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW6=20
turn_anchor=3D"yes"></A>
<P class=3Dcodesample><B>Listing 3&nbsp;&nbsp;</B>Creating the placard =
view </P><PRE>- (void)setUpPlacardView<SPAN></SPAN>
{<SPAN></SPAN>
	=09
    // Create the placard view -- it calculates its own frame based on =
its image<SPAN></SPAN>
    PlacardView *aPlacardView =3D [[PlacardView alloc] =
init];<SPAN></SPAN>
    self.placardView =3D aPlacardView;<SPAN></SPAN>
    [aPlacardView release];<SPAN></SPAN>
    placardView.center =3D self.center;<SPAN></SPAN>
    [self addSubview:placardView];<SPAN></SPAN>
}<SPAN></SPAN>
</PRE>
<P>For detailed information about creating windows and views, see <SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/WindowsandViews/chapter_7_section_1.htm=
l"=20
target=3D_top>"Windows and Views"</A></SPAN> in <SPAN =
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/index.html"=20
target=3D_top>iPhone OS Programming Guide</A></SPAN>. </P><A=20
title=3D"Drawing the Welcome Button"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW27=20
turn_anchor=3D"yes"></A>
<H3>Drawing the Welcome Button</H3>
<P>The standard views provided by UIKit can be used without modification =
to draw=20
many types of simple content. For example, you can use the=20
<CODE>UIImageView</CODE> class to display images and the =
<CODE>UILabel</CODE>=20
class to display text strings. The <CODE>MoveMeView</CODE> class in the =
MoveMe=20
application also takes advantage of a basic property of all =
<CODE>UIView</CODE>=20
objects=97specifically, the <CODE>backgroundColor</CODE> property=97to =
fill the view=20
with a solid color. This property can be set in code in the view =
object's=20
initialization method. In this case, the property is set when=20
<CODE>MoveMeView</CODE> is created in the <CODE>MoveMeView.xib</CODE> =
nib file,=20
using a color well in the Attributes tab of the Inspector window of =
Interface=20
Builder. When you need to draw content dynamically, however, you must =
use the=20
more advanced drawing features found in UIKit or you must use Quartz or =
OpenGL=20
ES. </P>
<P>The <CODE>PlacardView</CODE> class in the MoveMe application draws =
the=20
Welcome button and manages its location on the screen. Although the=20
<CODE>PlacardView</CODE> class could draw its content using an embedded=20
<CODE>UIImageView</CODE> and <CODE>UILabel</CODE> object, it instead =
draws the=20
content explicitly, to demonstrate the overall process. As a result, =
this class=20
implements a <CODE>drawRect:</CODE> method, which is where all custom =
drawing=20
for a view takes place. </P>
<P>By the time a view's <CODE>drawRect:</CODE> method is called, the =
drawing=20
environment is configured and ready to go. All you have to do is specify =
the=20
drawing commands to draw any custom content. In the =
<CODE>PlacardView</CODE>=20
class, the content consists of a background image (stored in the=20
<CODE>Placard.png</CODE> resource file) and a custom string, the text =
for which=20
can change dynamically. To draw this content, the class takes the =
following=20
steps: </P>
<OL class=3Dol>
  <LI>
  <P>Draw the background image at the view's current origin. (Because =
the view=20
  is already sized to fit the image, this step provides the entire =
button=20
  background.) </P>
  <LI>
  <P>Compute the position of the welcome string so that it is centered =
in the=20
  button. (Because the string size can change, the position needs to be =
computed=20
  each time based on the current string size.) </P>
  <LI>
  <P>Set the drawing color to black. </P>
  <LI>
  <P>Draw the string in black, and slightly offset. </P>
  <LI>
  <P>Set the drawing color to white. </P>
  <LI>
  <P>Draw the string again in white at its intended location. =
</P></LI></OL>
<P><SPAN class=3Dcontent_text>Listing 4</SPAN> shows the =
<CODE>drawRect:</CODE>=20
method for the <CODE>PlacardView</CODE> class. The =
<CODE>placardImage</CODE>=20
member variable contains a <CODE>UIImage</CODE> object with the =
background for=20
the button and the <CODE>currentDisplayString</CODE> member variable is =
an=20
<CODE>NSString</CODE> object containing the welcome string. After =
drawing the=20
image, this method calculates the position of the string within the =
view. The=20
size of the string is already known, having been calculated when the =
string was=20
loaded and stored in the <CODE>textSize</CODE> member variable. The =
string is=20
then drawn twice=97once in black and once in white=97using the=20
<CODE>drawAtPoint:forWidth:withFont:fontSize:lineBreakMode:baselineAdjust=
ment:</CODE>=20
method of <CODE>NSString</CODE>. </P><A=20
title=3D"Listing 4Drawing the Welcome button"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW26=20
turn_anchor=3D"yes"></A>
<P class=3Dcodesample><B>Listing 4&nbsp;&nbsp;</B>Drawing the Welcome =
button </P><PRE>- (void)drawRect:(CGRect)rect<SPAN></SPAN>
{<SPAN></SPAN>
    // Draw the placard at 0, 0<SPAN></SPAN>
    [placardImage drawAtPoint:(CGPointMake(0.0, 0.0))];<SPAN></SPAN>
 <SPAN></SPAN>
    /*<SPAN></SPAN>
     Draw the current display string.<SPAN></SPAN>
     This could be done using a UILabel, but this serves to =
illustrate<SPAN></SPAN>
     the UIKit extensions to NSString. The text is drawn center of =
the<SPAN></SPAN>
     view twice - first slightly offset in black, then in white -- to =
give<SPAN></SPAN>
     an embossed appearance. The size of the font and text are =
calculated<SPAN></SPAN>
     in setupNextDisplayString.<SPAN></SPAN>
     */<SPAN></SPAN>
 <SPAN></SPAN>
    // Find point at which to draw the string so it will be in the =
center of the view<SPAN></SPAN>
    CGFloat x =3D self.bounds.size.width/2 - =
textSize.width/2;<SPAN></SPAN>
    CGFloat y =3D self.bounds.size.height/2 - =
textSize.height/2;<SPAN></SPAN>
    CGPoint point;<SPAN></SPAN>
 <SPAN></SPAN>
    // Get the font of the appropriate size<SPAN></SPAN>
    UIFont *font =3D [UIFont systemFontOfSize:fontSize];<SPAN></SPAN>
 <SPAN></SPAN>
    [[UIColor blackColor] set];<SPAN></SPAN>
    point =3D CGPointMake(x, y + 0.5);<SPAN></SPAN>
    [currentDisplayString drawAtPoint:point<SPAN></SPAN>
                =
forWidth:(self.bounds.size.width-STRING_INDENT)<SPAN></SPAN>
                withFont:font<SPAN></SPAN>
                fontSize:fontSize<SPAN></SPAN>
                =
lineBreakMode:UILineBreakModeMiddleTruncation<SPAN></SPAN>
                =
baselineAdjustment:UIBaselineAdjustmentAlignBaselines];<SPAN></SPAN>
 <SPAN></SPAN>
    [[UIColor whiteColor] set];<SPAN></SPAN>
    point =3D CGPointMake(x, y);<SPAN></SPAN>
		=09
    [currentDisplayString drawAtPoint:point<SPAN></SPAN>
                =
forWidth:(self.bounds.size.width-STRING_INDENT)<SPAN></SPAN>
                withFont:font<SPAN></SPAN>
                fontSize:fontSize<SPAN></SPAN>
                =
lineBreakMode:UILineBreakModeMiddleTruncation<SPAN></SPAN>
                =
baselineAdjustment:UIBaselineAdjustmentAlignBaselines];<SPAN></SPAN>
}<SPAN></SPAN>
</PRE>
<P>When you need to draw content that is more complex than images and =
strings,=20
you can use Quartz or OpenGL ES. Quartz works with UIKit to handle the =
drawing=20
of vector-based paths, images, gradients, PDF, and other complex content =
that=20
you want to create dynamically. Because Quartz and UIKit are based on =
the same=20
drawing environment, you can call Quartz functions directly from the=20
<CODE>drawRect:</CODE> method of your view and even mix and match Quartz =
calls=20
through the use of UIKit classes. </P>
<P>OpenGL ES is an alternative to Quartz and UIKit that lets you render =
2D and=20
3D content using a set of functions that resemble (but are not exactly =
like)=20
those found in OpenGL for Mac OS X. Unlike Quartz and UIKit, you do not =
use your=20
view's <CODE>drawRect:</CODE> method to do your drawing. You still use a =
view,=20
but you use that view object primarily to provide the drawing surface =
for your=20
OpenGL ES code. How often you update the drawing surface, and which =
objects you=20
use to do so, are your decision. </P>
<P>For detailed information about each of the drawing technologies and =
how you=20
use them, see <SPAN class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/GraphicsandDrawing/chapter_9_section_1.=
html"=20
target=3D_top>"Graphics and Drawing"</A></SPAN> in <SPAN =
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/index.html"=20
target=3D_top>iPhone OS Programming Guide</A></SPAN>. </P><A=20
title=3D"Handling Touch Events"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW30=20
turn_anchor=3D"yes"></A>
<H3>Handling Touch Events</H3>
<P>The Multi-Touch interface in iPhone OS makes it possible for your =
application=20
to recognize and respond to distinct events generated by multiple =
fingers=20
touching the device. The ability to respond to multiple fingers offers=20
considerable power but represents a significant departure from the way=20
traditional, mouse-based event-handling systems operate. As each finger =
touches=20
the surface of the device, the touch sensor generates a new touch event. =
As each=20
finger moves, additional touch events are generated to indicate the =
finger's new=20
position. When a finger loses contact with the device surface, the =
system=20
delivers yet another touch event to indicate that fact. </P>
<P>Because there may be multiple fingers touching the device at one =
time, it is=20
possible for you to use those events to identify complex user gestures. =
The=20
system provides some help in detecting common gestures such as swipes, =
but you=20
are responsible for detecting more complex gestures. When the event =
system=20
generates a new touch event, it includes information about the current =
state of=20
each finger that is either touching or was just removed from the surface =
of the=20
device. Because each event object contains information about all active =
touches,=20
you can monitor the actions of each finger with the arrival of each new =
event.=20
You can then track the movements of each finger from event to event to =
detect=20
gestures, which you can apply to the contents of your application. For =
example,=20
if the events indicate the user is performing a pinch-close or =
pinch-open=20
gesture (as shown in <SPAN class=3Dcontent_text>Figure 4</SPAN>) and the =

underlying view supports magnification, you could use those events to =
change the=20
current zoom level. </P><BR><A=20
title=3D"Figure 4Using touch events to detect gestures"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW12=20
turn_anchor=3D"yes"></A>
<P><B>Figure 4&nbsp;&nbsp;</B>Using touch events to detect gestures =
</P><IMG=20
height=3D189 alt=3D"Using touch events to detect gestures"=20
src=3D"http://devimages.apple.com/iphone/gettingstarted/docs/images/multi=
-touch.jpg"=20
width=3D556> <BR>
<P>The system delivers events to the application's responder objects, =
which are=20
instances of the <CODE>UIResponder</CODE> class. In an iPhone =
application, your=20
application's views form the bulk of your custom responder objects. The =
MoveMe=20
application implements two view classes, but only the =
<CODE>MoveMeView</CODE>=20
class actually responds to event messages. This class detects taps both =
inside=20
and outside the bounds of the Welcome button by overriding the following =
methods=20
of <CODE>UIResponder</CODE>: </P><PRE>- (void)touchesBegan:(NSSet =
*)touches withEvent:(UIEvent *)event;<SPAN></SPAN>
- (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent =
*)event;<SPAN></SPAN>
- (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent =
*)event;<SPAN></SPAN>
</PRE>
<P>To simplify its own event-handling behavior, the MoveMe application =
tracks=20
only the first finger to touch the surface of the device. It does this =
with the=20
support of the <CODE>UIView</CODE> class, which disables multi-touch =
events by=20
default. For applications that do not need to track multiple fingers, =
this=20
feature is a great convenience. When multi-touch events are disabled, =
the system=20
delivers events only related to the first finger to touch the device. =
Events=20
related to additional touches in a sequence are never delivered to the =
view. If=20
you want the information for those additional touches, however, you can =
reenable=20
multi-touch support using the <CODE>setMultipleTouchEnabled:</CODE> =
method of=20
the <CODE>UIView</CODE> class. </P>
<P>As part of its event-handling behavior, the <CODE>MoveMeView</CODE> =
class=20
performs the following steps: </P>
<OL class=3Dol>
  <LI>When a touch first arrives, it checks to see where the event =
occurred.=20
  <UL class=3Dsquare>
    <LI>Double-taps outside the Welcome button update the string =
displayed by=20
    the button.=20
    <LI>Single taps inside the button center the button underneath the =
finger=20
    and trigger an initial animation to enlarge the button.=20
    <LI>All other touches are ignored. </LI></UL>
  <LI>
  <P>If the finger moves and is inside the button, the button's position =
is=20
  updated to match the new position of the finger. </P>
  <LI>
  <P>If the finger was inside the button and then lifts off the surface =
of the=20
  device, an animation moves the button back to its original position.=20
</P></LI></OL>
<P><SPAN class=3Dcontent_text>Listing 5</SPAN> shows the=20
<CODE>touchesBegan:withEvent:</CODE> method for the =
<CODE>MoveMeView</CODE>=20
class. The system calls this method when a finger first touches the =
device. This=20
method gets the set of all touches and extracts the one and only touch =
object=20
from it. The information in the <CODE>UITouch</CODE> object is used to =
identify=20
in which view the touch occurred (the <CODE>MoveMeView</CODE> object or =
the=20
<CODE>PlacardView</CODE> object) and the number of taps associated with =
the=20
touch. If the touch represents a double tap outside the button, the=20
<CODE>touchesBegan:withEvent:</CODE> method calls the=20
<CODE>setupNextDisplayString</CODE> method to change the welcome string =
of the=20
button. If the event occurred inside the Welcome button, it uses the=20
<CODE>animateFirstTouchAtPoint:</CODE> method to grow the button and =
track it to=20
the touch location. All other touch-related events are ignored. </P><A=20
title=3D"Listing 5Handling an initial touch event"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW13=20
turn_anchor=3D"yes"></A>
<P class=3Dcodesample><B>Listing 5&nbsp;&nbsp;</B>Handling an initial =
touch event=20
</P><PRE>- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent =
*)event<SPAN></SPAN>
{<SPAN></SPAN>
    // We only support single touches, so anyObject<SPAN></SPAN>
    // retrieves just that touch from touches<SPAN></SPAN>
    UITouch *touch =3D [touches anyObject];<SPAN></SPAN>
 <SPAN></SPAN>
    // Only move the placard view if the touch was in the placard =
view<SPAN></SPAN>
    if ([touch view] !=3D placardView)<SPAN></SPAN>
    {<SPAN></SPAN>
        // In case of a double tap outside the placard =
view,<SPAN></SPAN>
        // update the placard's display string<SPAN></SPAN>
        if ([touch tapCount] =3D=3D 2)<SPAN></SPAN>
        {<SPAN></SPAN>
            [placardView setupNextDisplayString];<SPAN></SPAN>
        }<SPAN></SPAN>
        return;<SPAN></SPAN>
    }<SPAN></SPAN>
    // Animate the first touch<SPAN></SPAN>
    CGPoint touchPoint =3D [touch locationInView:self];<SPAN></SPAN>
    [self animateFirstTouchAtPoint:touchPoint];<SPAN></SPAN>
}<SPAN></SPAN>
</PRE>
<P><SPAN class=3Dcontent_text>Listing 6</SPAN> shows the=20
<CODE>touchesMoved:withEvent:</CODE> method of the =
<CODE>MoveMeView</CODE>=20
class. The system calls this method after the finger has touched the =
device and=20
in response to it moving from its original location. The MoveMe =
application=20
tracks only those movements that occur within the Welcome button. As a =
result,=20
this method checks the location of the event and uses it to adjust the =
center=20
point of the <CODE>PlacardView</CODE> object. The movement of the view =
causes it=20
to be redrawn at the new location automatically. </P><A=20
title=3D"Listing 6Responding to movement from a touch"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW14=20
turn_anchor=3D"yes"></A>
<P class=3Dcodesample><B>Listing 6&nbsp;&nbsp;</B>Responding to movement =
from a=20
touch </P><PRE>- (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent =
*)event<SPAN></SPAN>
{<SPAN></SPAN>
    UITouch *touch =3D [touches anyObject];<SPAN></SPAN>
 <SPAN></SPAN>
    // If the touch was in the placardView, move the =
placardView<SPAN></SPAN>
    // to its location<SPAN></SPAN>
    if ([touch view] =3D=3D placardView)<SPAN></SPAN>
    {<SPAN></SPAN>
        CGPoint location =3D [touch locationInView:self];<SPAN></SPAN>
        placardView.center =3D location;<SPAN></SPAN>
        return;<SPAN></SPAN>
    }<SPAN></SPAN>
}<SPAN></SPAN>
</PRE>
<P>When the user's finger finally lifts from the screen, the MoveMe =
application=20
responds by triggering an animation to move the button back to its =
starting=20
position in the center of the application's window. <SPAN=20
class=3Dcontent_text>Listing 7</SPAN> shows the=20
<CODE>touchesEnded:withEvent:</CODE> method that initiates the =
animation. </P><A=20
title=3D"Listing 7Releasing the Welcome button"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW15=20
turn_anchor=3D"yes"></A>
<P class=3Dcodesample><B>Listing 7&nbsp;&nbsp;</B>Releasing the Welcome =
button=20
</P><PRE>- (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent =
*)event<SPAN></SPAN>
{<SPAN></SPAN>
    UITouch *touch =3D [touches anyObject];<SPAN></SPAN>
 <SPAN></SPAN>
    // If the touch was in the placardView, bounce it back to the =
center<SPAN></SPAN>
    if ([touch view] =3D=3D placardView)<SPAN></SPAN>
    {<SPAN></SPAN>
        // Disable user interaction so subsequent touches<SPAN></SPAN>
        // don't interfere with animation<SPAN></SPAN>
        self.userInteractionEnabled =3D NO;<SPAN></SPAN>
        [self animatePlacardViewToCenter];<SPAN></SPAN>
        return;<SPAN></SPAN>
    }<SPAN></SPAN>
}<SPAN></SPAN>
</PRE>
<P>To simplify the event handling process for the application, the=20
<CODE>touchesEnded:withEvent:</CODE> method disables touch events for =
the view=20
temporarily while the button animates back to its original position. If =
it did=20
not do this, each of the event-handling methods would need to include =
logic to=20
determine whether the button was in the middle of an animation and, if =
so,=20
cancel the animation. Disabling user interactions for the short time it =
takes=20
the button to travel back to the center of the screen simplifies the =
event=20
handling code and eliminates the need for the extra logic. Upon reaching =
its=20
original position, the <CODE>animationDidStop:finished:</CODE> method of =
the=20
<CODE>MoveMeView</CODE> class reenables user interactions so that the =
event=20
cycle can begin all over again. </P>
<P>For more information on handling events in iPhone OS, see <SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/EventHandling/chapter_8_section_1.html"=
=20
target=3D_top>"Event Handling"</A></SPAN> in <SPAN =
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/index.html"=20
target=3D_top>iPhone OS Programming Guide</A></SPAN>. </P><A=20
title=3D"Animating the Button's Movement"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW29=20
turn_anchor=3D"yes"></A>
<H3>Animating the Button's Movement</H3>
<P>In iPhone applications, animation plays a very important role. =
Animation is=20
used extensively to provide the user with contextual information and =
immediate=20
feedback. For example, when the user navigates hierarchical data in a=20
productivity application, rather than just replace one screen with =
another,=20
iPhone applications animate the movement of each new screen into place. =
The=20
direction of movement indicates whether the user is moving up or down in =
the=20
hierarchy and also provides a visual cue that there is new information =
to look=20
at. </P>
<P>Because of its importance, support for animation is built into the =
classes of=20
UIKit already. The MoveMe application takes advantage of this support by =
using=20
it to animate the different aspects of the Welcome button. When the user =
first=20
touches the button, the application applies an animation that causes the =
size of=20
the button to grow briefly. When the user lets go of the button, another =

animation snaps it back to its original position. The basic steps for =
creating=20
these animations are essentially the same: </P>
<OL class=3Dol>
  <LI>
  <P>Call the <CODE>beginAnimations:context:</CODE> method of the view =
you want=20
  to animate. </P>
  <LI>
  <P>Configure the animation properties. </P>
  <LI>
  <P>Call the <CODE>commitAnimations</CODE> method of the view to begin =
the=20
  animation. </P></LI></OL>
<P><SPAN class=3Dcontent_text>Listing 8</SPAN> shows the animation code =
used to=20
pulse the Welcome button when it is first touched. This method sets the =
duration=20
of the animation and then applies a transform to the button that scales =
it to=20
its new size. When this animation completes, the animation =
infrastructure calls=20
the <CODE>growAnimationDidStop:finished:context:</CODE> method of the =
animation=20
delegate, which completes the pulse animation by shrinking the button =
slightly=20
and moving the placard view under the touch. </P><A=20
title=3D"Listing 8Animating the Welcome button"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW16=20
turn_anchor=3D"yes"></A>
<P class=3Dcodesample><B>Listing 8&nbsp;&nbsp;</B>Animating the Welcome =
button=20
</P><PRE>- =
(void)animateFirstTouchAtPoint:(CGPoint)touchPoint<SPAN></SPAN>
{<SPAN></SPAN>
#define GROW_ANIMATION_DURATION_SECONDS 0.15<SPAN></SPAN>
 <SPAN></SPAN>
    NSValue *touchPointValue =3D [[NSValue valueWithCGPoint:touchPoint] =
retain];<SPAN></SPAN>
    [UIView beginAnimations:nil context:touchPointValue];<SPAN></SPAN>
    [UIView =
setAnimationDuration:GROW_ANIMATION_DURATION_SECONDS];<SPAN></SPAN>
    [UIView setAnimationDelegate:self];<SPAN></SPAN>
    [UIView setAnimationDidStopSelector: =
@selector(growAnimationDidStop:finished:context:)];<SPAN></SPAN>
    CGAffineTransform transform =3D CGAffineTransformMakeScale(1.2, =
1.2);<SPAN></SPAN>
    placardView.transform =3D transform;<SPAN></SPAN>
    [UIView commitAnimations];<SPAN></SPAN>
}<SPAN></SPAN>
 <SPAN></SPAN>
- (void)growAnimationDidStop:(NSString *)animationID finished:(NSNumber =
*)finished context:(void *)context<SPAN></SPAN>
{<SPAN></SPAN>
    #define MOVE_ANIMATION_DURATION_SECONDS 0.15<SPAN></SPAN>
 <SPAN></SPAN>
    [UIView beginAnimations:nil context:NULL];<SPAN></SPAN>
    [UIView =
setAnimationDuration:MOVE_ANIMATION_DURATION_SECONDS];<SPAN></SPAN>
    placardView.transform =3D CGAffineTransformMakeScale(1.1, =
1.1);<SPAN></SPAN>
 <SPAN></SPAN>
    // Move the placard view under the touch<SPAN></SPAN>
    NSValue *touchPointValue =3D (NSValue *)context;<SPAN></SPAN>
    placardView.center =3D [touchPointValue CGPointValue];<SPAN></SPAN>
    [touchPointValue release];<SPAN></SPAN>
    [UIView commitAnimations];<SPAN></SPAN>
}<SPAN></SPAN>
</PRE>
<P>For more information about using the built-in view-based animations, =
see=20
<SPAN class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/WindowsandViews/chapter_7_section_6.htm=
l"=20
target=3D_top>"Animating Views"</A></SPAN> in <SPAN =
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/index.html"=20
target=3D_top>iPhone OS Programming Guide</A></SPAN>. For more =
information about=20
Core Animation, see <SPAN class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/GraphicsandDrawing/chapter_9_section_6.=
html"=20
target=3D_top>"Applying Core Animation Effects"</A></SPAN> in <SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/index.html"=20
target=3D_top>iPhone OS Programming Guide</A></SPAN>. </P><A=20
title=3D"Finishing the Application"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW5=20
turn_anchor=3D"yes"></A>
<H3>Finishing the Application</H3>
<P>In the preceding sections, you saw how the MoveMe application was=20
initialized, presented its user interface, and responded to events. In =
addition=20
to those aspects of the application creation, there are also smaller =
details=20
that need to be considered before building an application and loading it =
onto a=20
device. One of the final pieces to put in place is your application's=20
information property-list (<CODE>Info.plist</CODE>) file. It is an XML =
file that=20
communicates basic information about your application to the system. =
Xcode=20
creates a default version of this file for you and inserts your =
application's=20
initial configuration information into it. You can extend this =
information,=20
however, to provide additional details about your application that the =
system=20
should know. For example, you would use this file to communicate =
information=20
about your application version, any custom URL schemes it supports, its =
launch=20
image, and the default visibility status and style of the system status =
bar.=20
</P>
<P><SPAN class=3Dcontent_text>Listing 9</SPAN> shows the contents of the =

<CODE>Info.plist</CODE> file for the MoveMe application. This file =
identifies=20
the name of the executable, the image file to display on the user's Home =
screen,=20
and the string that identifies the application uniquely to the system. =
Because=20
the MoveMe application is a full-screen application=97in other words, it =
does not=20
display the status bar=97it also includes the =
<CODE>UIStatusBarHidden</CODE> key=20
and assigns to it the value <CODE>true</CODE>. Setting this key to=20
<CODE>true</CODE> lets the system know that it should not display the=20
application status bar at launch time or while the application is =
running.=20
Although the MoveMe application could configure this same behavior=20
programmatically, that behavior would not take effect until after the=20
application was already launched, which might look odd. </P><A=20
title=3D"Listing 9The contents of the Info.plist file"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW8=20
turn_anchor=3D"yes"></A>
<P class=3Dcodesample><B>Listing 9&nbsp;&nbsp;</B>The contents of the=20
<CODE>Info.plist</CODE> file </P><PRE>&lt;?xml version=3D"1.0" =
encoding=3D"UTF-8"?&gt;<SPAN></SPAN>
&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"<SPAN></SPAN>
"http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;<SPAN></SPAN>
&lt;plist version=3D"1.0"&gt;<SPAN></SPAN>
&lt;dict&gt;<SPAN></SPAN>
    &lt;key&gt;CFBundleDevelopmentRegion&lt;/key&gt;<SPAN></SPAN>
    &lt;string&gt;en&lt;/string&gt;<SPAN></SPAN>
    &lt;key&gt;CFBundleDisplayName&lt;/key&gt;<SPAN></SPAN>
    &lt;string&gt;${PRODUCT_NAME}&lt;/string&gt;<SPAN></SPAN>
    &lt;key&gt;CFBundleExecutable&lt;/key&gt;<SPAN></SPAN>
    &lt;string&gt;${EXECUTABLE_NAME}&lt;/string&gt;<SPAN></SPAN>
    &lt;key&gt;CFBundleIconFile&lt;/key&gt;<SPAN></SPAN>
    &lt;string&gt;Icon.png&lt;/string&gt;<SPAN></SPAN>
    &lt;key&gt;CFBundleIdentifier&lt;/key&gt;<SPAN></SPAN>
    =
&lt;string&gt;com.yourcompany.${PRODUCT_NAME:identifier}&lt;/string&gt;<S=
PAN></SPAN>
    &lt;key&gt;CFBundleInfoDictionaryVersion&lt;/key&gt;<SPAN></SPAN>
    &lt;string&gt;6.0&lt;/string&gt;<SPAN></SPAN>
    &lt;key&gt;CFBundleName&lt;/key&gt;<SPAN></SPAN>
    &lt;string&gt;${PRODUCT_NAME}&lt;/string&gt;<SPAN></SPAN>
    &lt;key&gt;CFBundlePackageType&lt;/key&gt;<SPAN></SPAN>
    &lt;string&gt;APPL&lt;/string&gt;<SPAN></SPAN>
    &lt;key&gt;CFBundleSignature&lt;/key&gt;<SPAN></SPAN>
    &lt;string&gt;????&lt;/string&gt;<SPAN></SPAN>
    &lt;key&gt;CFBundleVersion&lt;/key&gt;<SPAN></SPAN>
    &lt;string&gt;1.0&lt;/string&gt;<SPAN></SPAN>
    &lt;key&gt;UIStatusBarHidden&lt;/key&gt;<SPAN></SPAN>
    &lt;true/&gt;<SPAN></SPAN>
    &lt;key&gt;NSMainNibFile&lt;/key&gt;<SPAN></SPAN>
    &lt;string&gt;MainWindow&lt;/string&gt;<SPAN></SPAN>
&lt;/dict&gt;<SPAN></SPAN>
&lt;/plist&gt;<SPAN></SPAN>
</PRE>
<DIV class=3Dnotebox><A title=3DNote=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW22=20
turn_anchor=3D"yes"></A>
<P><B>Note:</B>&nbsp;You can edit the contents of your application's=20
<CODE>Info.plist</CODE> file using TextEdit, which displays the XML =
contents of=20
the file as shown in <SPAN class=3Dcontent_text>=93The contents of the =
Info.plist=20
file=94</SPAN>, or the Property List Editor, which displays the file's =
keys and=20
values in a table. Xcode also provides access to some of these =
attributes in the=20
information window for your application target. To view this window, =
select your=20
application target (in the Targets group) and choose File &gt; Get Info. =
The=20
Properties tab contains some (but not all) of the properties in the=20
<CODE>Info.plist</CODE> file. </P>
<P></P></DIV>
<P>For information about configuring your application's =
<CODE>Info.plist</CODE>=20
file, see <SPAN class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/ApplicationEnvironment/chapter_6_sectio=
n_5.html"=20
target=3D_top>"The Information Property List"</A></SPAN> in <SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/index.html"=20
target=3D_top>iPhone OS Programming Guide</A></SPAN>. </P>
<P>With this final piece in place, you now have all of the basic =
information=20
needed to create your own functional iPhone application. The next step =
is to=20
expand on the information you learned here by learning more about the =
features=20
of iPhone OS. The applications you create should take advantage of the =
built-in=20
features of iPhone OS to create a pleasant and intuitive user =
experience. Some=20
of these features are described in <SPAN class=3Dcontent_text>=93Taking =
Your=20
Applications Further=94</SPAN>, but for a complete list, and for =
information on=20
how to use them, see <SPAN class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/index.html"=20
target=3D_top>iPhone OS Programming Guide</A></SPAN>. </P><A=20
title=3D"Taking Your Applications Further"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW37=20
turn_anchor=3D"yes"></A>
<H3>Taking Your Applications Further</H3>
<P>There are many features associated with iPhone and iPod touch that =
users take=20
for granted. Some of these features are hardware related, such as the =
automatic=20
adjustment of views in response to a change in a device's orientation. =
Others=20
are software related, such as the fact that the built-in iPhone =
applications all=20
share a single list of contacts. Because so many of the features =
described next=20
are integral to the basic user experience, you should consider them =
during your=20
initial design to see how they might fit into your application. </P><A=20
title=3D"Tracking Orientation and Motion Using the Accelerometers"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW31=20
turn_anchor=3D"yes"></A>
<H4>Tracking Orientation and Motion Using the Accelerometers</H4>
<P>The accelerometers in iPhone and iPod touch provide valuable input =
for the=20
system and for your own custom applications. An accelerometer measures =
changes=20
in velocity along a single linear axis. Both iPhone and iPod touch have =
three=20
accelerometers to measure changes along each of the primary axes in=20
three-dimensional space, allowing you to detect motion in any direction. =

</P><BR><A title=3D"Figure 5Accelerometer axes"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW38=20
turn_anchor=3D"yes"></A>
<P><B>Figure 5&nbsp;&nbsp;</B>Accelerometer axes </P><IMG height=3D389=20
alt=3D"Accelerometer axes"=20
src=3D"http://devimages.apple.com/iphone/gettingstarted/docs/images/devic=
e_axes.jpg"=20
width=3D367> <BR>
<P>Although you might not think measuring changes in acceleration would =
be very=20
useful, in reality there is a lot you can do with the information. The =
force of=20
gravity is constantly trying to pull objects to the ground. This force =
results=20
in a measurable amount of acceleration toward the ground even when the =
device is=20
at rest. By tracking which accelerometers are registering this =
acceleration, and=20
the extent of that acceleration, you can detect the physical orientation =
of a=20
device in 3D space with a fair amount of accuracy. You can then apply =
this=20
orientation as input to your application. </P>
<P>The system uses the accelerometers to monitor a device's current =
orientation=20
and to notify your application when that orientation changes. If your=20
application's interface can be displayed in both landscape and portrait =
mode,=20
you should incorporate view controllers into your basic design. The=20
<CODE>UIViewController</CODE> class provides the infrastructure needed =
to rotate=20
your interface and adjust the position of views automatically in =
response to=20
orientation changes. </P>
<P>If you want access to the raw accelerometer data directly, you can do =
so=20
using the shared <CODE>UIAccelerometer</CODE> object in UIKit. The=20
<CODE>UIAccelerometer</CODE> object reports the current accelerometer =
values at=20
a configurable interval. You can also use the data to detect the =
device's=20
orientation or to detect other types of instantaneous motion, such as =
the user=20
shaking the device back and forth. You can then use this information as =
input to=20
a game or other application. For examples of how to configure the=20
<CODE>UIAccelerometer</CODE> object and receive accelerometer events, =
see <SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/AdvancedFeatures/chapter_11_section_2.h=
tml"=20
target=3D_top>"Accessing Accelerometer Events"</A></SPAN> in <SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/index.html"=20
target=3D_top>iPhone OS Programming Guide</A></SPAN>. </P><A=20
title=3D"Accessing the User's Contacts"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW34=20
turn_anchor=3D"yes"></A>
<H4>Accessing the User's Contacts</H4>
<P>The user's list of contacts is an important resource that all system=20
applications share. The Phone, Mail, and SMS Text applications use it to =

identify people the user needs to contact and to facilitate basic =
interactions=20
such as starting a phone call, email, or text message. Your own =
applications can=20
access this list of contacts for similar purposes or to get other =
information=20
relevant to your application's needs. </P><BR><A=20
title=3D"Figure 6Accessing the user's contacts"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW23=20
turn_anchor=3D"yes"></A>
<P><B>Figure 6&nbsp;&nbsp;</B>Accessing the user's contacts </P><IMG =
height=3D312=20
alt=3D"Accessing the user's contacts"=20
src=3D"http://devimages.apple.com/iphone/gettingstarted/docs/images/conta=
ct_photo.jpg"=20
width=3D166> <BR><BR>
<P>iPhone OS provides both direct access to the user's contacts and =
indirect=20
access through a set of standard picker interfaces. Using direct access, =
you can=20
obtain the contact information directly from the contacts database. You =
might=20
use this information in cases where you want to present contact =
information in a=20
different way or filter it based on application-specific criteria. In =
cases=20
where you do not need custom interface, however, iPhone OS also provides =
the set=20
of standard system interfaces for picking and creating contacts. =
Incorporating=20
these interfaces into your applications requires little effort but makes =
your=20
application look and feel like it's part of the system. </P>
<P>You access the user's contact information using the Address Book and =
Address=20
Book UI frameworks. For more information about these frameworks, see =
<SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/AddressBo=
ok/Reference/AddressBook_iPhoneOS_Framework/index.html"=20
target=3D_top>Address Book Framework Reference</A></SPAN> and <SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/AddressBo=
okUI/Reference/AddressBookUI_Framework/index.html"=20
target=3D_top>Address Book UI Framework Reference</A></SPAN>. </P><A=20
title=3D"Getting the User's Current Location"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW32=20
turn_anchor=3D"yes"></A>
<H4>Getting the User's Current Location</H4>
<P>Devices that run iPhone OS are meant for users on the go. Therefore =
the=20
software you write for these devices should also take this fact into =
account.=20
And because the Internet and web make it possible to do business =
anywhere, being=20
able to tailor information for the user's current location can make for =
a=20
compelling user experience. After all, why list coffee shops in New York =
for=20
someone who is thirsty and currently in Los Angeles? That's where the =
Core=20
Location framework can help. </P>
<P>The Core Location framework monitors signals coming from cell phone =
towers=20
and Wi-Fi hotspots and uses them to triangulate the user's current =
position. You=20
can use this framework to grab an initial location fix only, or you can =
be=20
notified whenever the user's location changes. With this information, =
you can=20
filter the information your application provides or use it in other =
ways. </P>
<P>For an example of how to get location data in your application, see =
<SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/AdvancedFeatures/chapter_11_section_3.h=
tml"=20
target=3D_top>"Getting the User's Current Location"</A></SPAN> in <SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/index.html"=20
target=3D_top>iPhone OS Programming Guide</A></SPAN>. </P><A=20
title=3D"Playing Audio and Video"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW18=20
turn_anchor=3D"yes"></A>
<H4>Playing Audio and Video</H4>
<P>iPhone OS supports audio features in your application through the =
Core Audio=20
and OpenAL frameworks, and provides video playback support using the =
Media=20
Player framework. Core Audio provides an advanced interface for playing, =

recording, and manipulating sound and for parsing streamed audio. You =
can use it=20
to play back simple sound effects or multichannel audio, mix sounds and =
position=20
them in an audio field, and even trigger the vibrate feature of an =
iPhone. If=20
you are a game developer and already have code that takes advantage of =
OpenAL,=20
you can use your code in iPhone OS to position and play back audio in =
your=20
games. </P>
<P>The Media Player framework is what you use to play back full-screen =
video=20
files. This framework supports the playback of many standard movie file =
formats=20
and gives you control over the playback environment, including whether =
to=20
display user controls and how to configure the aspect ratio of video =
content.=20
Game developers might use this framework to play cut scenes or other =
prerendered=20
content, while media-based applications can also use this framework to =
play back=20
movie files. </P><BR><A title=3D"Figure 7Playing back custom video"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW19=20
turn_anchor=3D"yes"></A>
<P><B>Figure 7&nbsp;&nbsp;</B>Playing back custom video </P><IMG =
height=3D166=20
alt=3D"Playing back custom video"=20
src=3D"http://devimages.apple.com/iphone/gettingstarted/docs/images/video=
.jpg"=20
width=3D312> <BR><BR>
<P>For information about the media technologies in iPhone OS, see <SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/AudioandVideoTechnologies/chapter_10_se=
ction_1.html"=20
target=3D_top>"Audio and Video Technologies"</A></SPAN> in <SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/index.html"=20
target=3D_top>iPhone OS Programming Guide</A></SPAN>. </P><A=20
title=3D"Taking Pictures with the Built-in Camera"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW35=20
turn_anchor=3D"yes"></A>
<H4>Taking Pictures with the Built-in Camera</H4>
<P>The Camera application on iPhone lets users take pictures and store =
them in a=20
centralized photo library, along with the other pictures they upload =
from their=20
computer. And although the iPod touch has no camera, it does have a =
photo=20
library to hold the user's uploaded pictures. iPhone OS provides access =
to both=20
of these features through the <CODE>UIImagePickerController</CODE> class =
in the=20
UIKit framework. </P><BR><A title=3D"Figure 8The iPhone camera"=20
name=3D//apple_ref/doc/uid/TempBookID-ReplacedWhenAssociatingWithMessierR=
evision-SW28=20
turn_anchor=3D"yes"></A>
<P><B>Figure 8&nbsp;&nbsp;</B>The iPhone camera </P><IMG height=3D290=20
alt=3D"Taking pictures with the camera"=20
src=3D"http://devimages.apple.com/iphone/gettingstarted/docs/images/iPhon=
eBack.jpg"=20
width=3D155> <BR><BR>
<P>The <CODE>UIImagePickerController</CODE> class provides the =
implementation=20
for both the camera and photo library interfaces for your application. =
These are=20
the standard system interfaces used by other applications, including the =
Camera=20
and Photos applications. When you display the picker interface, the =
picker=20
controller takes care of all of the required user interactions and =
returns the=20
resulting image to your application. </P>
<P>For information on how to use the picker interfaces, see <SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/AdvancedFeatures/chapter_11_section_4.h=
tml"=20
target=3D_top>"Taking Pictures with the Camera"</A></SPAN> and <SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/AdvancedFeatures/chapter_11_section_5.h=
tml"=20
target=3D_top>"Picking a Photo from the Photo Library"</A></SPAN> in =
<SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/index.html"=20
target=3D_top>iPhone OS Programming Guide</A></SPAN>. =
</P></DIV><!--/content-->
<DIV id=3Dsidebar>
<DIV class=3Dsidebox>
<H3>Browse Getting Started Documents</H3>
<DIV class=3Dsb>
<UL class=3Dnav>
  <LI id=3Dsbn-iphoneosoverview><A=20
  =
href=3D"http://developer.apple.com/iphone/gettingstarted/docs/iphoneosove=
rview.action">iPhone=20
  OS Overview</A>=20
  <LI id=3Dsbn-iphonedevtools><A=20
  =
href=3D"http://developer.apple.com/iphone/gettingstarted/docs/iphonedevto=
ols.action">Tools=20
  for iPhone OS Development</A>=20
  <LI id=3Dsbn-objectivecprimer><A=20
  =
href=3D"http://developer.apple.com/iphone/gettingstarted/docs/objectivecp=
rimer.action">Learning=20
  Objective-C: A Primer</A>=20
  <LI id=3Dsbn-creatingiphoneapps><A=20
  =
href=3D"http://developer.apple.com/iphone/gettingstarted/docs/creatingiph=
oneapps.action">Creating=20
  an iPhone Application</A>=20
  <LI id=3Dsbn-iphoneosforcocoadevelopers><A=20
  =
href=3D"http://developer.apple.com/iphone/gettingstarted/docs/iphoneosfor=
cocoadevelopers.action">iPhone=20
  OS for Cocoa Developers</A>=20
  <LI id=3Dsbn-gettingstartedfaq><A=20
  =
href=3D"http://developer.apple.com/iphone/gettingstarted/docs/gettingstar=
tedfaq.action">Frequently=20
  Asked Questions</A>=20
  <LI id=3Dsbn-signingcodeforiphonedev><A=20
  =
href=3D"http://developer.apple.com/iphone/gettingstarted/docs/signingcode=
foriphonedev.action">Signing=20
  Code For iPhone Development</A>=20
</LI></UL></DIV></DIV></DIV><!--/sidebar--></DIV><!--/main--></DIV>
<DIV class=3Dgf-980 id=3Dglobalfooter>
<P class=3Dgf-buy>Visit the Apple Store <A id=3Dgf-buy-online=20
href=3D"http://www.apple.com/store/">online</A> (1-800-MY-APPLE), find a =
<A=20
id=3Dgf-buy-retail href=3D"http://www.apple.com/retail/">retail</A> =
location or find=20
a <A id=3Dgf-buy-reseller=20
href=3D"http://www.apple.com/buy/locator/">reseller</A>.</P>
<P class=3Dgf-links><A id=3Dgf-links-contact=20
href=3D"http://developer.apple.com/contact/">Contact Us</A> | <A=20
id=3Dgf-links-hotnews href=3D"http://www.apple.com/hotnews/">News &amp;=20
Feeds</A></P>
<P class=3Dgf-sosumi>Copyright =A9 2008 Apple Inc. All rights reserved. =
<A=20
id=3Dgf-sosumi-legal href=3D"http://www.apple.com/legal/">Terms of =
Use</A> | <A=20
id=3Dgf-sosumi-privacy =
href=3D"http://www.apple.com/legal/privacy/">Privacy=20
Policy</A></P></DIV><!--/globalfooter--></BODY></HTML>

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://devimages.apple.com/iphone/gettingstarted/docs/images/MoveMe.jpg

/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAZAAA/+4ADkFkb2JlAGTAAAAAAf/b
AIQAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgIC
AwMDAwMDAwMDAwEBAQEBAQECAQECAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
AwMDAwMDAwMDAwMDAwMDAwMD/8AAEQgCUgE1AwERAAIRAQMRAf/EAPMAAQABBAIDAQAAAAAAAAAA
AAAJAQgKCwYHAgMFBAEBAAMBAQEBAAAAAAAAAAAAAAEEBQMCBgcQAAEBBgQBBgQJFAsJCwoHAQEC
ABEDBAUGIRIHCDFBUWETCQpxIhQYgZEyFRZ2FzcaobHhQlJikiOz05TUVbXVVpZXlxnwwdLiM1Qm
JzhYmNFDJLQlNtbXKPFygrJTc5M1RngqomM0ZEVmR4dIuKRnd7cpOUo6EQACAAIFBwgHBQYGAwEA
AAAAAREC8CExAwRBUWFxsRITgZGhwdFSFDTh8SIykjNTgiNzBRVCctKDRBZissLiQySiYwY1/9oA
DAMBAAIRAxEAPwDP4YAwBgHBgLSta98u13QGYnqVqBqtRDc9Ozw5qzbWRNXhdUpMhKzBk6tS7dgz
4tqNNqQUwl1WJIwVK4rACiJSbsBHBqB231l0mBMTtgaDXNUaNASoqr+pt7W/p1ToeQgLiKmKfKXn
QepQ/MesqkFThiEnh73M7REXGECPO/e8fzVuz0xCGpWxe00Q4qlGlVS665f1YlYXFMvGjWLqbERM
x3YFQlYOJ9QMQG5LHLDUIvRznBqR3pS05GYgpuC6tArvgIjRBMo070p3Fx4keEkEoTLTiZ6vwkRI
hDgrqIgeODe1ctqNaWo8OdK1o7Bi96l0VjSzpHTWo+UCGjNMe5/uGnoHWKHjJ8mh6SySkdWSCode
pwwBVxaODNp5ieJLnR09cfehJ2oIiQLeiWhb8OOleWZi7Vt0E/U5UHBHk8eZnJqmxY0M4lcSSUg/
MNPBzqaJG+sjR0dE7xrqzFjCJ5xlwyaCqIpUvB2dXYuCn5ZENC5jRePHKHKyglWbAPPEmeGn+zMO
JK/2pT3Qe8a6nrKkxNyFwQSAoZl7PbvW6IMuVOSFoeCcwL+Id6THdf4ZiFeS5Zke494v1LTlfuau
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

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://devimages.apple.com/iphone/gettingstarted/docs/images/moveme_project.jpg

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
Hm0iOKB0hSI4oHSHm0iOKB0hSJ7BKB66kT6lkg9dSJlEkAH8qkTOSe44ctImzScgPZpE2KauPZ5a
RMsh8aRMgBxpE80iKRMdQ1ImtXUAMeWkTSOXIFx5aRIdOyp2kdIuEzYKN2yqif74hBEPQpEodWRU
UOY5ipKiYe6UWSIqc3bEyhTDSJRVxdYa1Ii7lrCgrcmNRrxZkFSTgLShm79VoAFz+3mOZFMDZeUS
gYTAHOAYhVL51U7e2dTpvR+oz4/NACp3toJutNta7K1SCTb2+QGU3BnBOctiVjkWsi0EREAFRESm
ASjhhmIYxceTHHkqWPKuQcplPXem5+iYDKtXwPYZYEzcMTb0W+m5tSNjIqMRMu+fLt25E00yBiJj
CJKmzBRZ4TUx42yMFUWTwEon+81bXDfGX7t7x8RgX2Pj/wCLSHCsO+Y594y4cv8AI44ditD+aYKv
dpdX2XO5/TfV3t5d9Xtvmr5vll7Q1wxNwxbGbhFI2TipNEq7F8g3bnTUTOGIGKIErfVgwscJw8mN
sbFWFEcRIHqJrLZumhotnNocRnp04kgrWiI1F3IvBKIAYU0QKUAKGPKY5il7GOPJVOfqEwi3NTXy
5lxi2M0NvdYC05e7EbFnrYl9OrueFzRkHdsK3YKO+5zCCByCsmY2HLlEwGEOYB5ahi6zHkbaDr3G
Rx9Sjnb2+Mu3eC/BWf6Ih73W1L43gvwVn+iIe90iN4L8FZ/oiHvdIjeC/BWf6Ih73SI3gvwVn+iI
e90iN4L8FZ/oiHvdIjeC/BWf6Ih73SI3gvwVn+iIe90iN4L8FZ/oiHvdIjeC/BWf6Ih73SI3gvwV
n+iIe90iN4L8FZ/oiHvdIjeC/BWf6Ih73SI3gvwVn+iIe90iN4L8FZ/oiHvdIjeC/BWf6Ih73SI3
gvwVn+iIe90iN4L8FZ/oiHvdIjeC/BWf6Ih73SI3gvwVn+iIe90iN4L8FZ/oiHvdIjeC/BWf6Ih7
3SJpmLm6pWOVmI6BtfhwO3zZArx6DdwYGDpZoc5kixqhSgYyJhDA48lImyScvCAilJwiEW9VaoOy
oHatzkURcEzJqoqAmAHIblABwAwYYGKUeSkTHkJ6JiE0FZVxExiTpdNq2VdpNUSqLqjgmkQVClAx
zjzFDlHsUGpA7THYT2DjPLmcimbthHu14lq/lTKEi2SyTUizkyRc6gIpmKBjiQvdGygOAco0Gpoe
2DoL7JnbwX4Kz/REPe6RG8F+Cs/0RD3ukTCkZuMh2TiSl1oqLjmoAZ0/dpNUEEwEQKAnUUKUpQxE
A5RrBIEyATwnzeT8PHpM137mIYoyC6TVgs4TaJFXXX5EkkjHKAHOf8koco9ipUb29vdIggjd2d82
O8F+Cs/0RD3usTMwgm4wZE0OC0UMsRuDs8WCTXeAbmOJAWFLLnyCYBLmwwx5KDW67IOnwzN3gvwV
n+iIe90iN4L8FZ/oiHvdIkXdX/ZLKTNCPLlthpMkOVM8QsrHpugOcAMUoomwOAiAgIBh2aLzcNYO
nGSjeC/BWf6Ih73SJrCXFDqzDm3k14s84zZoyDuJBBuK6bVwookisYmTECHOicpR7IlHooNbrs4/
DB0q+26+Cr+cTZ7wX4Kz/REPe6RG8F+Cs/0RD3ukRvBfgrP9EQ97pEbwX4Kz/REPe6RG8F+Cs/0R
D3ukRvBfgrP9EQ97pEbwX4Kz/REPe6RG8F+Cs/0RD3ukTXsp6JklHyUc4iX6sYuLWSTbJtVTN1yg
AmSWAhREhwAQESmwGnZfZ9EHQ12/TwntGzkVMtE5CIXiZVgqY5EnrNJquiYyZhIcAUTKYoiUxRKP
LyCGFKjtI7RM7eC/BWf6Ih73SI3gvwVn+iIe90ia8k9EqyS8Mk4iVJdqiVw5iiptRcponHAqh0QL
nKUw8gCIYDQa3XZB0q+2ezSci36z5uxWinriLW3eTQQSaqHbrZQPs1ilKIkNlMA4GwHAQGg1F9n0
cYOhrt+nhM7eC/BWf6Ih73SI3gvwVn+iIe90iN4L8FZ/oiHvdIjeC/BWf6Ih73SI3gvwVn+iIe90
iN4L8FZ/oiHvdIjeC/BWf6Ih73SI3gvwVn+iIe90iN4L8FZ/oiHvdIjeC/BWf6Ih73SI3gvwVn+i
Ie90iN4L8FZ/oiHvdIjeC/BWf6Ih73SI3gvwVn+iIe90iN4L8FZ/oiHvdIjeC/BWf6Ih73SI3gvw
Vn+iIe90iN4L8FZ/oiHvdIjeC/BWf6Ih73SI3gvwVn+iIe90iN4L8FZ/oiHvdIjeC/BWf6Ih73SI
3gvwVn+iIe90iN4L8FZ/oiHvdIjeC/BWf6Ih73SI3gvwVn+iIe90iN4L8FZ/oiHvdImgl70tW31U
kZ6bt6EWWLmRSfmYtjHKHJiUFQKIh5FImp+9XTcOa97P/S4z/OpEk0VckVNtgewj6Jl2YmEoO2JG
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
ibnERqK9OVAUDQGwNOOo+Ykewnvknzb23MSTVWeNaaezQfEO4SVW9ZemlpHbK2rZsBbSrMXws1Iu
LbszJcUVSWf7MUUiCXeVEEjq4erMQgmxEoYT2ZKr4OPZZPzkn2k98jvXh4g/CBtB9oXlHhpwmij9
JdEImWnp6L0ss2OnLqI9SuaZbQDFJ1IpyWG+kdrEbgdYrnKG1A4iB/ysarPTkp5dcpBFaVRqxXCj
Q+Id0n553jJZ3Ag322thTfG1BNd1muMjR9AND3N+E1ClLIgpuWjoq34i02MjDsHDSASttR6qxUhy
mabRocBeiA5D4Bs08gEEvLsA5RZ+uXZy/wBe3VFYbuNfwwfaWs66VHZtCcFAC7fq0CSNOH1iPZpL
UGEssyrhc0BFGWdyiU47WFikJlZRBNNFJ8cdniZwRNFMhVR7sClKADgUKqGNxt/Ruv0d27dXdu3v
urjua/eMyWU3fbV+O2it9+0qpHdtFcBKZsnQS0LN1QmdWT3VJ3BccoEkDduvGwUY3QGWVbncqqDC
RMcs9WEjRBEqr1Rc5UyYAbMY5jQwdOcSbQLNVenDQmgKUbmAZjVkgcBpM5cnmNZOl7q8QCq61u5Q
zBRurmPHSuhOIM+/exN6VS8lu6N4jiDPv3sTelTyW7o3iOIM+/exN6VPJbujeI4gz797E3pU8lu6
N4jiDPv3sTelTyW7o3iOIM+/exN6VPJbujeI4gz797E3pU8lu6N4jiDPv3sTelTyW7o3iOIM+/ex
N6VPJbujeI4gz797E3pU8lu6N4jiDPv3sTelTyW7o3iOIM+/exN6VPJbujeI4gz797E3pU8lu6N4
jiDPv3sTelTyW7o3iOIM+/exN6VPJbujeI4gz797E3pU8lu6N4jiDPv3sTelTyW7o3iOIM+/exN6
VPJbujeI4gz797E3pU8lu6N4jiDPv3sTelTyW7o3iOIM+/exN6VPJbujeI4gz797E3pU8lu6N4ji
DPv3sTelTyW7o3iYbV+0BeREVedwUQ7k3eUg6KeU3dM7xMziDPv3sTelTyW7pjeI4gz797E3pU8l
u6N4mG1ftAXkRFXncFEO5N3lIOinlN3TO8TM4gz797E3pU8lu6Y3iOIM+/exN6VPJbujeI4gz797
E3pU8lu6N4jiDPv3sTelTyW7o3iOIM+/exN6VPJbujeJhvn7QUCACv8A4huPqTdhYg9FPKbumd4m
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
17xG090bs47wp/BH0qb17xG090bs47wp/BH0qb17xG090bs47wp/BH0qb17xG090bs47wp/BH0qb
17xG090bs47wp/BH0qb17xG090bs47wp/BH0qb17xG090bs47wp/BH0qb17xG090bs47wp/BH0qb
17xG090bs47wp/BH0qb17xG090bs47wp/BH0qb17xG090bs47wp/BH0qb17xG090bs47wp/BH0qb
17xG090bs47wp/BH0qb17xG090bs47wp/BH0qb17xG090bs47wp/BH0qb17xG090bs47wp/BH0qb
17xG090xW7dxtn3tCnIuGPcj3pPtVgOvfG0zK3Zx3hT+CPpVneveI2nujdnHeFP4I+lTeveI2num
K3buNs+9oU5Fwx7ke9J9qsB1742mZW7OO8KfwR9Ks717xG090bs47wp/BH0qb17xG090bs47wp/B
H0qb17xG090bs47wp/BH0qb17xG090bs47wp/BH0qb17xG090xXjdwCJMUFA9vQ/JHvpO1WC698B
TMrdnHeFP4I+lWd694jae6N2cd4U/gj6VN694jae6N2cd4U/gj6VN694jae6N2cd4U/gj6VN694j
ae6N2cd4U/gj6VN694jae6Yrhu42zH2hTlXHDuR70p2qwXXvjaZlbs47wp/BH0qzvXvEbT3Ruzjv
Cn8EfSpvXvEbT3RuzjvCn8EfSpvXvEbT3RuzjvCn8EfSpvXvEbT3RuzjvCn8EfSpvXvEbT3TFO3c
b63DYKY7Bbkyj65LtVjet8Y2mZW7OO8KfwR9Ks717xG090bs47wp/BH0qb17xG090iN1oqkVtQVE
zkKM83DEwCH/AGK/TVOZgRoZPGCDKIvbqtWncuskRrG7vm82l4N3SLqOBo8YEatSs8hUm6KR2BxB
IQxAxTGHNmNmEcw1rS6bLrK/PemvxiQ/VqRInb/5FIlxw3MWkSyY/mJ5FIktb81Imx7HlUieinNS
Jo3fMNIkIlOYfIGkSrJzmP5A0iUDfXzPM/E3HuZqRP0ItL6q2z+yWXuBKRJBSIpEUiKRFIle6nBm
tqPL666rTDzbhjqROJ5DWa8Z25HdhzGmkZIsS6lIxJZldsseMNaXjWa1RcGEy/zgD0ClKUMS4ZlB
IUoAU3sz+Hek+7DP5pvyr23r5vl+aB7tbNlk63w11nG/mGXzdm363Hs2btnfxv8APpOz9Mm6bazn
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
4GHrPOpEcDD1nnUiOBh6zzqRHAw9Z51IjgYes86kRwMPWedSI4GHrPOpEcDD1nnUiOBh6zzqRHAw
9Z51IjgYes86kRwMPWedSI4GHrPOpEcDD1nnUiOBh6zzqRHAw9Z51IjgYes86kRwMPWedSI4GHrP
OpEcDD1nnUiOBh6zzqRHAw9Z51IjgYes86kRwMPWedSI4GHrPOpEcDD1nnUiOBh6zzqRHAw9Z51I
jgYes86kRwMPWedSI4GHrPOpEcDD1nnUiOBh6zzqRHAw9Z51IjgYes86kRwMPWedSI4GHrPOpEcD
D1nnUiOBh6zzqRHAw9Z51IjgYes86kRwMPWedSI4GHrPOpEcDD1nnUiOBh6zzqRHAw9Z51IjgYes
86kRwMPWedSI4GHrPOpE8hCB6zzqRMlOFAPyKRNkhEAGHc0ibttGAXDucKRJI0ZAXDkpEkTdAAw5
KRNwkTAApE2CYYUifWkRSJ8zBSJiHJjSJgqoY48lImsWaAbHkpE16jAB/JpEwzxwD+TSJ8BjAEfU
0ienCw6ApE8cLDoCkRwsOgKRHCw6ApEcLDoCkRwsOgKRHCw6ApEcLDoCkRwsOgKRHCw6ApEcLDoC
kRwsOgKRHCw6ApEcLDoCkRwsOgKRHCw6ApEcLDoCkRwsOgKRHCw6ApEcLDoCkRwsOgKRHCw6ApEc
LDoCkRwsOgKRHCw6ApEcLDoCkRwsOgKRHCw6ApEcLDoCkRwsOgKRHCw6ApEcLDoCkRwsOgKRHCw6
ApEcLDoCkRwsOgKRHCw6ApEcLDoCkRwsOgKRHCw6ApEcLDoCkRwsOgKRHCw6ApEcLDoCkRwsOgKR
HCw6ApEcLDoCkRwsOgKRHCw6ApEcLDoCkRwsOgKRHCw6ApEcLDoCkRwsOgKRHCw6ApEcLDoCkRws
OgKRHCw6ApEcLDoCkRwsOgKRHCw6ApEcLDoCkRwsOgKRHCw6ApEcLDoCkRwsOgKRHCw6ApEcLDoC
kRwsOgKRHCw6ApEcLDoCkRwsOgKRHCw6ApEcLDoCkRwsOgKRHCw6ApEcLDoCkRwsOgKRHCw6ApEc
LDoCkRwsOgKRHCw6ApEcLDoCkTyEWHraRPoWND1tImUSPAMO5pEzU2QBhyUibJFsAYclImyTSw7F
ImaQlImQUKRPakRSIEMaRPmYtInxMnjSJ8DIgPYpE+Itg6KRPkLQOikT13QOikTxuYdHoUiNzDop
EbmHR6FIjcw6KRG5h0ehSI3MOikRuYdHoUiNzDopEbmHR6FIjcw6KRG5h0ehSI3MOikRuYdHoUiN
zDopEbmHR6FIjcw6KRG5h0ehSI3MOikRuYdHoUiNzDopEbmHR6FIjcw6KRG5h0ehSI3MOikRuYdH
oUiNzDopEbmHR6FIjcw6KRG5h0ehSI3MOikRuYdHoUiNzDopEbmHR6FIjcw6KRG5h0ehSI3MOikR
uYdHoUiNzDopEbmHR6FIjcw6KRG5h0ehSI3MOikRuYdHoUiNzDopEbmHR6FIjcw6KRG5h0ehSI3M
OikRuYdHoUiNzDopEbmHR6FIjcw6KRG5h0ehSI3MOikRuYdHoUiNzDopEbmHR6FIjcw6KRG5h0eh
SI3MOikRuYdHoUiNzDopEbmHR6FIjcw6KRG5h0ehSI3MOikRuYdHoUiNzDopEbmHR6FIjcw6KRG5
h0ehSI3MOikRuYdHoUiNzDopEbmHR6FIjcw6KRG5h0ehSI3MOikRuYdHoUiNzDopEbmHR6FIjcw6
KRG5h0ehSI3MOikTyDQOgKRPoDUA7GFIn1K3DopE+5UcOxSJ9ip4UifYC0ie1IikRSIpEUiMApE8
ZQpE8ZApE8bMKRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2Za
RGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzL
SI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2Z
aRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGz
LSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2ZaRGzLSI2
ZaRGzLSI2ZaRGzLSI2ZaRGQKRPOUKRPOAUieaRFIikRSJ//Z

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://devimages.apple.com/iphone/gettingstarted/docs/images/appdelegate.jpg

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
Avb0ul9G4v6bSI7AXt6XS+jcX9NpE91G1L5VENWBSKOkN0ZuN3B5w7h+ZSJm43EV7uuTkbQUU2Bs
jMt2v/FmQC3SuJUys+CJkxESHmTnHlBw8OoXwgjq+FpEtBgHClwWxczGdmwjWbeMYjHxkfHKprpl
SOzLHol1UCESTRQaho0aNIiACOkREaRPqbZDQxSpbg8wNAc8OZo73SNImXz0lq4vmtIf+T1B0gHc
iXRu0iWnX8vW81U8mNInVSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIp
EUiY6X+5Un9YO/oClIm742+o2/mJfIhSJot7ftCY/wDa9ub1023SJaInSF6kvgBSJ5UiKRNPlE9I
Duc4B3O6EQHo0iRDcTXWKrzeaYPC/JDRppErZeMXrgroKPP6OgO85mjoUiVcumAE5ldBdO4bSA6e
ePdaeZSJAs5bBjHH53uh3Rt0N3cEO6EaRI5eWmfXHQkPN7gdHO7qkTF9qR+B40aRHakfgeNGkR2p
H4HjRpEdqR+B40aRHakfgeNGkR2pH4HjRpEdqR+B40aRHakfgeNGkR2pH4HjRpEdqR+B40aRHakf
geNGkR2pH4HjRpEdqR+B40aRHakfgeNGkR2pH4HjRpEdqR+B40aRHakfgeNGkR2pH4HjRpEdqR+B
40aRHakfgeNGkR2pH4HjRpEdqR+B40aRHakfgeNGkR2pH4HjRpEdqR+B40aRHakfgeNGkR2pH4Hj
RpEdqR+B40aRHakfgeNGkR2pH4HjRpEdqR+B40aRHakfgeNGkR2pH4HjRpEdqR+B40aRHakfgeNG
kR2pH4HjRpEdqR+B40aRHakfgeNGkR2pH4HjRpEdqR+B40aRHakfgeNGkR2pH4HjRpEdqR+B40aR
MwztM+sXSkPNDmgOjnd1u0iSXBWwYhi6U90R7gdwOdo5lIk+2rAiQU9JBAfC6NHxeZppEtLaEZqc
VuD/AEdG53ncgHNpE6NoNuBMXzfccgVHmbu5qh4FIlj1/L1vNVPJjSJ1UiKRFIikRSIpEUiKRFIi
kRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFImOl/uVJ/WDv6ApSJu+NvqNv5iXyIUiaLe37QmP
/a9ub1023SJaInSF6kvgBSJ5UiKRNdfJgYNOjSGjQO5/lz6RI9mWWuVTwmnTpDdDRztADz9zRSJC
1xwYqgcdTT8QA3PkhSJBM7aplBUHiubp3NA953AjpNSJFEpZJjDp4nn84vP5nM0adykTS3NhmEw/
OQHvShpHmBziiI8zuaRPR7QTdYN4kN6kR2gm6wbxIb1IjtBN1g3iQ3qRHaCbrBvEhvUiO0E3WDeJ
DepEdoJusG8SG9SI7QTdYN4kN6kR2gm6wbxIb1IjtBN1g3iQ3qRHaCbrBvEhvUicDYQhzUDeJDep
E6zWQUv+iH4uqHxtNInrms4gbvEjo7wB3qRPHtQT6yPiS79IjtQT6yPiS79IjtQT6yPiS79IjtQT
6yPiS79IjtQT6yPiS79IjtQT6yPiS79IjtQT6yPiS79IjtQT6yPiS79IjtQT6yPiS79IjtQT6yPi
S79IjtQT6yPiS79IjtQT6yPiS79IjtQT6yPiS79IjtQT6yPiS79IjtQT6yPiS79IjtQT6yPiS79I
jtQT6yPiS79IjtQT6yPiS79IjtQT6yPiS79IjtQT6yPiS79IjtQT6yPiS79IjtQT6yPiS79IjtQT
6yPiS79IjtQT6yPiS79IjtQT6yPiS79IjtQT6yPiS79IjtQT6yPiS79IjtQT6yPiS79IjtQT6yPi
S79IjtQT6yPiS79ImSa2kmBi/OwDdDQOqXug52kedSJvkRahdIfOR3OaPhdG78QebopEmGAtnU4s
eL4PO3dADzaRJ5tyEFIE/CcHmhp5ug27uUiadtINNTF05pLo/wCHLaBANznc4NzdENFIk0r+XLea
qeTGkTqpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRMdL/cqT+sHf
0BSkTd8bfUbfzEvkQpE0W9v2hMf+17c3rptukS0ROkL1JfACkTypEUiY1ZMDaQ6HxaRNZfNAOBvC
6R3fih33cUiaNKRAH07nc6dzmaO5Hm7oUiR7I22B9bwmnTp0COjR3Hdc4edSJpry0Sm0/Ow5vPAO
eA8zSAAFImDWswoj5Vp+IGn4neUiemNkkH/Ql6AD4NInHaQTrJfEhSI7SCdZL4kKRHaQTrJfEhSI
7SCdZL4kKRHaQTrJfEhSI7SCdZL4kKRHaQTrJfEhSI7SCdZL4kKRHaQTrJfEhSJ6Lu0U0iCPFlAA
0f0S95z+5pEjC6o0UORtm5+IO7eA2OdPQChUyNXTpQEx0DqnMDbV1udp3KRI6uMIG1Yd7cFxyikZ
ERyYKO3riTmdBQMYCEIRNF6KjhwscQKRNMhjnMOgpRHcpEiyNytj+QkIpk9aX9bKc8oRGEl7sibk
hIKVXVOCaCLaTPMLppncGEAT44qIGEQDTrCACiTQe22yZDqKKOU00yGUUUPLTBSJpkKJjnOY0kBS
kIUBERHcAApEgxbMWNiC6cN22QpKBYuuSPLvioK6X1pIKFMJFVBlCSpVlmyRijpUSQOUQDSXWDQI
siJNEdExcuwZysW9Ufx0g3SdsnrWYl1W7lssUDpLJKFkRAxDFH4nMHdpEjO4sg2Tb028txNre10T
MYjx8wzsxjcNwdhiagKAEouSYatm6wpm1uLA51Ch0xS6Q0icRNus1/at+w4TdsSLx6zBY7Vyks9n
2b+PepAArMZJg4fkcMnaWndKYNAhulExRARRNr7WEeE79FJn8I0iO1hHhO/RSZ/CNIjtYR4Tv0Um
fwjSI7WEeE79FJn8I0iO1hHhO/RSZ/CNInSpbqRDpEKR6qKoqB4WXlyATi0zKCI60gOkBAujc5lI
nrFh23LAZKJyCKxkQXIJpWYMQxBUFIPDFkdBRE4aA080aRO1xDRjRVkg6fC2XknPIo5FxOSiKr94
CKrkWjJNSUKd055O3UU4sgGNqEMbRoARoOrcR1bBOPbgeJ/UPafZB6LyP3QQM+zJOB9p6D3noJ6C
idsItlHq1wMEmaT93Fqu1LodkbJSbArg76OUXNMAkR+yI0VFVERBRMEjiYA1R0QyOIfI4FSwPsKj
xbPuGOp8BJgjsxRQS4IBHtBbGBj3nIwPbkY8RMqlbrRwkkugsusgukmsgslLy6iSyKpAUSVSUJJG
IokoQwGKYBEBAdIVMysrFWBDA4IPiCPEGSKyuodSCpGQR4EHwI/QZjpFpARDmGZyssnHOrhkghoF
u8npNutMSwtV3oRsamrJlM7eizaqq8WTSbi0zDo0ANFUu/loMvxZsDx4qMs36lHifAe2T8W4NZg+
WuMn2DkcDJ9mT0HvPSZXtYR4Tv0UmfwjUJLHawjwnfopM/hGkR2sI8J36KTP4RpEdrCPCd+ikz+E
aRHawjwnfopM/hGkR2sI8J36KTP4RpEdrCPCd+ikz+EaRHawjwnfopM/hGkR2sI8J36KTP4RpEdr
CPCd+ikz+EaRHawjwnfopM/hGkR2sI8J36KTP4RpE5C2EQ/pPPiSsyH/AO40ie+nawI6pjJyBAN0
pjSMyQDB3RjSGgaRNkiGisbIRxgWccnduwZrIrunDog8YguomoQXJ1jpqEOhzjAAgPMpEsnbsaRU
qZgKGnSUB0Bp5g8/TuaC7ne0iTLFRYFAg6u7o7gQ3dGkdHc0iQ9tONQJi2f7nsauOnRzNXRoDuqR
JCW8tV80P5IaROukRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEx0v
9ypP6wd/QFKRN3xt9Rt/MS+RCkTRb2/aEx/7Xtzeum26RLRE6QvUl8AKRPKkRSJ0Kk07vf8Ad9xS
Jj1kCnAQEN3vw7ykTDOWBT6REukd3dAN0ADniHPAKRMEvEFOIiBQHTp/yEOfSJi1YEo6fne5p0cz
n7of0aRPSNb5dOji+Z8rvlGkTp7XkuteR3qRHa8l1ryO9SI7XkuteR3qRHa8l1ryO9SI7XkuteR3
qRHa8l1ryO9SI7XkuteR3qRHa8l1ryO9SI7XkuteR3qRHa8l1ryO9SJpVxRREUVdBBAQARHmd33A
jzKRKmXc4KNz2615yko80l5mnVgJo4DzR5hiUiR3lC3UppC1Rcpa8VG3Km8kwPoMgkB2LpswduCb
oCk1frENrCGhMRA25zaRMTfWOmhrTcJvRK+TWaHax7MTFXMs5clErVBmnpNrqmWEBLq9KO7ztNIm
13RBP3uNJODKVZeWWtNvHLcWrrLOXCTNqm/IVXW0qHclSULzfDibu6RMREWHGHtQizR2ghCi2TVF
Eh00miSaKYAKaqesUqItwDVMUQASiGjRSJkcUwhYS1EmnJzoMzTk2+i0DBqAlEvJAy7MqaQ6OIRU
ATKEJoDQU4Do3aRNdsDHSIN5RMyotZcshKmmw4wCuV3Lt4u4M6WNp1103qRwORQdIGKPN3KRMjZV
qNoW7bveMCALB0ziGTlZES8ndTDJV4Zc5RLoIuu3aLJpnOGnRoAojuUiSnxCfAHxu/SI4hPgD43f
pEcQnwB8bv0iOIT4A+N36RHEJ8AfG79InB0uJbSb9FqVytFxD58k3UbOXpHChQTTIhyRiPK1zLGU
1QKTd1hAREA01b7d1mvq2X01m25EJVAcF2A6KDggFj0yRgZyegMqVKj2qljcUJwT44Hvx7cf/ZNF
Pjm9BmWal3Nmq6MoR3cjaSZPZZk4hnDLS9NbXJ2z1NuZNJErQgEVTMgqVJwcDFVUEtW+pZ3EhPnq
6UtYDkEd2VSFHLBZB05ZAB9gzk+Autj5JqlGtz5pkElQOQJ+HIDHqBnLDxyAQMAzQdpJu8j8Xu78
hIR9P3BiSdt7K0NCxTc7qWmFLNkk3snCRbdEDrKvJqDUdNQIUBE4KCXmDV1Za2tdTtpklHKnAzlb
kalhj25D/wDX7Jb1UfO126GQpuT4SSAA6MtqMSSB8LICOo646yn1h2Be9syl5WjKxs6/Z23ZN1bT
iM1IxYyUTIZKy5YS8AvbbFJ21XavJK37nZyjzkIkV1W70hDEEDeGb6vpdo269cll7frXamuxwXdH
C3Fnrx8ecWLnBHIAdc4EdFvnO7amxYgqr39mnYuAJXy3rd0KKw44HFqMknJIJ6cRJklnOVDyUrMR
15XtDR1oJbNqUTacVAxiVvShrnRhAyCaSR7CHeyDVRk7VTUaoqJIRyhOM0FEuqF/Y1Sd5fnl6G7s
aMEkqKbGRS5PiSvIsthPTB69WlhUCew0PgpsL2Z7srhWa+tXNYK4wBlQGqVQXU8Rj4caYvKXDcmZ
MYpT03kN1elv7Rl8Fl8eqwLouPbQs6Pg7yjrEkUnqcEk1aoSkMLRdKQPID2SWcH0gXV1CWWjY5FV
tac9pu1bLOXyPL2DWA1Sk8RnnlAhzyrBsGfvSv3I1oX1y5Wj57WCBRy8ykWBubHBPQHkX6BWxXk+
3rt+68zTkc0Qtm+b/l8iHxnelx5dt64bZQZQuOck2+8hX9sWvCIKwTFGAQmXRJCKBiRw8F/HkB0B
tbQqM9lqU0vt0o13b6U17Mj79jq4N9A69TbWLA6Y/gNxAYZ61GRrdoazBKNm2+6vAJZKqirrTcuS
eYV/LZbCSLQT0IPTcMV39mm+MhwLScZ3RBWfkEqeeIhOStskMvZGLisndvM8Mzq63KAUutzdSTB8
6KbUX5C+V1dHF6Rr10tQ9mvtFWu1Q3IqQ1dxvA8gKwI61fxm6DB8hVb75Et7XttrTYqQ103FEAyC
yNQSb2deuFuXgqkE/FY2PuEm7vEp8AfG79UZVjiE+APjd+kRxCfAHxu/SI4hPgD43fpEcQnwB8bv
0iOIT4A+N36RHEJ8AfG79IjiE+APjd+kRxCfAHxu/SI4hPgD43fpEwdzR0y/tyfY2xJpQFxvYaSa
QM6u0SkEoaXcM1kY6VOxV0pPAj3Ryq8WYBKfV0DuDSJ8Dc8bAu27aO0NaYbH2TtqSYwHdNw42kNp
Jxm/aytG8ou+UYXIkFd1xurHgb0u1a9bOQcRrRwlItYxrDt3AGFqzbi3EulE/QHczwiLqKcpGLqL
Xa1AnhdUNRZvKmL4UN0oaoBuaNykSzdiKA5QSNuCAgHPHnCAgOkBGkSxMayAEiaC6Nzm6PDaBDnd
2PN+LSJAm1MgBcWz4AGj/hrgB77RpHd59ImyreWq+aH8kNInXSIpEUiKRFIikRSIpEUiKRFIikRS
IpEUiKRFIikRSIpEUiKRFIikRSIpEUiY6X+5Un9YO/oClIm742+o2/mJfIhSJot7ftCY/wDa9ub1
023SJaInSF6kvgBSJ5UiKRFInWZMB3h3+bSJ0mQ08zQP+Xc7ghSJ0ma6eaXvh5vQ3aROkzEvB0d4
GgO/pE6xYlHnaO8No77mUiePY4nB78N6kR2OJwe/DepEdjicHvw3qRHY4nB78N6kR2OJwe/DepEd
jicHvw3qRHY4nB78N6kR2OJwe/DepEdjicHvw3qRAx5NA7nfhvUiRTejXUbriAAHhTBze9AQDc5m
ke+pEoxM29PXVkyzYC2TQ5Zl7KzB2gz7l61iwK0tS43TnlK8azfuyG5MkfU1UjAKmqA6A0iCJLY7
PucBASitiMSmAQMU07eRimKPNKYprREpimDmgO4NInrJbN+YUDJqN22F26qQCVNVGVu8ihCmHSYC
nC0NJdbn6NFIntfq/Zy6/iT0evT8kqRPSNs15eOcyqjPCiix1CLHVPJXaZQ6yejUVMI2foMoXQG6
IUie7+r9nLr+JPR68+duelKkT11tnLMjk4KOkcMujlIKZTuJa8FTlIPNIUxrR1tUe406KRO1PZ6z
aiQqSJ8QJJEACkSSm7xTTIUOcQhLRApQpE8/1fs49fxJ6PXp+SVIj9X7OPX8Sej16fklSI/V+zj1
/Eno9en5JUiP1fs49fxJ6PXp+SVIj9X7OPX8Sej16fklSJ4G2fs9FMVRpM46i1iadDmHvLIUS6Ep
gEDJmcx9st1jJG07pRHVEQAdG5SJ1m2fdoY+kqt42wsQdAHSXyblVZFUvPTWSUgzJqpmDcEpgEBA
dA0ieyTAGdEzFOm6xMQ5DAYhyXBepDkMG6BimLaYGKYO5CkTy9gPO4AUAeYpACKCqQAuK99BFR0a
VSB2qaCqjqhpMG7uU8PD2R49D7Y9gTO4aBB7inSXjNUe2K99JeN08bq/+im5xukdbR02ndp7MezG
P6Pd+qP0+3Of6ffPL2B898VxHZDFnEAXVBDtkvjiQKI6RKCXapqaoiGnRo0aaHr4x4eE4PgbPKhU
yKP8VqER0cSQ9x3uYqWgAAOLKa1BAmgA53cU9ufbHsx7JwbAedzgYDvMUnA6nHHA9xXsYDraBLxp
wNaggZXVHRrDu6OfTA+yP0+2df6v2cev4k9Hr0/JKkR+r9nHr+JPR69PySpEfq/Zx6/iT0evT8kq
RH6v2cev4k9Hr0/JKkR+r9nHr+JPR69PySpEfq/Zx6/iT0evT8kqRH6v2cev4k9Hr0/JKkR+r9nH
r+JPR69PySpEfq/Zx6/iT0evT8kqRH6v2cev4k9Hr0/JKkR+r9nHr+JPR69PySpEfq/Zx6/iT0ev
T8kqRIzylizJtlRNvTF1qWEeIG8oZqIW5KXG8k+VLtJQrcCoykDGtOTiOnjBFUDAABoAaRLB4uAT
oN+8DcHTo0CUNO73tIlrYxL5wUNzmB8XQAAGnRppErxtVkAuLLg+9jgQ0bgbgl5vcjSJlFvLVfND
+SGkTrpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRMdL/AHKk/rB3
9AUpE3fG31G38xL5EKRNFvb9oTH/ALXtzeum26RLRE6QvUl8AKRPKkRSIpEUiKRFIikRSIpEUiKR
FIikRSIpEUiKROB5g94PgUiRFfHlDjqR8makSo9kftEY2++V1+sC7qRPotSIpEUiKRFIikRSIpEU
iKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEq1tcfm6tz2x7X+gS1ImBxX9Tt
u8L5EtIlsY3ykvUhSJXTat/NZcH3sc+CWkTIreWq+aH8kNInXSIpEUiKRFIikRSIpEUiKRFIikRS
IpEUiKRFIikRSIpEUiKRFIikRSIpEUiY6X+5Un9YO/oClIm742+o2/mJfIhSJot7ftCY/wDa9ub1
023SJaInSF6kvgBSJ5UiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSJwPMHvB8CkSIr48ocdSPkz
UiVHsj9ojG33yuv1gXdSJ9FqRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiK
RFIikRSIpEUiKRFIlWtrj83Vue2Pa/0CWpEwOK/qdt3hfIlpEtjG+Ul6kKRK6bVv5rLg+9jnwS0i
ZFby1XzQ/khpE66RFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikTHS/
3Kk/rB39AUpE3fG31G38xL5EKRNFvb9oTH/te3N66bbpEtETpC9SXwApE8qRFIikRSIpEUiKRFIi
kRSIpEUiKRFIikRSIpE4HmD3g+BSJEV8eUOOpHyZqRKj2R+0Rjb75XX6wLupE+i1IikRSIpEUiKR
FIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikSrW1x+bq3PbHtf6BLUiY
HFf1O27wvkS0iWxjfKS9SFIldNq381lwfexz4JaRMit5ar5ofyQ0iddIikRSIpEUiKRFIikRSIpE
UiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSJjpf7lSf1g7+gKUibvjb6jb+Yl8iFImi3t+0Jj/2
vbm9dNt0iWiJ0hepL4AUieVIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUicDzB7wfApEiK+PKHH
Uj5M1IlR7I/aIxt98rr9YF3UifRakRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiK
RFIikRSIpEUiKRFIikRSJVra4/N1bntj2v8AQJakTA4r+p23eF8iWkS2Mb5SXqQpErptW/msuD72
OfBLSJkVvLVfND+SGkTrpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUi
KRMdL/cqT+sHf0BSkTd8bfUbfzEvkQpE0W9v2hMf+17c3rptukS0ROkL1JfACkTypEUiKRFIikRS
IpEUiKRFIikRSIpEUiKRFIikTgeYPeD4FIkRXx5Q46kfJmpEqPZH7RGNvvldfrAu6kT6LUiKRFIi
kRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRKtbXH5urc9se1/
oEtSJgcV/U7bvC+RLSJbGN8pL1IUiV02rfzWXB97HPglpEyK3lqvmh/JDSJ10iKRFIikRSIpEUiK
RFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFImOl/uVJ/WDv6ApSJu+NvqNv5iXyIUiaLe3
7QmP/a9ub1023SJaInSF6kvgBSJ5UiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSJwPMHvB8CkSI
r48ocdSPkzUiVHsj9ojG33yuv1gXdSJ9FqRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFI
ikRSIpEUiKRFIikRSIpEUiKRFIlWtrj83Vue2Pa/0CWpEwOK/qdt3hfIlpEtjG+Ul6kKRK6bVv5r
Lg+9jnwS0iZFby1XzQ/khpE66RFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUi
KRFIikTHS/3Kk/rB39AUpE3fG31G38xL5EKRNFvb9oTH/te3N66bbpEtETpC9SXwApE8qRFIikRS
IpEUiKRFIikRSIpEUiKRFIikRSIpE4HmD3g+BSJEV8eUOOpHyZqRKj2R+0Rjb75XX6wLupE+i1Ii
kRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikSrW1x+bq3P
bHtf6BLUiYHFf1O27wvkS0iWxjfKS9SFIldNq381lwfexz4JaRMit5ar5ofyQ0iddIikRSIpEUiK
RFIikRSIpEUiKRFIikRSIpEUiKRFIikRSIpEUiKRFIikRSJjpf7lSf1g7+gKUibvjb6jb+Yl8iFI
mi3t+0Jj/wBr25vXTbdIloidIXqS+AFInlSIpE//2Q==

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://devimages.apple.com/iphone/gettingstarted/docs/images/multi-touch.jpg

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
PsVZoAhM+WPtd9Q+8/VUv5pOxv1n7h9dSf1LqZTSlNKU0pTSlNKU0pTSlNKU0pTSlNKU0pTSlNKU
0pTSlNKU0pTSlNKU0pTSlNKU0pTSlNKU0pTSlNKU0pTSlNKU0pX+CAGASmADFMAgYogAgICGwgID
4EBDSlQ3clkeoJjO2DVzL9ShUVWkIlk2WeTPVsqxxVVfwjVuVRzL9bEjmMdZgmQ7rH5BEzYFKwUr
etzf6v8A3n1/t+vvzlf0sv6f1fs+ruyl+xfMpRkzk4x41kY2Rat30fIMXCLtk+ZO0SOGjxm7bnUQ
ctXKChTpqEMYhyGAQEQEB1KqbX1aUppSmlKaUppSmlKaUppSmlKaUppSmlKaUppSmlKaUrQfaqQU
i+s3YB2goKTscN5HZx5gHY31SSqUrGxRCD4+dSRdpFL/ADENRx/1GrkoqCQpG49hrb325Gfa/wBo
+gT6N9B+3Pa7Bw+mfT/pnobbbcPa/Ltt8NQrivGokCJwr3teV7Uba0H2p2lyZAl9ZGMy1jCk5QYo
CO7d1caFIvca5Bkib/0rDUnlGbnAPHFAo/rqM4xg8in2j7aljCQjmF+GB+ypJagqZTSlNKU0pTSl
NKU0pTSlNKU0pTSla0y7kyNxJQ5e5PWDudfpKx8LVKlGHSJNXm82N+3g6XR4My/7Ccra7G+bs01l
hK2agqZw4Ok3SVVJE1uopULnaQteZg3HUjjPHcdD2N8zmL5OP5i75OsDAhysp7JN1knFhuL2NFdJ
F4WvM5V8ZjDor7qs4Vo0aiIggXR7tTlGXDuoxuluPzce/wBvorb2oaippSmlKaUppSmlKaUppSml
KaUppSmlKaUppSmlKaUppSmlKaUppSmlKaUppSmlKaUppSmlKaUppSmlKaUppSmlKaUppSmlKhoZ
ml1CsBXrE4NeqNvmE0JOJ8gx6z3SefAm2mogoBwjuv8Acpd0VJ+1LshS5ZcjtMpIJ09PBzf6g/7Q
fT+36+/OV/SK/wCzP0H7vq7spl6lVNppSmlKaUppSmlKaUppSmlKaUppSmlKaUppSmlKaUqOnapD
32HF4UR/btGS8C09wH/fZXDPGNqzIEEP+YpmEqoBg/Uu4ajj+Zew/Uagk+XDmPrFSL1BUdNKVpa9
U6xPcvYMyDXW5HCFZXyRTbwY7ps3FnQb1UiTZ3ySa6hFHyxci47rSHoogdUE3B1dgImcQiBGktPZ
7fTUJB1Bw7fb4gVunUNRU0pTSlNKU0pTSlNKU0pTSlNKU0pUTcfm/v8A5SDNjgfcYlxa8n6zgBEq
wKMLjbVUX1YyNncE9hIuwI2Ud1aouAAoKRZpiRRO6YzbFRKY7wN0fiOf2D7T7u2pbfG7X+EZfafs
Hv51LLUuplNKU0pTSlNKU0pTSlNKU0pTSlNKU0pTSlNKU0pTSlNKU0pTSlNKU0pTSlNKU0pTSlNK
U0pTSlNKU0pTSlNKU0pTSlNKU0pTSlfBKxUZOxclCTccxmIaZYPIqXiZRog/jJSMkG6jR/HSLF0m
q1esXzRY6SyKhTJqJmEpgEBENASCozpngcqihVbC96xykXirIj565wdIPGUJhLL0y7cPi0079ykx
hMHZgnXiiqrRy1dLpsabaHqgIzjcW8PJLfX02rqxzCPM8Tfn4jn2j7Rwzyylg6DpPy8D9h+w+7PO
X2pdTKaUppSmlKaUppSmlKaUppSmlKaUppSmlKaUppSo49lFDLw+IYBMBMvY+x2C00iBvuYtSvUf
kp2OwfEEY+jrKD/Im+pkeZP+E/UlS5OA/wAQ++pHal1MppSmlKaUppSmlKaUppSmlKaUppSmlKaU
rRfZVNRTCl4BR3kBpBlZsFLqfFce3kchLY6Tl2BsiNKumeTi5Js8dUsHyariIOrYm7YyqkKitLFZ
Jmjj+cIi8O/h7Zc8Kgf8pzTs5cfbPljW0ad9p/aNW+wvoH2L9uQf2X9qew+1/tP6Y1+3Ptv6V/7X
9A+j+j7P237Ht+Hp/JtqEquOdRBEwyrI9eV7TSlNKU0pTSlNKU0pTSlNKU0pTSlNKU0pTSlNKU0p
TSlNKU0pTSlNKU0pTSlNKU0pTSlNKU0pTSlNKU0pTSlNKU0pTSlNKU0pTSlYxdvs37Otf9xftn+3
/wBuTX3x96fS/s/7S+nOfuL7p+t/+zfbv0n1ve+7/wCm9vz9T5N9ehVGnOvCiHVlUaeqxbQnHSQ1
pa3vOtrr3Z8OFy82kI3KUHHNV2RGLeAPIOpWxWnCs4ycKq19a1lh7XFJtPSUSkY92xWZTJEXH+px
TL9/dhUuNeC6OC5/u5LjUvdSqm00pTSlNKU0pTSlNKU0pTSlNKU0pTSlNKU0pUeMzgA5K6pe7OUk
aXOFkMAAkCp1Zz/btnMsMksJ1Uk0GXomdHFQAUU92RuQpNjmUTjbk7mn2ioHfM3v+w1IfUFR1//Z

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://devimages.apple.com/iphone/gettingstarted/docs/images/device_axes.jpg

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
oFAoFAoFAoFAoFAoFAoFAoFAoFAoFB//2Q==

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://devimages.apple.com/iphone/gettingstarted/docs/images/contact_photo.jpg

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

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://devimages.apple.com/iphone/gettingstarted/docs/images/video.jpg

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

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://devimages.apple.com/iphone/gettingstarted/docs/images/iPhoneBack.jpg

/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAZAAA/+4ADkFkb2JlAGTAAAAAAf/b
AIQAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgIC
AwMDAwMDAwMDAwEBAQEBAQECAQECAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
AwMDAwMDAwMDAwMDAwMDAwMD/8AAEQgBIgCbAwERAAIRAQMRAf/EAMQAAQEAAgMBAAMBAAAAAAAA
AAAIBgcEBQoJAQIDCwEBAQEBAQAAAAAAAAAAAAAAAAECAwQQAAAFAgEEBw8NCQoKCwAAAAABAgME
BQYHEXGxEiEx0RMUFghRkTJScoJDUzQVNTZ2thhBIpKiI5NURhfHmAmJYaHBstIzlNZXYmNkhjdH
tzh4yPCBJNVWl1g5CorhQnPTJVVllWYaOhEBAAEDAgYCAwEBAQEAAAAAAAERMQJBUSFx0RIygoED
scETYaGRov/aAAwDAQACEQMRAD8A9/ACL8eOWhZeE9RnWfaFL+UrEKA5vFVpkSpppNr2rIMtbg10
3QmHU97qyUeuOnQY0yY3lRwlMVt1p1XTH65y46MzlEc0CXJyxOUlcjynWb+p1lNKJTZ0+xbOtxqG
bKkmjIuRe8O+6ymSaT9c6zLY9dsoS3sEXWPqxi/FnulGt9UHES/7qq131XlJcpWmVGsuMOyoVtYq
zKDRGnI8RiGk4VIhU5MOClxuOlS0tJSlSzUrJlMxvtxjRKyxL5L70/2ouVl/rsq3+bw7cdoKyfJf
en+1Fysv9dlW/wA3h247QVlv7DC/MZsJrdftq3sfMY6vCk1WTWHJV53TFu+qlJlRocRbLNRrVIkv
xoCGoKDRHbNLSXDWvV13FqVJwxm8FZbG9IrlB/tnvbnW5+r4fzw2O6T0iuUH+2e9udbn6vh/PDY7
pPSK5Qf7Z7251ufq+H88Njuk9IrlB/tnvbnW5+r4fzw2O6T0iuUH+2e9udbn6vh/PDY7pPSK5Qf7
Z7251ufq+H88Njuk9IrlB/tnvbnW5+r4fzw2O6WB07lk8t+yKq/T6ziU5fVqPSctKrycPrJm1umw
1OL3in1SFRbYj1GRKZQokKlbzKQ6SCcUtpSlNlP5YSTllo/tdnLR5a12vlRLExHftOE8ZtTrsn4b
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
/FL/AOP/AAX96yDhN3RmQgAP/9k=

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: text/css;
	charset="ks_c_5601-1987"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://developer.apple.com/global/styles/nav.css

#globalheader {
	Z-INDEX: 9998; MARGIN: 18px auto; WIDTH: 982px; POSITION: relative; =
HEIGHT: 38px
}
#globalheader #globalnav {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
#globalheader #globalnav LI {
	DISPLAY: inline
}
#globalheader #globalnav LI A {
	FLOAT: left; OVERFLOW: hidden; WIDTH: 117px; PADDING-TOP: 38px; HEIGHT: =
0px
}
#globalheader #globalnav LI A {
	BACKGROUND-IMAGE: url(/global/nav/images/globalnavbg.png); =
BACKGROUND-REPEAT: no-repeat; _background-image: =
url(/global/nav/images/globalnavbg.gif)
}
#globalheader #globalsearch {
	BACKGROUND-IMAGE: url(/global/nav/images/globalnavbg.png); =
BACKGROUND-REPEAT: no-repeat; _background-image: =
url(/global/nav/images/globalnavbg.gif)
}
#globalheader #globalnav LI#gn-store A {
	BACKGROUND-POSITION: 0px 0px
}
#globalheader #globalnav LI#gn-store A {
	BACKGROUND-POSITION: -117px 0px
}
#globalheader #globalnav LI#gn-mac A {
	BACKGROUND-POSITION: -234px 0px
}
#globalheader #globalnav LI#gn-ipoditunes A {
	BACKGROUND-POSITION: -351px 0px
}
#globalheader #globalnav LI#gn-iphone A {
	BACKGROUND-POSITION: -468px 0px
}
#globalheader #globalnav LI#gn-downloads A {
	BACKGROUND-POSITION: -585px 0px
}
#globalheader #globalnav LI#gn-support A {
	BACKGROUND-POSITION: -702px 0px
}
#globalheader #globalnav LI#gn-apple A:hover {
	BACKGROUND-POSITION: 0px -38px
}
#globalheader #globalnav LI#gn-store A:hover {
	BACKGROUND-POSITION: -117px -38px
}
#globalheader #globalnav LI#gn-mac A:hover {
	BACKGROUND-POSITION: -234px -38px
}
#globalheader #globalnav LI#gn-ipoditunes A:hover {
	BACKGROUND-POSITION: -351px -38px
}
#globalheader #globalnav LI#gn-iphone A:hover {
	BACKGROUND-POSITION: -468px -38px
}
#globalheader #globalnav LI#gn-downloads A:hover {
	BACKGROUND-POSITION: -585px -38px
}
#globalheader #globalnav LI#gn-support A:hover {
	BACKGROUND-POSITION: -702px -38px
}
#globalheader #globalnav LI#gn-apple A:active {
	BACKGROUND-POSITION: 0px -76px
}
#globalheader #globalnav LI#gn-store A:active {
	BACKGROUND-POSITION: -117px -76px
}
#globalheader #globalnav LI#gn-mac A:active {
	BACKGROUND-POSITION: -234px -76px
}
#globalheader #globalnav LI#gn-ipoditunes A:active {
	BACKGROUND-POSITION: -351px -76px
}
#globalheader #globalnav LI#gn-iphone A:active {
	BACKGROUND-POSITION: -468px -76px
}
#globalheader #globalnav LI#gn-downloads A:active {
	BACKGROUND-POSITION: -585px -76px
}
#globalheader #globalnav LI#gn-support A:active {
	BACKGROUND-POSITION: -702px -76px
}
.home#globalheader #globalnav LI#gn-apple A:hover {
	BACKGROUND-POSITION: 0px 0px; CURSOR: default
}
.store#globalheader #globalnav LI#gn-store A {
	BACKGROUND-POSITION: -117px -114px
}
.mac#globalheader #globalnav LI#gn-mac A {
	BACKGROUND-POSITION: -234px -114px
}
.ipoditunes#globalheader #globalnav LI#gn-ipoditunes A {
	BACKGROUND-POSITION: -351px -114px
}
.iphone#globalheader #globalnav LI#gn-iphone A {
	BACKGROUND-POSITION: -468px -114px
}
.downloads#globalheader #globalnav LI#gn-downloads A {
	BACKGROUND-POSITION: -585px -114px
}
.support#globalheader #globalnav LI#gn-support A {
	BACKGROUND-POSITION: -702px -114px
}
#globalsearch {
	BACKGROUND-POSITION: 100% 0px; RIGHT: 0px; WIDTH: 163px; =
BACKGROUND-REPEAT: no-repeat; POSITION: absolute; TOP: 0px; HEIGHT: 38px
}
.active#globalsearch {
	BACKGROUND-POSITION: 100% -38px
}
#globalsearch INPUT.g-prettysearch {
	MARGIN-TOP: 9px; BACKGROUND: =
url(/global/nav/images/searchfield_repeat.png) repeat-x center top; =
MARGIN-LEFT: 11px; WIDTH: 140px; HEIGHT: 16px
}
#globalsearch .search-wrapper {
	MARGIN-TOP: 9px; MARGIN-LEFT: 11px; WIDTH: 140px; POSITION: relative
}
#globalsearch .search-wrapper INPUT.g-prettysearch {
	MARGIN-TOP: -1px; MARGIN-LEFT: 10px; WIDTH: 110px; MARGIN-RIGHT: -2px
}
#globalsearch .search-wrapper .left {
	BEHAVIOR: url(/global/scripts/lib/iepngfix.htc)
}
#globalsearch .search-wrapper .right {
	BEHAVIOR: url(/global/scripts/lib/iepngfix.htc)
}
#globalsearch .search-wrapper .left {
	DISPLAY: block; BACKGROUND: =
url(/global/nav/images/searchfield_leftcap.png) no-repeat left top; =
LEFT: 0px; WIDTH: 20px; POSITION: absolute; TOP: 0px; HEIGHT: 19px
}
#globalsearch .search-wrapper .right {
	DISPLAY: block; RIGHT: 0px; BACKGROUND: =
url(/global/nav/images/searchfield_rightcap.png) no-repeat right top; =
WIDTH: 10px; POSITION: absolute; TOP: 0px; HEIGHT: 19px
}
#globalsearch .blurred.empty.search-wrapper INPUT {
	COLOR: #7e7e7e
}
#globalsearch .search-wrapper .reset {
	DISPLAY: block; Z-INDEX: 1; RIGHT: 4px; BACKGROUND: =
url(/global/nav/images/close.gif); OVERFLOW: hidden; WIDTH: 11px; =
CURSOR: pointer; POSITION: absolute; TOP: 4px; HEIGHT: 11px; _cursor: =
hand
}
#globalsearch .empty.search-wrapper .reset {
	DISPLAY: none
}
#globalsearch .search-wrapper INPUT.g-prettysearch {
	BORDER-TOP-WIDTH: 0px; PADDING-RIGHT: 0px; PADDING-LEFT: 0px; =
BORDER-LEFT-WIDTH: 0px; RIGHT: 10px; BACKGROUND: =
url(/global/nav/images/searchfield_repeat.png) repeat-x center top; =
BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; FONT: 11px =
"Lucida Grande", Geneva, Arial, sans-serif; WIDTH: 110px; PADDING-TOP: =
3px; POSITION: absolute; TOP: 0px; BORDER-RIGHT-WIDTH: 0px
}
#globalsearch LABEL .prettyplaceholder {
	DISPLAY: none
}
#sp-results {
	LEFT: 165px; MARGIN-BOTTOM: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: -2px; =
POSITION: absolute; TOP: 61px; HEIGHT: 0px
}
#sp-results .inside {
	FONT-SIZE: 1px; RIGHT: 0px; WIDTH: 328px; LINE-HEIGHT: 1px; POSITION: =
absolute; TOP: 0px; HEIGHT: auto
}
#sp-results .resultCat {
	BORDER-RIGHT: #fb6bff 1px; BORDER-TOP: #fb6bff 1px; BACKGROUND: =
#919191; PADDING-BOTTOM: 12px; MARGIN: 0px; FONT: bold 11px "Lucida =
Grande", Geneva, Arial, Verdana, sans-serif; BORDER-LEFT: #fb6bff 1px; =
WIDTH: 302px; COLOR: #f6f6f6; BORDER-BOTTOM: #fb6bff 1px; POSITION: =
relative; HEIGHT: 8px
}
UL.sp-results {
	PADDING-RIGHT: 3px; PADDING-LEFT: 3px; BACKGROUND: =
url(/global/nav/images/shortcuts_bg_mid_grey.png) repeat-y 0px 0px; =
PADDING-BOTTOM: 0px; MARGIN: 0px; FONT: 10px/14px "Lucida Grande", =
Geneva, Arial, Verdana, sans-serif; WIDTH: 328px; COLOR: #333; =
PADDING-TOP: 0px; TEXT-ALIGN: left; _background: =
url(/global/nav/images/shortcuts_bg_mid_grey.gif) repeat-y 0 0
}
UL.sp-results LI {
	BORDER-RIGHT: #919191 1px solid; PADDING-RIGHT: 10px; PADDING-LEFT: =
10px; PADDING-BOTTOM: 5px; MARGIN: 0px 0px -3px; BORDER-LEFT: #919191 =
1px solid; WIDTH: 300px; PADDING-TOP: 5px; LIST-STYLE-TYPE: none; =
POSITION: relative; HEIGHT: 4.6em
}
UL.sp-results LI.viewall {
	BACKGROUND: url(/global/nav/images/shortcuts_bg_foot_grey.png) =
no-repeat left bottom; LEFT: 0px; WIDTH: 308px; COLOR: #000; =
BORDER-TOP-STYLE: none; BOTTOM: -27px; BORDER-RIGHT-STYLE: none; =
BORDER-LEFT-STYLE: none; POSITION: absolute; HEIGHT: 20px; TEXT-ALIGN: =
right; BORDER-BOTTOM-STYLE: none; _background: =
url(/global/nav/images/shortcuts_bg_foot_grey.gif) no-repeat left bottom
}
UL.sp-results LI.viewall A {
	PADDING-RIGHT: 23px; BACKGROUND: =
url(/global/nav/images/shortcuts_arrow.gif) no-repeat 99% 50%; =
PADDING-BOTTOM: 3px; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); =
FONT: bold 11px "Lucida Grande", Geneva, Arial, Verdana, sans-serif; =
COLOR: #fff; PADDING-TOP: 3px
}
UL.sp-results LI.hoverli {
	BACKGROUND: #b7b7b7 repeat-x; CURSOR: pointer; COLOR: #fff
}
UL.sp-results LI.hoverli H4 A {
	COLOR: #fff
}
UL.sp-results LI.hoverli P {
	COLOR: #f1f1f1
}
UL.sp-results LI SPAN.text {
	DISPLAY: block; LEFT: 68px; WIDTH: 240px; POSITION: absolute
}
UL.sp-results LI H4 {
	FONT-WEIGHT: bold; FONT-SIZE: 11px; MARGIN: 0px
}
UL.sp-results LI P {
	FONT-SIZE: 10px; MARGIN: 0px; OVERFLOW: hidden; COLOR: #555; HEIGHT: =
2.7em
}
UL.sp-results LI A {
	COLOR: #606060; TEXT-DECORATION: none
}
UL.sp-results LI IMG {
	LEFT: 10px; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); WIDTH: =
46px; POSITION: absolute; HEIGHT: 46px
}
UL.sp-results LI .replacementimg {
	LEFT: 10px; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); WIDTH: =
46px; POSITION: absolute; HEIGHT: 46px
}
UL.sp-results LI H4 A {
	COLOR: #191919
}
UL.sp-results LI.hover.viewall {
	BACKGROUND: url(/global/nav/images/shortcuts_bg_foot_grey.png) =
no-repeat left bottom
}
#sp-search-spinner {
	DISPLAY: none; Z-INDEX: 10; RIGHT: 16px; POSITION: absolute; TOP: 13px
}
#sp-search-cancel IMG {
	CURSOR: pointer
}
#sp-results .firstCat {
	BACKGROUND: url(/global/nav/images/shortcuts_bg_head_grey.png) =
no-repeat left top; LEFT: 0px; WIDTH: 308px; POSITION: absolute; TOP: =
-25px; HEIGHT: 8px; _background: =
url(/global/nav/images/shortcuts_bg_head_grey.gif) no-repeat left top
}
.viewall#sp-result-none {
	BOTTOM: -27px
}
.viewall#sp-result-none A {
	FONT-SIZE: 10px
}
#globalfooter {
	FONT-SIZE: 10px; PADDING-BOTTOM: 36px; MARGIN: 18px auto; COLOR: #999; =
TEXT-ALIGN: left! important
}
#globalfooter A {
	TEXT-DECORATION: none
}
#globalfooter A:hover {
	TEXT-DECORATION: underline
}
#globalfooter P {
	MARGIN: 0px
}
#globalfooter .gf-buy {
	FLOAT: left; MARGIN: 18px 0px 9px; WIDTH: 60%
}
#globalfooter .gf-links {
	FLOAT: right; MARGIN: 18px 0px 9px; TEXT-ALIGN: right
}
#globalfooter .gf-links A {
	PADDING-RIGHT: 10px; PADDING-LEFT: 10px; PADDING-BOTTOM: 0px; =
PADDING-TOP: 0px; WHITE-SPACE: nowrap
}
#globalfooter .gf-links A.last {
	PADDING-RIGHT: 0px; WIDTH: auto! important; _float: none
}
#globalfooter .gf-sosumi {
	CLEAR: both; BORDER-TOP: #eee 1px solid; WIDTH: 100%; PADDING-TOP: 9px
}
#globalfooter .gf-sosumi A {
	PADDING-RIGHT: 10px; PADDING-LEFT: 10px; PADDING-BOTTOM: 0px; =
PADDING-TOP: 0px
}
#globalfooter {
	WIDTH: 980px
}
#breadcrumbs {
	FONT-WEIGHT: bold; FONT-SIZE: 11px; BACKGROUND: =
url(/global/nav/images/breadcrumb_bg.png) no-repeat; BEHAVIOR: =
url(/global/scripts/lib/iepngfix.htc); OVERFLOW: hidden; COLOR: #444; =
LINE-HEIGHT: 34px; HEIGHT: 36px; text-shadow: 2px 2px 1px #fff
}
#breadcrumbs A {
	PADDING-RIGHT: 10px; PADDING-LEFT: 10px; FLOAT: left; PADDING-BOTTOM: =
0px; MARGIN-LEFT: -10px; COLOR: #444; PADDING-TOP: 0px; POSITION: =
relative; TEXT-DECORATION: none; _cursor: hand
}
#breadcrumbs A:hover {
	COLOR: #333; TEXT-DECORATION: none! important
}
#breadcrumbs A.home {
	MARGIN: 0px; OVERFLOW: hidden; WIDTH: 15px; PADDING-TOP: 36px; HEIGHT: =
0px
}
#breadcrumbs SPAN {
	BACKGROUND: url(/global/nav/images/breadcrumb_sep.png) no-repeat; =
FLOAT: left; MARGIN: 1px 10px 0px 0px; BEHAVIOR: =
url(/global/scripts/lib/iepngfix.htc); OVERFLOW: hidden; WIDTH: 9px; =
PADDING-TOP: 34px; POSITION: relative; HEIGHT: 0px
}
#directorynav {
	BORDER-TOP: #e5e5e5 1px solid; MARGIN-TOP: -4px; FONT-SIZE: 11px; =
BACKGROUND: url(/global/nav/images/directory_bg.png) repeat-y; FLOAT: =
left; WIDTH: 100%; POSITION: relative
}
#directorynav .column {
	PADDING-RIGHT: 0px; PADDING-LEFT: 18px; PADDING-BOTTOM: 0px; WIDTH: =
122px; PADDING-TOP: 9px
}
#directorynav .last.column {
	PADDING-RIGHT: 0px; FLOAT: left! important
}
#directorynav H3 {
	FONT-WEIGHT: bold; COLOR: #444
}
#directorynav H3.standalone {
	MARGIN-BOTTOM: 18px
}
#directorynav A {
	DISPLAY: block; _zoom: 1
}
#directorynav A:link {
	COLOR: #777; TEXT-DECORATION: none
}
#directorynav A:visited {
	COLOR: #777; TEXT-DECORATION: none
}
#directorynav H3.standalone A:link {
	COLOR: #444
}
#directorynav H3.standalone A:visited {
	COLOR: #444
}
#directorynav A:hover {
	COLOR: #333! important; TEXT-DECORATION: none! important
}
#directorynav .capbottom {
	CLEAR: both; BACKGROUND: url(/global/nav/images/directory_capbg.png) =
no-repeat; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); WIDTH: =
980px; POSITION: relative; TOP: 5px; HEIGHT: 5px; _top: 12px
}
.gf-900 #directorynav .column {
	WIDTH: 120px
}
.gf-980 .mac#directorynav #dn-cola {
	WIDTH: 135px
}
.gf-980 .mac#directorynav #dn-colb {
	WIDTH: 100px
}
.gf-980 .mac#directorynav #dn-cold {
	WIDTH: 110px
}
.gf-980 .mac#directorynav #dn-colg {
	WIDTH: 130px
}
.iphone#directorynav .column {
	WIDTH: 174px
}
.ipoditunes#directorynav .column {
	WIDTH: 178px
}
.ipoditunes#directorynav .productred {
	FONT-SIZE: 9px; WHITE-SPACE: nowrap
}
#directorynav UL {
	MARGIN-BOTTOM: 9px
}

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: text/css;
	charset="ks_c_5601-1987"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://developer.apple.com/global/styles/nav.css

#globalheader {
	Z-INDEX: 9998; MARGIN: 18px auto; WIDTH: 982px; POSITION: relative; =
HEIGHT: 38px
}
#globalheader #globalnav {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
#globalheader #globalnav LI {
	DISPLAY: inline
}
#globalheader #globalnav LI A {
	FLOAT: left; OVERFLOW: hidden; WIDTH: 117px; PADDING-TOP: 38px; HEIGHT: =
0px
}
#globalheader #globalnav LI A {
	BACKGROUND-IMAGE: url(/global/nav/images/globalnavbg.png); =
BACKGROUND-REPEAT: no-repeat; _background-image: =
url(/global/nav/images/globalnavbg.gif)
}
#globalheader #globalsearch {
	BACKGROUND-IMAGE: url(/global/nav/images/globalnavbg.png); =
BACKGROUND-REPEAT: no-repeat; _background-image: =
url(/global/nav/images/globalnavbg.gif)
}
#globalheader #globalnav LI#gn-store A {
	BACKGROUND-POSITION: 0px 0px
}
#globalheader #globalnav LI#gn-store A {
	BACKGROUND-POSITION: -117px 0px
}
#globalheader #globalnav LI#gn-mac A {
	BACKGROUND-POSITION: -234px 0px
}
#globalheader #globalnav LI#gn-ipoditunes A {
	BACKGROUND-POSITION: -351px 0px
}
#globalheader #globalnav LI#gn-iphone A {
	BACKGROUND-POSITION: -468px 0px
}
#globalheader #globalnav LI#gn-downloads A {
	BACKGROUND-POSITION: -585px 0px
}
#globalheader #globalnav LI#gn-support A {
	BACKGROUND-POSITION: -702px 0px
}
#globalheader #globalnav LI#gn-apple A:hover {
	BACKGROUND-POSITION: 0px -38px
}
#globalheader #globalnav LI#gn-store A:hover {
	BACKGROUND-POSITION: -117px -38px
}
#globalheader #globalnav LI#gn-mac A:hover {
	BACKGROUND-POSITION: -234px -38px
}
#globalheader #globalnav LI#gn-ipoditunes A:hover {
	BACKGROUND-POSITION: -351px -38px
}
#globalheader #globalnav LI#gn-iphone A:hover {
	BACKGROUND-POSITION: -468px -38px
}
#globalheader #globalnav LI#gn-downloads A:hover {
	BACKGROUND-POSITION: -585px -38px
}
#globalheader #globalnav LI#gn-support A:hover {
	BACKGROUND-POSITION: -702px -38px
}
#globalheader #globalnav LI#gn-apple A:active {
	BACKGROUND-POSITION: 0px -76px
}
#globalheader #globalnav LI#gn-store A:active {
	BACKGROUND-POSITION: -117px -76px
}
#globalheader #globalnav LI#gn-mac A:active {
	BACKGROUND-POSITION: -234px -76px
}
#globalheader #globalnav LI#gn-ipoditunes A:active {
	BACKGROUND-POSITION: -351px -76px
}
#globalheader #globalnav LI#gn-iphone A:active {
	BACKGROUND-POSITION: -468px -76px
}
#globalheader #globalnav LI#gn-downloads A:active {
	BACKGROUND-POSITION: -585px -76px
}
#globalheader #globalnav LI#gn-support A:active {
	BACKGROUND-POSITION: -702px -76px
}
.home#globalheader #globalnav LI#gn-apple A:hover {
	BACKGROUND-POSITION: 0px 0px; CURSOR: default
}
.store#globalheader #globalnav LI#gn-store A {
	BACKGROUND-POSITION: -117px -114px
}
.mac#globalheader #globalnav LI#gn-mac A {
	BACKGROUND-POSITION: -234px -114px
}
.ipoditunes#globalheader #globalnav LI#gn-ipoditunes A {
	BACKGROUND-POSITION: -351px -114px
}
.iphone#globalheader #globalnav LI#gn-iphone A {
	BACKGROUND-POSITION: -468px -114px
}
.downloads#globalheader #globalnav LI#gn-downloads A {
	BACKGROUND-POSITION: -585px -114px
}
.support#globalheader #globalnav LI#gn-support A {
	BACKGROUND-POSITION: -702px -114px
}
#globalsearch {
	BACKGROUND-POSITION: 100% 0px; RIGHT: 0px; WIDTH: 163px; =
BACKGROUND-REPEAT: no-repeat; POSITION: absolute; TOP: 0px; HEIGHT: 38px
}
.active#globalsearch {
	BACKGROUND-POSITION: 100% -38px
}
#globalsearch INPUT.g-prettysearch {
	MARGIN-TOP: 9px; BACKGROUND: =
url(/global/nav/images/searchfield_repeat.png) repeat-x center top; =
MARGIN-LEFT: 11px; WIDTH: 140px; HEIGHT: 16px
}
#globalsearch .search-wrapper {
	MARGIN-TOP: 9px; MARGIN-LEFT: 11px; WIDTH: 140px; POSITION: relative
}
#globalsearch .search-wrapper INPUT.g-prettysearch {
	MARGIN-TOP: -1px; MARGIN-LEFT: 10px; WIDTH: 110px; MARGIN-RIGHT: -2px
}
#globalsearch .search-wrapper .left {
	BEHAVIOR: url(/global/scripts/lib/iepngfix.htc)
}
#globalsearch .search-wrapper .right {
	BEHAVIOR: url(/global/scripts/lib/iepngfix.htc)
}
#globalsearch .search-wrapper .left {
	DISPLAY: block; BACKGROUND: =
url(/global/nav/images/searchfield_leftcap.png) no-repeat left top; =
LEFT: 0px; WIDTH: 20px; POSITION: absolute; TOP: 0px; HEIGHT: 19px
}
#globalsearch .search-wrapper .right {
	DISPLAY: block; RIGHT: 0px; BACKGROUND: =
url(/global/nav/images/searchfield_rightcap.png) no-repeat right top; =
WIDTH: 10px; POSITION: absolute; TOP: 0px; HEIGHT: 19px
}
#globalsearch .blurred.empty.search-wrapper INPUT {
	COLOR: #7e7e7e
}
#globalsearch .search-wrapper .reset {
	DISPLAY: block; Z-INDEX: 1; RIGHT: 4px; BACKGROUND: =
url(/global/nav/images/close.gif); OVERFLOW: hidden; WIDTH: 11px; =
CURSOR: pointer; POSITION: absolute; TOP: 4px; HEIGHT: 11px; _cursor: =
hand
}
#globalsearch .empty.search-wrapper .reset {
	DISPLAY: none
}
#globalsearch .search-wrapper INPUT.g-prettysearch {
	BORDER-TOP-WIDTH: 0px; PADDING-RIGHT: 0px; PADDING-LEFT: 0px; =
BORDER-LEFT-WIDTH: 0px; RIGHT: 10px; BACKGROUND: =
url(/global/nav/images/searchfield_repeat.png) repeat-x center top; =
BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; FONT: 11px =
"Lucida Grande", Geneva, Arial, sans-serif; WIDTH: 110px; PADDING-TOP: =
3px; POSITION: absolute; TOP: 0px; BORDER-RIGHT-WIDTH: 0px
}
#globalsearch LABEL .prettyplaceholder {
	DISPLAY: none
}
#sp-results {
	LEFT: 165px; MARGIN-BOTTOM: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: -2px; =
POSITION: absolute; TOP: 61px; HEIGHT: 0px
}
#sp-results .inside {
	FONT-SIZE: 1px; RIGHT: 0px; WIDTH: 328px; LINE-HEIGHT: 1px; POSITION: =
absolute; TOP: 0px; HEIGHT: auto
}
#sp-results .resultCat {
	BORDER-RIGHT: #fb6bff 1px; BORDER-TOP: #fb6bff 1px; BACKGROUND: =
#919191; PADDING-BOTTOM: 12px; MARGIN: 0px; FONT: bold 11px "Lucida =
Grande", Geneva, Arial, Verdana, sans-serif; BORDER-LEFT: #fb6bff 1px; =
WIDTH: 302px; COLOR: #f6f6f6; BORDER-BOTTOM: #fb6bff 1px; POSITION: =
relative; HEIGHT: 8px
}
UL.sp-results {
	PADDING-RIGHT: 3px; PADDING-LEFT: 3px; BACKGROUND: =
url(/global/nav/images/shortcuts_bg_mid_grey.png) repeat-y 0px 0px; =
PADDING-BOTTOM: 0px; MARGIN: 0px; FONT: 10px/14px "Lucida Grande", =
Geneva, Arial, Verdana, sans-serif; WIDTH: 328px; COLOR: #333; =
PADDING-TOP: 0px; TEXT-ALIGN: left; _background: =
url(/global/nav/images/shortcuts_bg_mid_grey.gif) repeat-y 0 0
}
UL.sp-results LI {
	BORDER-RIGHT: #919191 1px solid; PADDING-RIGHT: 10px; PADDING-LEFT: =
10px; PADDING-BOTTOM: 5px; MARGIN: 0px 0px -3px; BORDER-LEFT: #919191 =
1px solid; WIDTH: 300px; PADDING-TOP: 5px; LIST-STYLE-TYPE: none; =
POSITION: relative; HEIGHT: 4.6em
}
UL.sp-results LI.viewall {
	BACKGROUND: url(/global/nav/images/shortcuts_bg_foot_grey.png) =
no-repeat left bottom; LEFT: 0px; WIDTH: 308px; COLOR: #000; =
BORDER-TOP-STYLE: none; BOTTOM: -27px; BORDER-RIGHT-STYLE: none; =
BORDER-LEFT-STYLE: none; POSITION: absolute; HEIGHT: 20px; TEXT-ALIGN: =
right; BORDER-BOTTOM-STYLE: none; _background: =
url(/global/nav/images/shortcuts_bg_foot_grey.gif) no-repeat left bottom
}
UL.sp-results LI.viewall A {
	PADDING-RIGHT: 23px; BACKGROUND: =
url(/global/nav/images/shortcuts_arrow.gif) no-repeat 99% 50%; =
PADDING-BOTTOM: 3px; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); =
FONT: bold 11px "Lucida Grande", Geneva, Arial, Verdana, sans-serif; =
COLOR: #fff; PADDING-TOP: 3px
}
UL.sp-results LI.hoverli {
	BACKGROUND: #b7b7b7 repeat-x; CURSOR: pointer; COLOR: #fff
}
UL.sp-results LI.hoverli H4 A {
	COLOR: #fff
}
UL.sp-results LI.hoverli P {
	COLOR: #f1f1f1
}
UL.sp-results LI SPAN.text {
	DISPLAY: block; LEFT: 68px; WIDTH: 240px; POSITION: absolute
}
UL.sp-results LI H4 {
	FONT-WEIGHT: bold; FONT-SIZE: 11px; MARGIN: 0px
}
UL.sp-results LI P {
	FONT-SIZE: 10px; MARGIN: 0px; OVERFLOW: hidden; COLOR: #555; HEIGHT: =
2.7em
}
UL.sp-results LI A {
	COLOR: #606060; TEXT-DECORATION: none
}
UL.sp-results LI IMG {
	LEFT: 10px; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); WIDTH: =
46px; POSITION: absolute; HEIGHT: 46px
}
UL.sp-results LI .replacementimg {
	LEFT: 10px; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); WIDTH: =
46px; POSITION: absolute; HEIGHT: 46px
}
UL.sp-results LI H4 A {
	COLOR: #191919
}
UL.sp-results LI.hover.viewall {
	BACKGROUND: url(/global/nav/images/shortcuts_bg_foot_grey.png) =
no-repeat left bottom
}
#sp-search-spinner {
	DISPLAY: none; Z-INDEX: 10; RIGHT: 16px; POSITION: absolute; TOP: 13px
}
#sp-search-cancel IMG {
	CURSOR: pointer
}
#sp-results .firstCat {
	BACKGROUND: url(/global/nav/images/shortcuts_bg_head_grey.png) =
no-repeat left top; LEFT: 0px; WIDTH: 308px; POSITION: absolute; TOP: =
-25px; HEIGHT: 8px; _background: =
url(/global/nav/images/shortcuts_bg_head_grey.gif) no-repeat left top
}
.viewall#sp-result-none {
	BOTTOM: -27px
}
.viewall#sp-result-none A {
	FONT-SIZE: 10px
}
#globalfooter {
	FONT-SIZE: 10px; PADDING-BOTTOM: 36px; MARGIN: 18px auto; COLOR: #999; =
TEXT-ALIGN: left! important
}
#globalfooter A {
	TEXT-DECORATION: none
}
#globalfooter A:hover {
	TEXT-DECORATION: underline
}
#globalfooter P {
	MARGIN: 0px
}
#globalfooter .gf-buy {
	FLOAT: left; MARGIN: 18px 0px 9px; WIDTH: 60%
}
#globalfooter .gf-links {
	FLOAT: right; MARGIN: 18px 0px 9px; TEXT-ALIGN: right
}
#globalfooter .gf-links A {
	PADDING-RIGHT: 10px; PADDING-LEFT: 10px; PADDING-BOTTOM: 0px; =
PADDING-TOP: 0px; WHITE-SPACE: nowrap
}
#globalfooter .gf-links A.last {
	PADDING-RIGHT: 0px; WIDTH: auto! important; _float: none
}
#globalfooter .gf-sosumi {
	CLEAR: both; BORDER-TOP: #eee 1px solid; WIDTH: 100%; PADDING-TOP: 9px
}
#globalfooter .gf-sosumi A {
	PADDING-RIGHT: 10px; PADDING-LEFT: 10px; PADDING-BOTTOM: 0px; =
PADDING-TOP: 0px
}
#globalfooter {
	WIDTH: 980px
}
#breadcrumbs {
	FONT-WEIGHT: bold; FONT-SIZE: 11px; BACKGROUND: =
url(/global/nav/images/breadcrumb_bg.png) no-repeat; BEHAVIOR: =
url(/global/scripts/lib/iepngfix.htc); OVERFLOW: hidden; COLOR: #444; =
LINE-HEIGHT: 34px; HEIGHT: 36px; text-shadow: 2px 2px 1px #fff
}
#breadcrumbs A {
	PADDING-RIGHT: 10px; PADDING-LEFT: 10px; FLOAT: left; PADDING-BOTTOM: =
0px; MARGIN-LEFT: -10px; COLOR: #444; PADDING-TOP: 0px; POSITION: =
relative; TEXT-DECORATION: none; _cursor: hand
}
#breadcrumbs A:hover {
	COLOR: #333; TEXT-DECORATION: none! important
}
#breadcrumbs A.home {
	MARGIN: 0px; OVERFLOW: hidden; WIDTH: 15px; PADDING-TOP: 36px; HEIGHT: =
0px
}
#breadcrumbs SPAN {
	BACKGROUND: url(/global/nav/images/breadcrumb_sep.png) no-repeat; =
FLOAT: left; MARGIN: 1px 10px 0px 0px; BEHAVIOR: =
url(/global/scripts/lib/iepngfix.htc); OVERFLOW: hidden; WIDTH: 9px; =
PADDING-TOP: 34px; POSITION: relative; HEIGHT: 0px
}
#directorynav {
	BORDER-TOP: #e5e5e5 1px solid; MARGIN-TOP: -4px; FONT-SIZE: 11px; =
BACKGROUND: url(/global/nav/images/directory_bg.png) repeat-y; FLOAT: =
left; WIDTH: 100%; POSITION: relative
}
#directorynav .column {
	PADDING-RIGHT: 0px; PADDING-LEFT: 18px; PADDING-BOTTOM: 0px; WIDTH: =
122px; PADDING-TOP: 9px
}
#directorynav .last.column {
	PADDING-RIGHT: 0px; FLOAT: left! important
}
#directorynav H3 {
	FONT-WEIGHT: bold; COLOR: #444
}
#directorynav H3.standalone {
	MARGIN-BOTTOM: 18px
}
#directorynav A {
	DISPLAY: block; _zoom: 1
}
#directorynav A:link {
	COLOR: #777; TEXT-DECORATION: none
}
#directorynav A:visited {
	COLOR: #777; TEXT-DECORATION: none
}
#directorynav H3.standalone A:link {
	COLOR: #444
}
#directorynav H3.standalone A:visited {
	COLOR: #444
}
#directorynav A:hover {
	COLOR: #333! important; TEXT-DECORATION: none! important
}
#directorynav .capbottom {
	CLEAR: both; BACKGROUND: url(/global/nav/images/directory_capbg.png) =
no-repeat; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); WIDTH: =
980px; POSITION: relative; TOP: 5px; HEIGHT: 5px; _top: 12px
}
.gf-900 #directorynav .column {
	WIDTH: 120px
}
.gf-980 .mac#directorynav #dn-cola {
	WIDTH: 135px
}
.gf-980 .mac#directorynav #dn-colb {
	WIDTH: 100px
}
.gf-980 .mac#directorynav #dn-cold {
	WIDTH: 110px
}
.gf-980 .mac#directorynav #dn-colg {
	WIDTH: 130px
}
.iphone#directorynav .column {
	WIDTH: 174px
}
.ipoditunes#directorynav .column {
	WIDTH: 178px
}
.ipoditunes#directorynav .productred {
	FONT-SIZE: 9px; WHITE-SPACE: nowrap
}
#directorynav UL {
	MARGIN-BOTTOM: 9px
}

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: text/css;
	charset="ks_c_5601-1987"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://developer.apple.com/global/styles/base.css

@import url( /global/styles/nav.css );
HTML {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
BODY {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
DIV {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
UL {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
OL {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
LI {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
DL {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
DT {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
DD {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
H1 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
H2 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
H3 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
H4 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
H5 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
H6 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
PRE {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
FORM {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
P {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
BLOCKQUOTE {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
FIELDSET {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
INPUT {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
H1 {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
H2 {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
H3 {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
H4 {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
H5 {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
H6 {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
PRE {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
CODE {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
ADDRESS {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
CAPTION {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
CITE {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
CODE {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
EM {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
STRONG {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
TH {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
UL {
	LIST-STYLE-TYPE: none
}
OL {
	LIST-STYLE-TYPE: none
}
FIELDSET {
	BORDER-TOP-STYLE: none; BORDER-RIGHT-STYLE: none; BORDER-LEFT-STYLE: =
none; BORDER-BOTTOM-STYLE: none
}
IMG {
	BORDER-TOP-STYLE: none; BORDER-RIGHT-STYLE: none; BORDER-LEFT-STYLE: =
none; BORDER-BOTTOM-STYLE: none
}
CAPTION {
	TEXT-ALIGN: left
}
TH {
	TEXT-ALIGN: left
}
TABLE {
	BORDER-COLLAPSE: collapse; border-spacing: 0
}
.clear {
	CLEAR: both
}
.clearer {
	CLEAR: both; PADDING-RIGHT: 0px; DISPLAY: block; PADDING-LEFT: 0px; =
FONT-SIZE: 1px; PADDING-BOTTOM: 0px; MARGIN: 0px; LINE-HEIGHT: 1px; =
PADDING-TOP: 0px; HEIGHT: 0px
}
IMG {
	BEHAVIOR: url(/global/scripts/lib/iepngfix.htc)
}
IMG.left {
	FLOAT: left; MARGIN: 2px 20px 16px 0px
}
IMG.right {
	FLOAT: right; MARGIN: 2px 0px 16px 20px
}
IMG.across {
	MARGIN: 2px 0px 16px
}
IMG.flushleft {
	MARGIN-LEFT: -20px
}
IMG.flushright {
	MARGIN-RIGHT: -20px
}
#container {
	MARGIN: 0px auto; WIDTH: 980px; POSITION: relative
}
#main {
	WIDTH: 100%; POSITION: relative
}
#content {
	PADDING-RIGHT: 20px; PADDING-LEFT: 20px; PADDING-BOTTOM: 18px; COLOR: =
#333; PADDING-TOP: 18px; POSITION: relative
}
#breadcrumb {
	CLEAR: both; FONT-SIZE: 10px; MARGIN: 18px auto; COLOR: #686868; =
TEXT-ALIGN: center
}
.column {
	FLOAT: left
}
.grid2col {
	WIDTH: 100%
}
.grid2cola {
	WIDTH: 100%
}
.grid2colb {
	WIDTH: 100%
}
.grid2colc {
	WIDTH: 100%
}
.grid2cold {
	WIDTH: 100%
}
.grid2cole {
	WIDTH: 100%
}
.grid2colf {
	WIDTH: 100%
}
.grid3col {
	WIDTH: 100%
}
.grid3cola {
	WIDTH: 100%
}
.grid4col {
	WIDTH: 100%
}
.grid5col {
	WIDTH: 100%
}
.grid6col {
	WIDTH: 100%
}
.grid2col .column {
	WIDTH: 49%
}
.grid2col .grid2col .column {
	WIDTH: 47.8%
}
.grid3col .grid2col .column {
	WIDTH: 46%
}
.grid4col .grid2col .column {
	WIDTH: 45%
}
.grid2cola .first.column {
	WIDTH: 66%
}
.grid2cola .last.column {
	WIDTH: 32%
}
.grid2colb .first.column {
	WIDTH: 74.9%
}
.grid2colb .last.column {
	WIDTH: 23%
}
.grid2colc .first.column {
	WIDTH: 32%
}
.grid2colc .last.column {
	WIDTH: 66%
}
.grid2cold .first.column {
	WIDTH: 23%
}
.grid2cold .last.column {
	WIDTH: 74.9%
}
.grid2cole .first.column {
	WIDTH: 79%
}
.grid2cole .last.column {
	WIDTH: 19%
}
.grid2colf .first.column {
	WIDTH: 19%
}
.grid2colf .last.column {
	WIDTH: 79%
}
.grid3col .column {
	MARGIN-LEFT: 2%; WIDTH: 32%
}
.grid2col .grid3col .column {
	WIDTH: 31%
}
.grid3cola .column {
	MARGIN-LEFT: 2%; WIDTH: 58%
}
.grid3cola .first.column {
	WIDTH: 19%
}
.grid3cola .last.column {
	WIDTH: 19%
}
.grid4col .column {
	MARGIN-LEFT: 3%; WIDTH: 23%
}
.grid5col .column {
	MARGIN-LEFT: 2%; WIDTH: 18.4%
}
.grid6col .column {
	MARGIN-LEFT: 2%; WIDTH: 15%
}
.first.column {
	MARGIN-LEFT: 0px! important
}
.last.column {
	MARGIN-LEFT: 0px! important
}
.last.column {
	FLOAT: right! important
}
P.last {
	_width: auto; _float: none
}
UL.last {
	_width: auto; _float: none
}
OL.last {
	_width: auto; _float: none
}
LI.last {
	_width: auto; _float: none
}
#container:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
#content:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid2col:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid2cola:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid2colb:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid2colc:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid2cold:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid2cole:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid2colf:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid3col:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid3cola:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid4col:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid5col:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid6col:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
#container {
	_zoom: 1
}
#content {
	_zoom: 1
}
.grid2col {
	_zoom: 1
}
.grid2cola {
	_zoom: 1
}
.grid2colb {
	_zoom: 1
}
.grid2colc {
	_zoom: 1
}
.grid2cold {
	_zoom: 1
}
.grid2cole {
	_zoom: 1
}
.grid2colf {
	_zoom: 1
}
.grid3col {
	_zoom: 1
}
.grid3cola {
	_zoom: 1
}
.grid4col {
	_zoom: 1
}
.grid5col {
	_zoom: 1
}
.grid6col {
	_zoom: 1
}
BODY {
	FONT: 12px/18px "Lucida Grande", Geneva, Arial, Verdana, sans-serif; =
COLOR: #333; BACKGROUND-COLOR: #fff
}
A {
	COLOR: #2971a7
}
STRONG {
	FONT-WEIGHT: bold
}
B {
	FONT-WEIGHT: bold
}
EM {
	FONT-STYLE: italic
}
I {
	FONT-STYLE: italic
}
SUP {
	PADDING-LEFT: 1px; FONT-WEIGHT: normal! important; FONT-SIZE: 10px! =
important; VERTICAL-ALIGN: baseline; COLOR: #76797c; BOTTOM: 0.33em; =
POSITION: relative; _position: static
}
.sosumi {
	FONT-SIZE: 10px! important; COLOR: #76797c
}
#main P {
	MARGIN-BOTTOM: 18px
}
#main H1 {
	FONT-WEIGHT: bold; FONT-SIZE: 24px; MARGIN-BOTTOM: 18px; LINE-HEIGHT: =
36px
}
#main H2 {
	FONT-WEIGHT: bold; FONT-SIZE: 16px; MARGIN-BOTTOM: 18px; LINE-HEIGHT: =
18px
}
#main H3 {
	FONT-WEIGHT: bold; FONT-SIZE: 1em; LINE-HEIGHT: 18px
}
#main H4 {
	FONT-WEIGHT: bold; FONT-SIZE: 10px; LINE-HEIGHT: 18px
}
#main P.intro {
	FONT-WEIGHT: bold
}
#main .more {
	TEXT-ALIGN: right
}
#main UL {
	LIST-STYLE-POSITION: outside; MARGIN-BOTTOM: 18px; LIST-STYLE-TYPE: =
none
}
#main OL {
	MARGIN-BOTTOM: 18px; MARGIN-LEFT: 2.2em; LIST-STYLE-TYPE: decimal
}
#main UL.square {
	MARGIN-LEFT: 2em
}
#main UL.circle {
	MARGIN-LEFT: 2em
}
#main UL.square {
	LIST-STYLE-POSITION: outside; LIST-STYLE-TYPE: square
}
#main UL.circle {
	LIST-STYLE-POSITION: outside; LIST-STYLE-TYPE: circle
}
#main UL UL.circle {
	MARGIN-TOP: 4px; MARGIN-BOTTOM: 5px
}
#main UL UL.square {
	MARGIN-TOP: 4px; MARGIN-BOTTOM: 5px
}
#main OL.sosumi {
	PADDING-LEFT: 2em; MARGIN-LEFT: 0px
}
#main A.pdf {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globaliconpdf12x12.gif) no-repeat 0px 0.4em
}
#main A.html {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globaliconhtml12x12.gif) no-repeat 0px 0.4em
}
#main A.qt {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globaliconqt12x12.gif) no-repeat 0px 0.4em
}
#main A.ical {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globaliconical12x12.gif) no-repeat 0px 0.4em
}
#main A.dl {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globalicondl11x10.gif) no-repeat 0px 0.4em
}
#main A.dmg {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globalicondmg12x12.gif) no-repeat 0px 0.4em
}
#main A.zip {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globaliconzip12x12.gif) no-repeat 0px 0.4em
}
#main A.keynote {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globaliconkeynote12x12.gif) no-repeat 0px =
0.4em
}
#main A.audio {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globaliconaudio12x12.gif) no-repeat 0px 0.4em
}
#main .sidebar {
	FONT-SIZE: 10px; COLOR: #686868; LINE-HEIGHT: 18px
}
#main .callout {
	FONT-SIZE: 11px; MARGIN-BOTTOM: 18px; LINE-HEIGHT: 18px
}
#main .last {
	MARGIN-BOTTOM: 0px
}
INPUT.prettysearch {
	BORDER-TOP-WIDTH: 0px; PADDING-RIGHT: 0px; PADDING-LEFT: 0px; =
BORDER-LEFT-WIDTH: 0px; BACKGROUND: =
url(/global/elements/prettysearch/searchfield_repeat.png) repeat-x =
center top; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; =
FONT: 11px "Lucida Grande", Geneva, Arial, sans-serif; WIDTH: 200px; =
PADDING-TOP: 3px; HEIGHT: 16px; BORDER-RIGHT-WIDTH: 0px
}
.search-wrapper {
	WIDTH: 200px; POSITION: relative
}
.search-wrapper INPUT.prettysearch {
	MARGIN-TOP: -1px; MARGIN-LEFT: 10px; WIDTH: 171px; MARGIN-RIGHT: -2px
}
.search-wrapper .left {
	BEHAVIOR: url(/global/scripts/lib/iepngfix.htc)
}
.search-wrapper .right {
	BEHAVIOR: url(/global/scripts/lib/iepngfix.htc)
}
.search-wrapper .left {
	DISPLAY: block; BACKGROUND: =
url(/global/elements/prettysearch/searchfield_leftcap.png) no-repeat =
left top; LEFT: 0px; WIDTH: 20px; POSITION: absolute; TOP: 0px; HEIGHT: =
19px
}
.search-wrapper .right {
	DISPLAY: block; RIGHT: 0px; BACKGROUND: =
url(/global/elements/prettysearch/searchfield_rightcap.png) no-repeat =
right top; WIDTH: 10px; POSITION: absolute; TOP: 0px; HEIGHT: 19px
}
.blurred.empty.search-wrapper INPUT {
	COLOR: #7e7e7e
}
.search-wrapper .reset {
	DISPLAY: block; Z-INDEX: 1; RIGHT: 4px; BACKGROUND: =
url(/global/elements/prettysearch/close.gif); OVERFLOW: hidden; WIDTH: =
11px; CURSOR: pointer; POSITION: absolute; TOP: 4px; HEIGHT: 11px; =
_cursor: hand
}
.empty.search-wrapper .reset {
	DISPLAY: none
}
#globalfooter P {
	MARGIN-BOTTOM: 1em
}
#globalfooter FORM {
	MARGIN: 18px 10px
}
#globalfooter .search-wrapper {
	MARGIN: 0px auto
}
#globalfooter .search-wrapper INPUT.prettysearch {
	MARGIN-LEFT: 10px
}

@media Print   =20
{
BODY {
	COLOR: #000! important
}
#main {
	COLOR: #000! important
}
#content {
	COLOR: #000! important
}
A {
	COLOR: #000! important; TEXT-DECORATION: none! important
}
A:link {
	COLOR: #000! important; TEXT-DECORATION: none! important
}
A:visited {
	COLOR: #000! important; TEXT-DECORATION: none! important
}
#tabs {
	DISPLAY: none! important
}
#globalheader {
	DISPLAY: none! important
}
#globalfooter {
	DISPLAY: none! important
}
#directorynav {
	DISPLAY: none! important
}
.noprint {
	DISPLAY: none! important
}
.hide {
	DISPLAY: none! important
}
#main A.pdf {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}
#main A.html {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}
#main A.qt {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}
#main A.ical {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}
#main A.dl {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}
#main A.dmg {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}
#main A.zip {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}
#main A.keynote {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}
#main A.audio {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}

}

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: text/css;
	charset="ks_c_5601-1987"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://devimages.apple.com/global/styles/adc.css

@import url( /global/styles/nav.css );
@import url( /global/styles/base.css );
* {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
SCRIPT {
	FONT-SIZE: 0px; HEIGHT: 0px
}
BODY {
	BACKGROUND: url(/global/elements/layout/body_bg.gif) #fff repeat-x 0px =
0px; FONT: 11px/1.4em "Lucida Grande", Geneva, Arial, Verdana, =
sans-serif; COLOR: #555
}
.script {
	DISPLAY: none
}
.noscript {
	DISPLAY: block
}
#container {
	BACKGROUND: url(/global/elements/layout/main_bgbottom.gif) no-repeat =
50% 100%; _zoom: 1
}
#main {
	PADDING-RIGHT: 50px; PADDING-LEFT: 50px; MIN-HEIGHT: 143px; BACKGROUND: =
url(/global/elements/layout/main_bgtop.gif) no-repeat 50% 0px; =
PADDING-BOTTOM: 2em; WIDTH: auto; PADDING-TOP: 3.5em; _zoom: 1; _height: =
143px
}
#stroke {
	PADDING-RIGHT: 20px; PADDING-LEFT: 25px; MIN-HEIGHT: 397px; BACKGROUND: =
url(/global/elements/layout/main_bgtop_stroke.gif) no-repeat 50% 0px; =
PADDING-BOTTOM: 2em; MARGIN: -1.2em -50px 0px; PADDING-TOP: 2.2em; =
POSITION: relative; _zoom: 1; _height: 397px
}
#content {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; FLOAT: left; PADDING-BOTTOM: =
0px; WIDTH: 580px; COLOR: #555; PADDING-TOP: 0px
}
.cap {
	CLEAR: both; FONT-SIZE: 0px
}
.selfclear {
	_zoom: 1
}
#container:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
#main:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
#stroke:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
#main #header:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.selfclear:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
#main H1 {
	FONT-SIZE: 28px; MARGIN-BOTTOM: 1.3em; COLOR: #333; LINE-HEIGHT: 1.2em
}
#main H1 IMG {
	MARGIN: 0.2em 0px 0px
}
#main H2 {
	FONT-WEIGHT: normal; FONT-SIZE: 18px; MARGIN-BOTTOM: 1.5em; COLOR: =
#333; LINE-HEIGHT: 1.2em
}
#main H2 IMG {
	MARGIN-TOP: -1.9em; MARGIN-BOTTOM: 0.6em
}
#main H3 {
	FONT-SIZE: 13px; MARGIN-BOTTOM: 0.3em; COLOR: #333; LINE-HEIGHT: 1.2em
}
#main H4 {
	FONT-SIZE: 1em; COLOR: #333; LINE-HEIGHT: 1.2em
}
#main STRONG {
	COLOR: #333
}
#main .sosumi STRONG {
	COLOR: #555
}
#main CITE {
	FONT-STYLE: italic
}
#main HR {
	BORDER-TOP: #ccc 1px solid; BACKGROUND: none transparent scroll repeat =
0% 0%; MARGIN: 0px -1px 1.6em; BORDER-RIGHT-STYLE: none; =
BORDER-LEFT-STYLE: none; HEIGHT: 0px; BORDER-BOTTOM-STYLE: none
}
#main P.intro {
	FONT-WEIGHT: normal; FONT-SIZE: 14px; MARGIN-BOTTOM: 2em; LINE-HEIGHT: =
1.3em
}
A {
	COLOR: #366088; TEXT-DECORATION: none
}
A:hover {
	TEXT-DECORATION: underline
}
#main A.arrow {
	PADDING-RIGHT: 7px; BACKGROUND: url(/global/elements/arrows/366088.gif) =
no-repeat 100% 0.4em; WHITE-SPACE: nowrap; _zoom: 1
}
#main A.circle.arrow {
	PADDING-RIGHT: 16px; BACKGROUND: =
url(/global/elements/arrows/circleblue.gif) no-repeat 100% 0.2em
}
#main A.bin {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/bin_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.code {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/code_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.doc {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/doc_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.docs {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/docs_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.technote {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/technote_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.ref {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/ref_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.lib {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/lib_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.podcast {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/podcast_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.video {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/video_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.rss {
	DISPLAY: block; BACKGROUND: url(/global/elements/icons/rss_20x11.gif) =
no-repeat; WIDTH: 20px; TEXT-INDENT: -9999px; HEIGHT: 11px; outline: =
none; -moz-outline: none
}
#main P.button {
	MARGIN-BOTTOM: 2em; WHITE-SPACE: nowrap
}
#main P.button A {
	FONT-WEIGHT: bold; COLOR: #666; TEXT-DECORATION: none
}
#main P.button A SPAN {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0.9em; =
PADDING-TOP: 0.6em
}
#main P.button A B {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0.9em; =
PADDING-TOP: 0.6em
}
#main P.button A SPAN {
	PADDING-RIGHT: 0.6em; PADDING-LEFT: 1.5em; BACKGROUND: =
url(/global/elements/buttons/cta_strokeonwhite_bgleft.gif) no-repeat 0px =
50%
}
#main P.button A B {
	PADDING-LEFT: 15px; BACKGROUND: =
url(/global/elements/buttons/cta_strokeonwhite_bgright.gif) no-repeat =
0px 50%
}
#main P.button A:hover SPAN {
	COLOR: #366088
}
#main P.button A.dark {
	COLOR: #fff; text-shadow: #333 0 1px 2px
}
#main P.button A.dark SPAN {
	PADDING-BOTTOM: 1em; PADDING-TOP: 0.5em
}
#main P.button A.dark B {
	PADDING-BOTTOM: 1em; PADDING-TOP: 0.5em
}
#main P.button A.dark SPAN {
	BACKGROUND-IMAGE: =
url(/global/elements/buttons/cta_darkonwhite_bgleft.gif)
}
#main P.button A.dark B {
	BACKGROUND-IMAGE: =
url(/global/elements/buttons/cta_darkonwhite_bgright.gif)
}
#main P.button A.dark:hover SPAN {
	COLOR: #eee
}
#main P.button A.blue {
	COLOR: #fff; text-shadow: #333 0 1px 2px
}
#main P.button A.blue SPAN {
	PADDING-BOTTOM: 1em; PADDING-TOP: 0.5em
}
#main P.button A.blue B {
	PADDING-BOTTOM: 1em; PADDING-TOP: 0.5em
}
#main P.button A.blue SPAN {
	BACKGROUND-IMAGE: =
url(/global/elements/buttons/cta_blueonwhite_bgleft.gif)
}
#main P.button A.blue B {
	BACKGROUND-IMAGE: =
url(/global/elements/buttons/cta_blueonwhite_bgright.gif)
}
#main P.button A.blue:hover SPAN {
	COLOR: #eee
}
#main #sidebar .sidebox P.button A {
	COLOR: #fff; text-shadow: #333 0 2px 2px
}
#main #sidebar .sidebox P.button A SPAN {
	PADDING-BOTTOM: 1em; PADDING-TOP: 0.5em
}
#main #sidebar .sidebox P.button A B {
	PADDING-BOTTOM: 1em; PADDING-TOP: 0.5em
}
#main #sidebar .sidebox P.button A SPAN {
	BACKGROUND-IMAGE: =
url(/global/elements/buttons/cta_darkongray_bgleft.gif)
}
#main #sidebar .sidebox P.button A B {
	BACKGROUND-IMAGE: =
url(/global/elements/buttons/cta_darkongray_bgright.gif)
}
#main #sidebar .sidebox P.button A:hover SPAN {
	COLOR: #eee
}
#main P.button A B B {
	PADDING-RIGHT: 0px! important; PADDING-LEFT: 0px! important; =
VISIBILITY: hidden; PADDING-BOTTOM: 0px! important; PADDING-TOP: 0px! =
important
}
#main P.beforelist {
	MARGIN-BOTTOM: 0.6em
}
#main UL.square {
	MARGIN-BOTTOM: 0px; PADDING-BOTTOM: 1em
}
#main UL.circle {
	MARGIN-BOTTOM: 0px; PADDING-BOTTOM: 1em
}
#main UL.icons {
	MARGIN-BOTTOM: 0px; PADDING-BOTTOM: 1em
}
#main UL.none {
	MARGIN-BOTTOM: 0px; PADDING-BOTTOM: 1em
}
#main OL {
	MARGIN-BOTTOM: 0px; PADDING-BOTTOM: 1em
}
#main UL.square LI {
	PADDING-BOTTOM: 0.6em
}
#main UL.icons LI {
	PADDING-BOTTOM: 0.6em
}
#main UL.none LI {
	PADDING-BOTTOM: 0.6em
}
#main UL.circle LI {
	PADDING-BOTTOM: 0.6em
}
#main OL LI {
	PADDING-BOTTOM: 0.6em
}
#main UL.icons LI {
	PADDING-LEFT: 2em
}
#main UL.icons LI.bin {
	BACKGROUND: url(/global/elements/icons/bin_15x15.gif) no-repeat 0px =
0.1em
}
#main UL.bin.icons LI {
	BACKGROUND: url(/global/elements/icons/bin_15x15.gif) no-repeat 0px =
0.1em
}
#main UL.icons LI.code {
	BACKGROUND: url(/global/elements/icons/code_15x15.gif) no-repeat 0px =
0px
}
#main UL.code.icons LI {
	BACKGROUND: url(/global/elements/icons/code_15x15.gif) no-repeat 0px =
0px
}
#main UL.icons LI.doc {
	BACKGROUND: url(/global/elements/icons/doc_15x15.gif) no-repeat 0px 0px
}
#main UL.doc.icons LI {
	BACKGROUND: url(/global/elements/icons/doc_15x15.gif) no-repeat 0px 0px
}
#main UL.icons LI.docs {
	BACKGROUND: url(/global/elements/icons/docs_15x15.gif) no-repeat 0px =
0.2em
}
#main UL.docs.icons LI {
	BACKGROUND: url(/global/elements/icons/docs_15x15.gif) no-repeat 0px =
0.2em
}
#main UL.icons LI.technote {
	BACKGROUND: url(/global/elements/icons/technote_15x15.gif) no-repeat =
0px 0.2em
}
#main UL.technote.icons LI {
	BACKGROUND: url(/global/elements/icons/technote_15x15.gif) no-repeat =
0px 0.2em
}
#main UL.icons LI.ref {
	BACKGROUND: url(/global/elements/icons/ref_15x15.gif) no-repeat 0px =
0.2em
}
#main UL.ref.icons LI {
	BACKGROUND: url(/global/elements/icons/ref_15x15.gif) no-repeat 0px =
0.2em
}
#main UL.icons LI.lib {
	BACKGROUND: url(/global/elements/icons/lib_15x15.gif) no-repeat 0px =
0.1em
}
#main UL.lib.icons LI {
	BACKGROUND: url(/global/elements/icons/lib_15x15.gif) no-repeat 0px =
0.1em
}
#main UL.icons LI.podcast {
	BACKGROUND: url(/global/elements/icons/podcast_15x15.gif) no-repeat 0px =
0px
}
#main UL.podcast.icons LI {
	BACKGROUND: url(/global/elements/icons/podcast_15x15.gif) no-repeat 0px =
0px
}
#main UL.icons LI.video {
	BACKGROUND: url(/global/elements/icons/video_15x15.gif) no-repeat 0px =
0.1em
}
#main UL.video.icons LI {
	BACKGROUND: url(/global/elements/icons/video_15x15.gif) no-repeat 0px =
0.1em
}
#main PRE {
	BORDER-RIGHT: #e5e5e5 1px solid; PADDING-RIGHT: 16px; BORDER-TOP: =
#e5e5e5 1px solid; PADDING-LEFT: 16px; MARGIN-BOTTOM: 1.6em; =
PADDING-BOTTOM: 1em; BORDER-LEFT: #e5e5e5 1px solid; PADDING-TOP: 1em; =
BORDER-BOTTOM: #e5e5e5 1px solid; BACKGROUND-COLOR: #f7f7f7; WORD-WRAP: =
break-word
}
#main .note {
	BORDER-RIGHT: #e5e5e5 1px solid; PADDING-RIGHT: 16px; BORDER-TOP: =
#e5e5e5 1px solid; PADDING-LEFT: 16px; MARGIN-BOTTOM: 1.6em; =
PADDING-BOTTOM: 1px; BORDER-LEFT: #e5e5e5 1px solid; PADDING-TOP: 1em; =
BORDER-BOTTOM: #e5e5e5 1px solid; BACKGROUND-COLOR: #f7f7f7
}
#main .note P {
	MARGIN-BOTTOM: 1em
}
#main .note UL.square {
	MARGIN-BOTTOM: 0.6em
}
#main .note UL.circle {
	MARGIN-BOTTOM: 0.6em
}
#main .note UL.icons {
	MARGIN-BOTTOM: 0.6em
}
#main .note UL.none {
	MARGIN-BOTTOM: 0.6em
}
#main .note OL {
	MARGIN-BOTTOM: 0.6em
}
#main TABLE.stroke {
	MARGIN: 0px 0px 1.6em; WIDTH: 100%
}
#main TABLE.stroke TH {
	FONT-WEIGHT: bold; BACKGROUND: #f7f7f7
}
#main TABLE.stroke TH {
	BORDER-RIGHT: #e5e5e5 1px solid; PADDING-RIGHT: 6px; BORDER-TOP: =
#e5e5e5 1px solid; PADDING-LEFT: 6px; PADDING-BOTTOM: 4px; =
VERTICAL-ALIGN: top; BORDER-LEFT: #e5e5e5 1px solid; PADDING-TOP: 4px; =
BORDER-BOTTOM: #e5e5e5 1px solid
}
#main TABLE.stroke TD {
	BORDER-RIGHT: #e5e5e5 1px solid; PADDING-RIGHT: 6px; BORDER-TOP: =
#e5e5e5 1px solid; PADDING-LEFT: 6px; PADDING-BOTTOM: 4px; =
VERTICAL-ALIGN: top; BORDER-LEFT: #e5e5e5 1px solid; PADDING-TOP: 4px; =
BORDER-BOTTOM: #e5e5e5 1px solid
}
#main TABLE.stroke TH:first-child {
	BORDER-LEFT-STYLE: none
}
#main TABLE.stroke TD:first-child {
	BORDER-LEFT-STYLE: none
}
#main TABLE.stroke TH:unknown {
	BORDER-RIGHT-STYLE: none
}
#main TABLE.stroke TD:unknown {
	BORDER-RIGHT-STYLE: none
}
#main TABLE.stroke TR:first-child TH {
	BORDER-TOP-STYLE: none
}
#main TABLE.stroke TR:first-child TD {
	BORDER-TOP-STYLE: none
}
#main TABLE.stroke TR:unknown TH {
	BORDER-BOTTOM-STYLE: none
}
#main TABLE.stroke TR:unknown TD {
	BORDER-BOTTOM-STYLE: none
}
#main TABLE.stripe {
	MARGIN: 0px 0px 1.6em; WIDTH: 100%
}
#main TABLE.stripe TH {
	FONT-WEIGHT: bold; BORDER-LEFT-COLOR: #ccc; BACKGROUND: #d7dce3; =
BORDER-BOTTOM-COLOR: #ccc; COLOR: #333; BORDER-TOP-COLOR: #ccc; =
BORDER-RIGHT-COLOR: #ccc
}
#main TABLE.stripe TH {
	PADDING-RIGHT: 6px; PADDING-LEFT: 6px; PADDING-BOTTOM: 4px; =
VERTICAL-ALIGN: top; PADDING-TOP: 4px
}
#main TABLE.stripe TD {
	PADDING-RIGHT: 6px; PADDING-LEFT: 6px; PADDING-BOTTOM: 4px; =
VERTICAL-ALIGN: top; PADDING-TOP: 4px
}
#main TABLE.stripe .odd TH {
	BACKGROUND: #f7f7f7
}
#main TABLE.stripe .odd TD {
	BACKGROUND: #f7f7f7
}
#main P.caption {
	MARGIN-BOTTOM: 0.3em
}
#main P.fullbleed.caption {
	MARGIN-BOTTOM: 0.6em
}
#main CAPTION {
	PADDING-BOTTOM: 0.6em
}
#main DIV.left {
	FLOAT: left; MARGIN: 2px 20px 16px 0px
}
#main DIV.right {
	FLOAT: right; MARGIN: 2px 0px 16px 20px
}
#main DIV.center {
	MARGIN-LEFT: auto; MARGIN-RIGHT: auto; TEXT-ALIGN: center
}
#main IMG.center {
	DISPLAY: block; MARGIN-LEFT: auto; MARGIN-RIGHT: auto
}
INPUT {
	BEHAVIOR: url(/global/scripts/lib/iepngfix.htc)
}
#globalheader {
	Z-INDEX: 999; MARGIN: 20px auto 0px; WIDTH: 980px; POSITION: relative; =
HEIGHT: 58px; _zoom: 1
}
#globalheader H2 {
	DISPLAY: inline
}
#globalheader H2 A {
	BACKGROUND: url(/global/elements/header/title.gif) no-repeat 0px 0px; =
LEFT: 22px; WIDTH: 213px; TEXT-INDENT: -9999px; POSITION: absolute; TOP: =
1px; HEIGHT: 23px; outline: none; -moz-outline: none
}
#globalheader UL#gh-links {
	FONT-SIZE: 9px; RIGHT: 181px; WIDTH: 23em; LINE-HEIGHT: 1.3em; =
POSITION: absolute; TOP: 6px; _width: auto
}
#globalheader UL#gh-links LI {
	BORDER-RIGHT: #b1b1b1 1px solid; PADDING-RIGHT: 1.2em; DISPLAY: inline; =
PADDING-LEFT: 0px; FLOAT: left; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px =
1.2em; PADDING-TOP: 0px
}
#globalheader UL#gh-links LI A {
	MARGIN-TOP: -2px; DISPLAY: block; COLOR: #555
}
#globalheader UL#gh-links LI A:hover {
	COLOR: #366088
}
#globalheader UL#gh-links LI#gh-links-apple A {
	DISPLAY: block; BACKGROUND: url(/global/elements/header/apple.gif) =
no-repeat 0px 0px; WIDTH: 8px; TEXT-INDENT: -9999px; HEIGHT: 10px
}
#globalheader UL#gh-links LI#gh-links-contact {
	BORDER-RIGHT-STYLE: none
}
#globalheader #gh-search {
	RIGHT: 15px; POSITION: absolute
}
#globalheader #gh-search INPUT.prettysearch {
	MARGIN-LEFT: 20px; WIDTH: 165px
}
#globalheader #gh-search .search-wrapper {
	WIDTH: 165px
}
#globalheader #gh-search .search-wrapper INPUT.prettysearch {
	WIDTH: 136px
}
#globalheader UL#gh-nav {
	RIGHT: 10px; BOTTOM: 4px; POSITION: absolute
}
#globalheader UL#gh-nav LI {
	DISPLAY: inline; FLOAT: left; MARGIN: 0px 0px 0px 1.2em
}
#globalheader UL#gh-nav LI A {
	PADDING-RIGHT: 0px; DISPLAY: block; PADDING-LEFT: 5px; PADDING-BOTTOM: =
0.3em; COLOR: #555; PADDING-TOP: 0.3em
}
#globalheader UL#gh-nav LI A:hover {
	COLOR: #366088
}
#globalheader UL#gh-nav LI.menu {
	POSITION: relative
}
#globalheader UL#gh-nav LI.menu A {
	PADDING-LEFT: 7px; MARGIN-RIGHT: 0px; TEXT-DECORATION: none; outline: =
none; -moz-outline: none
}
#globalheader UL#gh-nav LI.menu A SPAN {
	PADDING-RIGHT: 0.4em
}
#globalheader UL#gh-nav LI.menu A B {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; BACKGROUND: =
url(/global/elements/header/nav_menu_carat.gif) no-repeat 0px 60%; =
PADDING-BOTTOM: 0.4em; PADDING-TOP: 0.4em; _padding: .3em 0
}
#globalheader UL#gh-nav LI.menu A B B {
	PADDING-RIGHT: 0px; DISPLAY: inline-block; PADDING-LEFT: 0px; =
VISIBILITY: hidden; PADDING-BOTTOM: 0px; WIDTH: 1.6em; PADDING-TOP: 0px
}
#globalheader UL#gh-nav LI.menu UL {
	PADDING-RIGHT: 0px; DISPLAY: none; PADDING-LEFT: 0px; Z-INDEX: 99; =
PADDING-BOTTOM: 1px; MARGIN: 0px -4px 0px -2px; WIDTH: 137px; =
PADDING-TOP: 0px; POSITION: absolute
}
#globalheader UL#gh-nav LI.menu UL {
	PADDING-RIGHT: 0px; MARGIN-TOP: -3px; PADDING-LEFT: 0px; BACKGROUND: =
url(/global/elements/header/nav_menu_bgtop.png) no-repeat; =
PADDING-BOTTOM: 5px; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); =
PADDING-TOP: 4px
}
#globalheader UL#gh-nav LI.menu UL LI {
	PADDING-RIGHT: 6px; DISPLAY: block; PADDING-LEFT: 4px; BACKGROUND: =
url(/global/elements/header/nav_menu_bg.png) repeat-y; FLOAT: none; =
PADDING-BOTTOM: 1px; MARGIN: 0px 0px -3px; BEHAVIOR: =
url(/global/scripts/lib/iepngfix_scale.htc); WIDTH: 127px; PADDING-TOP: =
0px
}
#globalheader UL#gh-nav LI.menu UL LI A {
	PADDING-RIGHT: 5px; PADDING-LEFT: 5px; PADDING-BOTTOM: 1px; MARGIN: =
0px; COLOR: #366088; PADDING-TOP: 1px; TEXT-DECORATION: none
}
#globalheader UL#gh-nav LI.menu UL LI A:hover {
	BACKGROUND: #778ba6; COLOR: #fff
}
#globalheader UL#gh-nav LI.menu UL LI.menubottom {
	FONT-SIZE: 1px; BACKGROUND: =
url(/global/elements/header/nav_menu_bgbottom.png) no-repeat; HEIGHT: =
5px
}
#globalheader UL#gh-nav LI.active.menu {
	BACKGROUND: url(/global/elements/header/nav_menu_activebg.gif) =
no-repeat 0px 0px
}
#globalheader UL#gh-nav LI.active.menu A SPAN {
=09
}
#globalheader UL#gh-nav LI.active.menu A B {
	BACKGROUND: url(/global/elements/header/nav_menu_caratactive.gif) =
#c0cad4 no-repeat 100% 0px
}
#globalheader UL#gh-nav LI.active.menu UL {
	DISPLAY: block
}
#globalheader UL#gh-nav LI.menu#gh-nav-support .menutop {
	RIGHT: -3px
}
#globalheader UL#gh-nav LI.menu#gh-nav-support UL {
	RIGHT: -3px
}
#main #header {
	PADDING-RIGHT: 0px; PADDING-LEFT: 290px; MIN-HEIGHT: 15.6em; =
PADDING-BOTTOM: 0px; PADDING-TOP: 1em; POSITION: relative; _zoom: 1; =
_height: 15.6em
}
#main #header IMG.hero {
	LEFT: -6px; POSITION: absolute
}
#main #header H1 {
	FONT-WEIGHT: normal; MARGIN-BOTTOM: 0.3em
}
#main #header P.intro {
=09
}
#main .border#header {
	MIN-HEIGHT: 0px; MARGIN-BOTTOM: 3em; BORDER-BOTTOM: #ccc 1px solid; =
_height: 0
}
#main .border#header IMG.hero {
	LEFT: 0px
}
#main #sidebar {
	FONT-SIZE: 11px; FLOAT: right; MARGIN: 0.6em -35px 0px 0px; WIDTH: =
300px; COLOR: #666; LINE-HEIGHT: 14px
}
#main #stroke #sidebar {
	MARGIN: -0.8em 0px 0px
}
#main #sidebar .sidebox {
	BACKGROUND: url(/global/elements/layout/sidebox_bgbottom.gif) no-repeat =
50% 100%; PADDING-BOTTOM: 5px; MARGIN: 0px 0px 1.6em
}
#main #sidebar .sidebox H3 {
	PADDING-RIGHT: 15px; PADDING-LEFT: 15px; BACKGROUND: =
url(/global/elements/layout/sidebox_bgtop.gif) no-repeat 50% 0px; =
PADDING-BOTTOM: 0.5em; MARGIN: 0px; COLOR: #333; PADDING-TOP: 0.45em
}
#main #sidebar .sidebox H3 A.rss {
	MARGIN-TOP: 0.3em; FLOAT: right
}
#main #sidebar .sidebox .sb {
	PADDING-RIGHT: 15px; PADDING-LEFT: 15px; BACKGROUND: =
url(/global/elements/layout/sidebox_bg.gif) repeat-y 50% 50%; =
PADDING-BOTTOM: 1px; PADDING-TOP: 1em
}
#main #sidebar .sidebox .sb H3 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; BACKGROUND: none transparent =
scroll repeat 0% 0%; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0.3em; =
PADDING-TOP: 0px; POSITION: static
}
#main #sidebar .sidebox .sb .plain {
	PADDING-RIGHT: 15px; PADDING-LEFT: 15px; BACKGROUND: =
url(/global/elements/layout/sidebox_bgtop_plain.gif) no-repeat 50% 0px; =
PADDING-BOTTOM: 1px; MARGIN: -1em -15px -1px; PADDING-TOP: 1.3em
}
#main #sidebar UL.nav {
	MARGIN-BOTTOM: 0px
}
#main #sidebar UL.nav LI {
	FONT-WEIGHT: bold; PADDING-BOTTOM: 0.5em
}
#main DIV.promo {
=09
}
#main DIV.promo#p-wwdc H4 {
	MARGIN-BOTTOM: 0.4em
}
#main DIV.small.promo#p-wwdc {
	PADDING-RIGHT: 15px; PADDING-LEFT: 15px; PADDING-BOTTOM: 0px; =
PADDING-TOP: 0px
}
#main DIV.medium.promo#p-wwdc IMG.right {
	MARGIN-TOP: -8px; MARGIN-LEFT: 0px
}
#main DIV.large.promo#p-wwdc IMG.right {
	MARGIN-TOP: -25px; MARGIN-LEFT: 0px
}
#globalfooter {
	CLEAR: both
}
#globalfooter A {
	COLOR: #666
}
#globalfooter UL.gf-local {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 15px; MARGIN: =
0px; PADDING-TOP: 0px; TEXT-ALIGN: center
}
#globalfooter UL.gf-local LI {
	DISPLAY: inline
}
#globalfooter UL.gf-local LI STRONG {
	FONT-WEIGHT: normal; MARGIN-RIGHT: 4px
}
#globalfooter UL.gf-local LI A {
	MARGIN: 0px 4px
}
#globalfooter P.gf-buy {
	MARGIN-BOTTOM: 0.6em
}
#globalfooter P.gf-links {
	MARGIN-BOTTOM: 0.6em
}
#globalfooter P.gf-sosumi {
	PADDING-TOP: 0.6em
}
#globalfooter P.gf-links A {
	PADDING-RIGHT: 0.6em; PADDING-LEFT: 0.6em; PADDING-BOTTOM: 0px; =
PADDING-TOP: 0px
}
#globalfooter P.gf-sosumi A {
	PADDING-RIGHT: 0.6em; PADDING-LEFT: 0.6em; PADDING-BOTTOM: 0px; =
PADDING-TOP: 0px
}
#globalfooter P.gf-links A#gf-links-hotnews {
	PADDING-LEFT: 1.9em; BACKGROUND: url(/global/elements/footer/apple.gif) =
no-repeat 0.6em 50%
}

@media Print   =20
{
#main #content {
	WIDTH: 100%
}
#main #sidebar {
	DISPLAY: none
}
#main .expandlabel {
	PADDING-LEFT: 0px! important
}
#main DIV.expandcontent {
	DISPLAY: block! important
}

}

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: text/css;
	charset="ks_c_5601-1987"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://developer.apple.com/iphone/styles/iphone.css

#mainheader {
	BACKGROUND: url(http://devimages.apple.com/iphone/images/header.gif) =
no-repeat; MARGIN: -10px -3px -2em -1px; WIDTH: 984px; POSITION: =
relative; HEIGHT: 90px
}
#mainheader H1 {
	DISPLAY: inline
}
#mainheader H1 A {
	DISPLAY: block; FLOAT: left; WIDTH: 330px; CURSOR: default; =
TEXT-INDENT: -9999px; HEIGHT: 60px; outline: none; moz-outline: none
}
#mainheader P {
	FONT-WEIGHT: normal; FONT-SIZE: 10px; FLOAT: right; MARGIN: 2.3em 15px =
0px 0px; CURSOR: default; COLOR: #fff; text-shadow: #777 1px 1px 1px
}
#mainheader P A {
	FLOAT: left; MARGIN: 0.4em 0.6em; COLOR: #fff
}
#mainheader P STRONG {
	FLOAT: left; MARGIN: 0.4em 0.6em; COLOR: #fff
}
#mainheader P B {
	BACKGROUND: url(/iphone/images/header_separator.gif) repeat-y 0px 0px; =
FLOAT: left; MARGIN: 0px 0.6em; WIDTH: 2px; TEXT-INDENT: -9999px; =
HEIGHT: 2.3em
}
BODY#samples #main #header H1 {
	PADDING-TOP: 0.4em
}
BODY#samples #main UL.featured {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; FONT-SIZE: 12px; PADDING-BOTTOM: =
1px; MARGIN: 0px 0px 1em; OVERFLOW: hidden; PADDING-TOP: 0px
}
BODY#samples #main UL.featured LI {
	CLEAR: both; BORDER-TOP: #ccc 1px solid; PADDING-LEFT: 210px
}
BODY#samples #main UL.featured LI H3 {
	MARGIN-TOP: 4.6em
}
BODY#samples #main UL.featured LI H3 A {
	COLOR: #333
}
BODY#samples #main UL.featured LI H3 A:hover {
	COLOR: #366088
}
BODY#samples #main UL.featured LI IMG.left {
	MARGIN: 1.6em 0px 1em -195px
}
BODY#samples #main UL.featured P.button {
	FONT-SIZE: 11px
}
BODY#docs #main #header {
	PADDING-LEFT: 80px
}
BODY#docs #main UL {
	PADDING-BOTTOM: 0px
}
BODY#docs #main UL LI {
	FONT-WEIGHT: bold; FONT-SIZE: 12px; PADDING-BOTTOM: 1.6em
}
BODY.codinghowtos #main #header {
	PADDING-LEFT: 90px
}
BODY.codinghowtos #main #header H1 {
	MARGIN-TOP: 0px
}
BODY.codinghowtos #main UL {
	FONT-WEIGHT: bold
}
BODY.codinghowtos #main UL LI UL.stripe {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; FONT-WEIGHT: normal; =
PADDING-BOTTOM: 1em; PADDING-TOP: 0.6em
}
BODY.codinghowtos #main UL LI UL.stripe LI {
	PADDING-RIGHT: 0.6em; PADDING-LEFT: 0.6em; BACKGROUND: #fff; =
PADDING-BOTTOM: 0.4em; PADDING-TOP: 0.4em
}
BODY.codinghowtos #main UL LI UL.stripe LI.odd {
	BACKGROUND: #eee
}
#main #content .message {
	PADDING-RIGHT: 15px; PADDING-LEFT: 15px; BACKGROUND: #f2f2f2; =
MARGIN-BOTTOM: 1.6em; PADDING-BOTTOM: 0.6em; OVERFLOW: hidden; =
PADDING-TOP: 12px; POSITION: relative; -webkit-border-radius: 5px; =
-moz-border-radius: 5px; -o-border-radius: 5px; -khtml-border-radius: =
5px; border-radius: 5px
}
#main #content .message UL {
	PADDING-RIGHT: 0px; PADDING-LEFT: 25px; BACKGROUND: =
url(http://devimages.apple.com/global/elements/icons/check_18x18.png) =
no-repeat 0px 0px; PADDING-BOTTOM: 1px; MARGIN: 0px; BEHAVIOR: =
url(/global/scripts/lib/iepngfix.htc); PADDING-TOP: 2px
}
#main #content .message UL.alert {
	PADDING-LEFT: 30px; BACKGROUND: =
url(http://devimages.apple.com/global/elements/icons/warning_23x20.png) =
no-repeat 0px 0px
}
#main #content .message UL LI {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0.8em; MARGIN: =
0px; COLOR: #333; PADDING-TOP: 0px
}
#main #content .error.message {
	BACKGROUND-COLOR: #ecd0d0
}
#main #content .error.message UL {
	BACKGROUND: =
url(http://devimages.apple.com/global/elements/icons/warning_red_17x17.pn=
g) no-repeat 0px 0px; PADDING-TOP: 1px
}
#main #content .message A.close {
	RIGHT: 8px; CURSOR: pointer; POSITION: absolute; TOP: 5px
}
#main #content .hidden.message {
	MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: =
0px; HEIGHT: 0px
}
#main .expandlabel {
	BACKGROUND: =
url(http://devimages.apple.com/iphone/images/portal/transparent_arrow_exp=
and.gif) no-repeat 0px -45px; COLOR: #000
}
#main .closed.expandlabel {
	BACKGROUND-POSITION: 0px 4px
}
#main A.minipopuptrigger {
	DISPLAY: inline; CURSOR: pointer; outline: 0
}
#main .minipopup {
	DISPLAY: none; Z-INDEX: 900; POSITION: absolute! important
}
#main .selected.minipopup {
	DISPLAY: block
}
#main .minipopup .middle {
	PADDING-RIGHT: 32px; PADDING-LEFT: 32px; BACKGROUND: =
url(/iphone/images/portal/minipopup_bg.png) repeat-y; PADDING-BOTTOM: =
0px; WIDTH: 158px; PADDING-TOP: 5px; _background-image: none; _filter: =
progid:DXImageTransform.Microsoft.AlphaImageLoader(src=3D'/iphone/images/=
portal/minipopup_bg.png', sizingMethod=3D'scale')
}
#main .minipopup .top {
	FONT-SIZE: 1px; BACKGROUND: =
url(/iphone/images/portal/minipopup_bgtop.png) no-repeat; LEFT: 0px; =
WIDTH: 222px; POSITION: absolute; TOP: -14px; HEIGHT: 14px; =
_background-image: none; _filter: =
progid:DXImageTransform.Microsoft.AlphaImageLoader(src=3D'/iphone/images/=
portal/minipopup_bgtop.png', sizingMethod=3D'scale')
}
#main .minipopup .bottom {
	FONT-SIZE: 1px; BACKGROUND: =
url(/iphone/images/portal/minipopup_bgbottom.png) no-repeat; LEFT: 0px; =
WIDTH: 222px; BOTTOM: -28px; POSITION: absolute; HEIGHT: 30px; =
_background-image: none; _filter: =
progid:DXImageTransform.Microsoft.AlphaImageLoader(src=3D'/iphone/images/=
portal/minipopup_bgbottom.png', sizingMethod=3D'scale')
}
#main .small.minipopup .top {
	BACKGROUND: url(/iphone/images/portal/minipopup_small_bgtop.png) =
no-repeat; WIDTH: 130px; _background-image: none; _filter: =
progid:DXImageTransform.Microsoft.AlphaImageLoader(src=3D'/iphone/images/=
portal/minipopup_small_bgtop.png', sizingMethod=3D'crop')
}
#main .small.minipopup .middle {
	BACKGROUND: url(/iphone/images/portal/minipopup_small_bg.png) repeat-y; =
WIDTH: 66px; _background-image: none; _filter: =
progid:DXImageTransform.Microsoft.AlphaImageLoader(src=3D'/iphone/images/=
portal/minipopup_small_bg.png', sizingMethod=3D'scale')
}
#main .small.minipopup .bottom {
	BACKGROUND: url(/iphone/images/portal/minipopup_small_bgbottom.png) =
no-repeat; WIDTH: 130px; _background-image: none; _filter: =
progid:DXImageTransform.Microsoft.AlphaImageLoader(src=3D'/iphone/images/=
portal/minipopup_small_bgbottom.png', sizingMethod=3D'crop')
}
#main .minipopup A {
	POSITION: relative
}
#main .minipopup A.close {
	BACKGROUND: url(http://developer.apple.com/images/closebutton.png) =
no-repeat 0px 0px; FLOAT: right; MARGIN: 0px -5px -14px -9px; BEHAVIOR: =
url(/global/scripts/lib/iepngfix.htc); WIDTH: 14px; TEXT-INDENT: =
-9999px; HEIGHT: 14px
}
#main .minipopup P {
	MARGIN-BOTTOM: 2px
}
#main .minipopup P.buttons {
	TEXT-ALIGN: right
}
#main .minipopup UL {
	MARGIN-BOTTOM: 0px
}
#main .minipopup UL LI {
	PADDING-BOTTOM: 4px
}

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://devimages.apple.com/global/scripts/lib/prototype.js

/*  Prototype JavaScript framework, version 1.6.0.2=0A=
 *  (c) 2005-2008 Sam Stephenson=0A=
 *=0A=
 *  Prototype is freely distributable under the terms of an MIT-style =
license.=0A=
 *  For details, see the Prototype web site: http://www.prototypejs.org/=0A=
 *=0A=
 =
*------------------------------------------------------------------------=
--*/=0A=
=0A=
var Prototype =3D {=0A=
  Version: '1.6.0.2',=0A=
=0A=
  Browser: {=0A=
    IE:     !!(window.attachEvent && !window.opera),=0A=
    Opera:  !!window.opera,=0A=
    WebKit: navigator.userAgent.indexOf('AppleWebKit/') > -1,=0A=
    Gecko:  navigator.userAgent.indexOf('Gecko') > -1 && =
navigator.userAgent.indexOf('KHTML') =3D=3D -1,=0A=
    MobileSafari: !!navigator.userAgent.match(/Apple.*Mobile.*Safari/)=0A=
  },=0A=
=0A=
  BrowserFeatures: {=0A=
    XPath: !!document.evaluate,=0A=
    ElementExtensions: !!window.HTMLElement,=0A=
    SpecificElementExtensions:=0A=
      document.createElement('div').__proto__ &&=0A=
      document.createElement('div').__proto__ !=3D=3D=0A=
        document.createElement('form').__proto__=0A=
  },=0A=
=0A=
  ScriptFragment: '<script[^>]*>([\\S\\s]*?)<\/script>',=0A=
  JSONFilter: /^\/\*-secure-([\s\S]*)\*\/\s*$/,=0A=
=0A=
  emptyFunction: function() { },=0A=
  K: function(x) { return x }=0A=
};=0A=
=0A=
if (Prototype.Browser.MobileSafari)=0A=
  Prototype.BrowserFeatures.SpecificElementExtensions =3D false;=0A=
=0A=
=0A=
/* Based on Alex Arnell's inheritance implementation. */=0A=
var Class =3D {=0A=
  create: function() {=0A=
    var parent =3D null, properties =3D $A(arguments);=0A=
    if (Object.isFunction(properties[0]))=0A=
      parent =3D properties.shift();=0A=
=0A=
    function klass() {=0A=
      this.initialize.apply(this, arguments);=0A=
    }=0A=
=0A=
    Object.extend(klass, Class.Methods);=0A=
    klass.superclass =3D parent;=0A=
    klass.subclasses =3D [];=0A=
=0A=
    if (parent) {=0A=
      var subclass =3D function() { };=0A=
      subclass.prototype =3D parent.prototype;=0A=
      klass.prototype =3D new subclass;=0A=
      parent.subclasses.push(klass);=0A=
    }=0A=
=0A=
    for (var i =3D 0; i < properties.length; i++)=0A=
      klass.addMethods(properties[i]);=0A=
=0A=
    if (!klass.prototype.initialize)=0A=
      klass.prototype.initialize =3D Prototype.emptyFunction;=0A=
=0A=
    klass.prototype.constructor =3D klass;=0A=
=0A=
    return klass;=0A=
  }=0A=
};=0A=
=0A=
Class.Methods =3D {=0A=
  addMethods: function(source) {=0A=
    var ancestor   =3D this.superclass && this.superclass.prototype;=0A=
    var properties =3D Object.keys(source);=0A=
=0A=
    if (!Object.keys({ toString: true }).length)=0A=
      properties.push("toString", "valueOf");=0A=
=0A=
    for (var i =3D 0, length =3D properties.length; i < length; i++) {=0A=
      var property =3D properties[i], value =3D source[property];=0A=
      if (ancestor && Object.isFunction(value) &&=0A=
          value.argumentNames().first() =3D=3D "$super") {=0A=
        var method =3D value, value =3D Object.extend((function(m) {=0A=
          return function() { return ancestor[m].apply(this, arguments) =
};=0A=
        })(property).wrap(method), {=0A=
          valueOf:  function() { return method },=0A=
          toString: function() { return method.toString() }=0A=
        });=0A=
      }=0A=
      this.prototype[property] =3D value;=0A=
    }=0A=
=0A=
    return this;=0A=
  }=0A=
};=0A=
=0A=
var Abstract =3D { };=0A=
=0A=
Object.extend =3D function(destination, source) {=0A=
  for (var property in source)=0A=
    destination[property] =3D source[property];=0A=
  return destination;=0A=
};=0A=
=0A=
Object.extend(Object, {=0A=
  inspect: function(object) {=0A=
    try {=0A=
      if (Object.isUndefined(object)) return 'undefined';=0A=
      if (object =3D=3D=3D null) return 'null';=0A=
      return object.inspect ? object.inspect() : String(object);=0A=
    } catch (e) {=0A=
      if (e instanceof RangeError) return '...';=0A=
      throw e;=0A=
    }=0A=
  },=0A=
=0A=
  toJSON: function(object) {=0A=
    var type =3D typeof object;=0A=
    switch (type) {=0A=
      case 'undefined':=0A=
      case 'function':=0A=
      case 'unknown': return;=0A=
      case 'boolean': return object.toString();=0A=
    }=0A=
=0A=
    if (object =3D=3D=3D null) return 'null';=0A=
    if (object.toJSON) return object.toJSON();=0A=
    if (Object.isElement(object)) return;=0A=
=0A=
    var results =3D [];=0A=
    for (var property in object) {=0A=
      var value =3D Object.toJSON(object[property]);=0A=
      if (!Object.isUndefined(value))=0A=
        results.push(property.toJSON() + ': ' + value);=0A=
    }=0A=
=0A=
    return '{' + results.join(', ') + '}';=0A=
  },=0A=
=0A=
  toQueryString: function(object) {=0A=
    return $H(object).toQueryString();=0A=
  },=0A=
=0A=
  toHTML: function(object) {=0A=
    return object && object.toHTML ? object.toHTML() : =
String.interpret(object);=0A=
  },=0A=
=0A=
  keys: function(object) {=0A=
    var keys =3D [];=0A=
    for (var property in object)=0A=
      keys.push(property);=0A=
    return keys;=0A=
  },=0A=
=0A=
  values: function(object) {=0A=
    var values =3D [];=0A=
    for (var property in object)=0A=
      values.push(object[property]);=0A=
    return values;=0A=
  },=0A=
=0A=
  clone: function(object) {=0A=
    return Object.extend({ }, object);=0A=
  },=0A=
=0A=
  isElement: function(object) {=0A=
    return object && object.nodeType =3D=3D 1;=0A=
  },=0A=
=0A=
  isArray: function(object) {=0A=
    return object !=3D null && typeof object =3D=3D "object" &&=0A=
      'splice' in object && 'join' in object;=0A=
  },=0A=
=0A=
  isHash: function(object) {=0A=
    return object instanceof Hash;=0A=
  },=0A=
=0A=
  isFunction: function(object) {=0A=
    return typeof object =3D=3D "function";=0A=
  },=0A=
=0A=
  isString: function(object) {=0A=
    return typeof object =3D=3D "string";=0A=
  },=0A=
=0A=
  isNumber: function(object) {=0A=
    return typeof object =3D=3D "number";=0A=
  },=0A=
=0A=
  isUndefined: function(object) {=0A=
    return typeof object =3D=3D "undefined";=0A=
  }=0A=
});=0A=
=0A=
Object.extend(Function.prototype, {=0A=
  argumentNames: function() {=0A=
    var names =3D =
this.toString().match(/^[\s\(]*function[^(]*\((.*?)\)/)[1].split(",").inv=
oke("strip");=0A=
    return names.length =3D=3D 1 && !names[0] ? [] : names;=0A=
  },=0A=
=0A=
  bind: function() {=0A=
    if (arguments.length < 2 && Object.isUndefined(arguments[0])) return =
this;=0A=
    var __method =3D this, args =3D $A(arguments), object =3D =
args.shift();=0A=
    return function() {=0A=
      return __method.apply(object, args.concat($A(arguments)));=0A=
    }=0A=
  },=0A=
=0A=
  bindAsEventListener: function() {=0A=
    var __method =3D this, args =3D $A(arguments), object =3D =
args.shift();=0A=
    return function(event) {=0A=
      return __method.apply(object, [event || =
window.event].concat(args));=0A=
    }=0A=
  },=0A=
=0A=
  curry: function() {=0A=
    if (!arguments.length) return this;=0A=
    var __method =3D this, args =3D $A(arguments);=0A=
    return function() {=0A=
      return __method.apply(this, args.concat($A(arguments)));=0A=
    }=0A=
  },=0A=
=0A=
  delay: function() {=0A=
    var __method =3D this, args =3D $A(arguments), timeout =3D =
args.shift() * 1000;=0A=
    return window.setTimeout(function() {=0A=
      return __method.apply(__method, args);=0A=
    }, timeout);=0A=
  },=0A=
=0A=
  wrap: function(wrapper) {=0A=
    var __method =3D this;=0A=
    return function() {=0A=
      return wrapper.apply(this, =
[__method.bind(this)].concat($A(arguments)));=0A=
    }=0A=
  },=0A=
=0A=
  methodize: function() {=0A=
    if (this._methodized) return this._methodized;=0A=
    var __method =3D this;=0A=
    return this._methodized =3D function() {=0A=
      return __method.apply(null, [this].concat($A(arguments)));=0A=
    };=0A=
  }=0A=
});=0A=
=0A=
Function.prototype.defer =3D Function.prototype.delay.curry(0.01);=0A=
=0A=
Date.prototype.toJSON =3D function() {=0A=
  return '"' + this.getUTCFullYear() + '-' +=0A=
    (this.getUTCMonth() + 1).toPaddedString(2) + '-' +=0A=
    this.getUTCDate().toPaddedString(2) + 'T' +=0A=
    this.getUTCHours().toPaddedString(2) + ':' +=0A=
    this.getUTCMinutes().toPaddedString(2) + ':' +=0A=
    this.getUTCSeconds().toPaddedString(2) + 'Z"';=0A=
};=0A=
=0A=
var Try =3D {=0A=
  these: function() {=0A=
    var returnValue;=0A=
=0A=
    for (var i =3D 0, length =3D arguments.length; i < length; i++) {=0A=
      var lambda =3D arguments[i];=0A=
      try {=0A=
        returnValue =3D lambda();=0A=
        break;=0A=
      } catch (e) { }=0A=
    }=0A=
=0A=
    return returnValue;=0A=
  }=0A=
};=0A=
=0A=
RegExp.prototype.match =3D RegExp.prototype.test;=0A=
=0A=
RegExp.escape =3D function(str) {=0A=
  return String(str).replace(/([.*+?^=3D!:${}()|[\]\/\\])/g, '\\$1');=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var PeriodicalExecuter =3D Class.create({=0A=
  initialize: function(callback, frequency) {=0A=
    this.callback =3D callback;=0A=
    this.frequency =3D frequency;=0A=
    this.currentlyExecuting =3D false;=0A=
=0A=
    this.registerCallback();=0A=
  },=0A=
=0A=
  registerCallback: function() {=0A=
    this.timer =3D setInterval(this.onTimerEvent.bind(this), =
this.frequency * 1000);=0A=
  },=0A=
=0A=
  execute: function() {=0A=
    this.callback(this);=0A=
  },=0A=
=0A=
  stop: function() {=0A=
    if (!this.timer) return;=0A=
    clearInterval(this.timer);=0A=
    this.timer =3D null;=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    if (!this.currentlyExecuting) {=0A=
      try {=0A=
        this.currentlyExecuting =3D true;=0A=
        this.execute();=0A=
      } finally {=0A=
        this.currentlyExecuting =3D false;=0A=
      }=0A=
    }=0A=
  }=0A=
});=0A=
Object.extend(String, {=0A=
  interpret: function(value) {=0A=
    return value =3D=3D null ? '' : String(value);=0A=
  },=0A=
  specialChar: {=0A=
    '\b': '\\b',=0A=
    '\t': '\\t',=0A=
    '\n': '\\n',=0A=
    '\f': '\\f',=0A=
    '\r': '\\r',=0A=
    '\\': '\\\\'=0A=
  }=0A=
});=0A=
=0A=
Object.extend(String.prototype, {=0A=
  gsub: function(pattern, replacement) {=0A=
    var result =3D '', source =3D this, match;=0A=
    replacement =3D arguments.callee.prepareReplacement(replacement);=0A=
=0A=
    while (source.length > 0) {=0A=
      if (match =3D source.match(pattern)) {=0A=
        result +=3D source.slice(0, match.index);=0A=
        result +=3D String.interpret(replacement(match));=0A=
        source  =3D source.slice(match.index + match[0].length);=0A=
      } else {=0A=
        result +=3D source, source =3D '';=0A=
      }=0A=
    }=0A=
    return result;=0A=
  },=0A=
=0A=
  sub: function(pattern, replacement, count) {=0A=
    replacement =3D this.gsub.prepareReplacement(replacement);=0A=
    count =3D Object.isUndefined(count) ? 1 : count;=0A=
=0A=
    return this.gsub(pattern, function(match) {=0A=
      if (--count < 0) return match[0];=0A=
      return replacement(match);=0A=
    });=0A=
  },=0A=
=0A=
  scan: function(pattern, iterator) {=0A=
    this.gsub(pattern, iterator);=0A=
    return String(this);=0A=
  },=0A=
=0A=
  truncate: function(length, truncation) {=0A=
    length =3D length || 30;=0A=
    truncation =3D Object.isUndefined(truncation) ? '...' : truncation;=0A=
    return this.length > length ?=0A=
      this.slice(0, length - truncation.length) + truncation : =
String(this);=0A=
  },=0A=
=0A=
  strip: function() {=0A=
    return this.replace(/^\s+/, '').replace(/\s+$/, '');=0A=
  },=0A=
=0A=
  stripTags: function() {=0A=
    return this.replace(/<\/?[^>]+>/gi, '');=0A=
  },=0A=
=0A=
  stripScripts: function() {=0A=
    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');=0A=
  },=0A=
=0A=
  extractScripts: function() {=0A=
    var matchAll =3D new RegExp(Prototype.ScriptFragment, 'img');=0A=
    var matchOne =3D new RegExp(Prototype.ScriptFragment, 'im');=0A=
    return (this.match(matchAll) || []).map(function(scriptTag) {=0A=
      return (scriptTag.match(matchOne) || ['', ''])[1];=0A=
    });=0A=
  },=0A=
=0A=
  evalScripts: function() {=0A=
    return this.extractScripts().map(function(script) { return =
eval(script) });=0A=
  },=0A=
=0A=
  escapeHTML: function() {=0A=
    var self =3D arguments.callee;=0A=
    self.text.data =3D this;=0A=
    return self.div.innerHTML;=0A=
  },=0A=
=0A=
  unescapeHTML: function() {=0A=
    var div =3D new Element('div');=0A=
    div.innerHTML =3D this.stripTags();=0A=
    return div.childNodes[0] ? (div.childNodes.length > 1 ?=0A=
      $A(div.childNodes).inject('', function(memo, node) { return =
memo+node.nodeValue }) :=0A=
      div.childNodes[0].nodeValue) : '';=0A=
  },=0A=
=0A=
  toQueryParams: function(separator) {=0A=
    var match =3D this.strip().match(/([^?#]*)(#.*)?$/);=0A=
    if (!match) return { };=0A=
=0A=
    return match[1].split(separator || '&').inject({ }, function(hash, =
pair) {=0A=
      if ((pair =3D pair.split('=3D'))[0]) {=0A=
        var key =3D decodeURIComponent(pair.shift());=0A=
        var value =3D pair.length > 1 ? pair.join('=3D') : pair[0];=0A=
        if (value !=3D undefined) value =3D decodeURIComponent(value);=0A=
=0A=
        if (key in hash) {=0A=
          if (!Object.isArray(hash[key])) hash[key] =3D [hash[key]];=0A=
          hash[key].push(value);=0A=
        }=0A=
        else hash[key] =3D value;=0A=
      }=0A=
      return hash;=0A=
    });=0A=
  },=0A=
=0A=
  toArray: function() {=0A=
    return this.split('');=0A=
  },=0A=
=0A=
  succ: function() {=0A=
    return this.slice(0, this.length - 1) +=0A=
      String.fromCharCode(this.charCodeAt(this.length - 1) + 1);=0A=
  },=0A=
=0A=
  times: function(count) {=0A=
    return count < 1 ? '' : new Array(count + 1).join(this);=0A=
  },=0A=
=0A=
  camelize: function() {=0A=
    var parts =3D this.split('-'), len =3D parts.length;=0A=
    if (len =3D=3D 1) return parts[0];=0A=
=0A=
    var camelized =3D this.charAt(0) =3D=3D '-'=0A=
      ? parts[0].charAt(0).toUpperCase() + parts[0].substring(1)=0A=
      : parts[0];=0A=
=0A=
    for (var i =3D 1; i < len; i++)=0A=
      camelized +=3D parts[i].charAt(0).toUpperCase() + =
parts[i].substring(1);=0A=
=0A=
    return camelized;=0A=
  },=0A=
=0A=
  capitalize: function() {=0A=
    return this.charAt(0).toUpperCase() + =
this.substring(1).toLowerCase();=0A=
  },=0A=
=0A=
  underscore: function() {=0A=
    return this.gsub(/::/, =
'/').gsub(/([A-Z]+)([A-Z][a-z])/,'#{1}_#{2}').gsub(/([a-z\d])([A-Z])/,'#{=
1}_#{2}').gsub(/-/,'_').toLowerCase();=0A=
  },=0A=
=0A=
  dasherize: function() {=0A=
    return this.gsub(/_/,'-');=0A=
  },=0A=
=0A=
  inspect: function(useDoubleQuotes) {=0A=
    var escapedString =3D this.gsub(/[\x00-\x1f\\]/, function(match) {=0A=
      var character =3D String.specialChar[match[0]];=0A=
      return character ? character : '\\u00' + =
match[0].charCodeAt().toPaddedString(2, 16);=0A=
    });=0A=
    if (useDoubleQuotes) return '"' + escapedString.replace(/"/g, '\\"') =
+ '"';=0A=
    return "'" + escapedString.replace(/'/g, '\\\'') + "'";=0A=
  },=0A=
=0A=
  toJSON: function() {=0A=
    return this.inspect(true);=0A=
  },=0A=
=0A=
  unfilterJSON: function(filter) {=0A=
    return this.sub(filter || Prototype.JSONFilter, '#{1}');=0A=
  },=0A=
=0A=
  isJSON: function() {=0A=
    var str =3D this;=0A=
    if (str.blank()) return false;=0A=
    str =3D this.replace(/\\./g, '@').replace(/"[^"\\\n\r]*"/g, '');=0A=
    return (/^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]*$/).test(str);=0A=
  },=0A=
=0A=
  evalJSON: function(sanitize) {=0A=
    var json =3D this.unfilterJSON();=0A=
    try {=0A=
      if (!sanitize || json.isJSON()) return eval('(' + json + ')');=0A=
    } catch (e) { }=0A=
    throw new SyntaxError('Badly formed JSON string: ' + this.inspect());=0A=
  },=0A=
=0A=
  include: function(pattern) {=0A=
    return this.indexOf(pattern) > -1;=0A=
  },=0A=
=0A=
  startsWith: function(pattern) {=0A=
    return this.indexOf(pattern) =3D=3D=3D 0;=0A=
  },=0A=
=0A=
  endsWith: function(pattern) {=0A=
    var d =3D this.length - pattern.length;=0A=
    return d >=3D 0 && this.lastIndexOf(pattern) =3D=3D=3D d;=0A=
  },=0A=
=0A=
  empty: function() {=0A=
    return this =3D=3D '';=0A=
  },=0A=
=0A=
  blank: function() {=0A=
    return /^\s*$/.test(this);=0A=
  },=0A=
=0A=
  interpolate: function(object, pattern) {=0A=
    return new Template(this, pattern).evaluate(object);=0A=
  }=0A=
});=0A=
=0A=
if (Prototype.Browser.WebKit || Prototype.Browser.IE) =
Object.extend(String.prototype, {=0A=
  escapeHTML: function() {=0A=
    return =
this.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');=0A=
  },=0A=
  unescapeHTML: function() {=0A=
    return =
this.replace(/&amp;/g,'&').replace(/&lt;/g,'<').replace(/&gt;/g,'>');=0A=
  }=0A=
});=0A=
=0A=
String.prototype.gsub.prepareReplacement =3D function(replacement) {=0A=
  if (Object.isFunction(replacement)) return replacement;=0A=
  var template =3D new Template(replacement);=0A=
  return function(match) { return template.evaluate(match) };=0A=
};=0A=
=0A=
String.prototype.parseQuery =3D String.prototype.toQueryParams;=0A=
=0A=
Object.extend(String.prototype.escapeHTML, {=0A=
  div:  document.createElement('div'),=0A=
  text: document.createTextNode('')=0A=
});=0A=
=0A=
with (String.prototype.escapeHTML) div.appendChild(text);=0A=
=0A=
var Template =3D Class.create({=0A=
  initialize: function(template, pattern) {=0A=
    this.template =3D template.toString();=0A=
    this.pattern =3D pattern || Template.Pattern;=0A=
  },=0A=
=0A=
  evaluate: function(object) {=0A=
    if (Object.isFunction(object.toTemplateReplacements))=0A=
      object =3D object.toTemplateReplacements();=0A=
=0A=
    return this.template.gsub(this.pattern, function(match) {=0A=
      if (object =3D=3D null) return '';=0A=
=0A=
      var before =3D match[1] || '';=0A=
      if (before =3D=3D '\\') return match[2];=0A=
=0A=
      var ctx =3D object, expr =3D match[3];=0A=
      var pattern =3D /^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;=0A=
      match =3D pattern.exec(expr);=0A=
      if (match =3D=3D null) return before;=0A=
=0A=
      while (match !=3D null) {=0A=
        var comp =3D match[1].startsWith('[') ? match[2].gsub('\\\\]', =
']') : match[1];=0A=
        ctx =3D ctx[comp];=0A=
        if (null =3D=3D ctx || '' =3D=3D match[3]) break;=0A=
        expr =3D expr.substring('[' =3D=3D match[3] ? match[1].length : =
match[0].length);=0A=
        match =3D pattern.exec(expr);=0A=
      }=0A=
=0A=
      return before + String.interpret(ctx);=0A=
    });=0A=
  }=0A=
});=0A=
Template.Pattern =3D /(^|.|\r|\n)(#\{(.*?)\})/;=0A=
=0A=
var $break =3D { };=0A=
=0A=
var Enumerable =3D {=0A=
  each: function(iterator, context) {=0A=
    var index =3D 0;=0A=
    iterator =3D iterator.bind(context);=0A=
    try {=0A=
      this._each(function(value) {=0A=
        iterator(value, index++);=0A=
      });=0A=
    } catch (e) {=0A=
      if (e !=3D $break) throw e;=0A=
    }=0A=
    return this;=0A=
  },=0A=
=0A=
  eachSlice: function(number, iterator, context) {=0A=
    iterator =3D iterator ? iterator.bind(context) : Prototype.K;=0A=
    var index =3D -number, slices =3D [], array =3D this.toArray();=0A=
    while ((index +=3D number) < array.length)=0A=
      slices.push(array.slice(index, index+number));=0A=
    return slices.collect(iterator, context);=0A=
  },=0A=
=0A=
  all: function(iterator, context) {=0A=
    iterator =3D iterator ? iterator.bind(context) : Prototype.K;=0A=
    var result =3D true;=0A=
    this.each(function(value, index) {=0A=
      result =3D result && !!iterator(value, index);=0A=
      if (!result) throw $break;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  any: function(iterator, context) {=0A=
    iterator =3D iterator ? iterator.bind(context) : Prototype.K;=0A=
    var result =3D false;=0A=
    this.each(function(value, index) {=0A=
      if (result =3D !!iterator(value, index))=0A=
        throw $break;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  collect: function(iterator, context) {=0A=
    iterator =3D iterator ? iterator.bind(context) : Prototype.K;=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      results.push(iterator(value, index));=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  detect: function(iterator, context) {=0A=
    iterator =3D iterator.bind(context);=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      if (iterator(value, index)) {=0A=
        result =3D value;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  findAll: function(iterator, context) {=0A=
    iterator =3D iterator.bind(context);=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (iterator(value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  grep: function(filter, iterator, context) {=0A=
    iterator =3D iterator ? iterator.bind(context) : Prototype.K;=0A=
    var results =3D [];=0A=
=0A=
    if (Object.isString(filter))=0A=
      filter =3D new RegExp(filter);=0A=
=0A=
    this.each(function(value, index) {=0A=
      if (filter.match(value))=0A=
        results.push(iterator(value, index));=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  include: function(object) {=0A=
    if (Object.isFunction(this.indexOf))=0A=
      if (this.indexOf(object) !=3D -1) return true;=0A=
=0A=
    var found =3D false;=0A=
    this.each(function(value) {=0A=
      if (value =3D=3D object) {=0A=
        found =3D true;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return found;=0A=
  },=0A=
=0A=
  inGroupsOf: function(number, fillWith) {=0A=
    fillWith =3D Object.isUndefined(fillWith) ? null : fillWith;=0A=
    return this.eachSlice(number, function(slice) {=0A=
      while(slice.length < number) slice.push(fillWith);=0A=
      return slice;=0A=
    });=0A=
  },=0A=
=0A=
  inject: function(memo, iterator, context) {=0A=
    iterator =3D iterator.bind(context);=0A=
    this.each(function(value, index) {=0A=
      memo =3D iterator(memo, value, index);=0A=
    });=0A=
    return memo;=0A=
  },=0A=
=0A=
  invoke: function(method) {=0A=
    var args =3D $A(arguments).slice(1);=0A=
    return this.map(function(value) {=0A=
      return value[method].apply(value, args);=0A=
    });=0A=
  },=0A=
=0A=
  max: function(iterator, context) {=0A=
    iterator =3D iterator ? iterator.bind(context) : Prototype.K;=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D iterator(value, index);=0A=
      if (result =3D=3D null || value >=3D result)=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  min: function(iterator, context) {=0A=
    iterator =3D iterator ? iterator.bind(context) : Prototype.K;=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D iterator(value, index);=0A=
      if (result =3D=3D null || value < result)=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  partition: function(iterator, context) {=0A=
    iterator =3D iterator ? iterator.bind(context) : Prototype.K;=0A=
    var trues =3D [], falses =3D [];=0A=
    this.each(function(value, index) {=0A=
      (iterator(value, index) ?=0A=
        trues : falses).push(value);=0A=
    });=0A=
    return [trues, falses];=0A=
  },=0A=
=0A=
  pluck: function(property) {=0A=
    var results =3D [];=0A=
    this.each(function(value) {=0A=
      results.push(value[property]);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  reject: function(iterator, context) {=0A=
    iterator =3D iterator.bind(context);=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (!iterator(value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  sortBy: function(iterator, context) {=0A=
    iterator =3D iterator.bind(context);=0A=
    return this.map(function(value, index) {=0A=
      return {value: value, criteria: iterator(value, index)};=0A=
    }).sort(function(left, right) {=0A=
      var a =3D left.criteria, b =3D right.criteria;=0A=
      return a < b ? -1 : a > b ? 1 : 0;=0A=
    }).pluck('value');=0A=
  },=0A=
=0A=
  toArray: function() {=0A=
    return this.map();=0A=
  },=0A=
=0A=
  zip: function() {=0A=
    var iterator =3D Prototype.K, args =3D $A(arguments);=0A=
    if (Object.isFunction(args.last()))=0A=
      iterator =3D args.pop();=0A=
=0A=
    var collections =3D [this].concat(args).map($A);=0A=
    return this.map(function(value, index) {=0A=
      return iterator(collections.pluck(index));=0A=
    });=0A=
  },=0A=
=0A=
  size: function() {=0A=
    return this.toArray().length;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return '#<Enumerable:' + this.toArray().inspect() + '>';=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Enumerable, {=0A=
  map:     Enumerable.collect,=0A=
  find:    Enumerable.detect,=0A=
  select:  Enumerable.findAll,=0A=
  filter:  Enumerable.findAll,=0A=
  member:  Enumerable.include,=0A=
  entries: Enumerable.toArray,=0A=
  every:   Enumerable.all,=0A=
  some:    Enumerable.any=0A=
});=0A=
function $A(iterable) {=0A=
  if (!iterable) return [];=0A=
  if (iterable.toArray) return iterable.toArray();=0A=
  var length =3D iterable.length || 0, results =3D new Array(length);=0A=
  while (length--) results[length] =3D iterable[length];=0A=
  return results;=0A=
}=0A=
=0A=
if (Prototype.Browser.WebKit) {=0A=
  $A =3D function(iterable) {=0A=
    if (!iterable) return [];=0A=
    if (!(Object.isFunction(iterable) && iterable =3D=3D '[object =
NodeList]') &&=0A=
        iterable.toArray) return iterable.toArray();=0A=
    var length =3D iterable.length || 0, results =3D new Array(length);=0A=
    while (length--) results[length] =3D iterable[length];=0A=
    return results;=0A=
  };=0A=
}=0A=
=0A=
Array.from =3D $A;=0A=
=0A=
Object.extend(Array.prototype, Enumerable);=0A=
=0A=
if (!Array.prototype._reverse) Array.prototype._reverse =3D =
Array.prototype.reverse;=0A=
=0A=
Object.extend(Array.prototype, {=0A=
  _each: function(iterator) {=0A=
    for (var i =3D 0, length =3D this.length; i < length; i++)=0A=
      iterator(this[i]);=0A=
  },=0A=
=0A=
  clear: function() {=0A=
    this.length =3D 0;=0A=
    return this;=0A=
  },=0A=
=0A=
  first: function() {=0A=
    return this[0];=0A=
  },=0A=
=0A=
  last: function() {=0A=
    return this[this.length - 1];=0A=
  },=0A=
=0A=
  compact: function() {=0A=
    return this.select(function(value) {=0A=
      return value !=3D null;=0A=
    });=0A=
  },=0A=
=0A=
  flatten: function() {=0A=
    return this.inject([], function(array, value) {=0A=
      return array.concat(Object.isArray(value) ?=0A=
        value.flatten() : [value]);=0A=
    });=0A=
  },=0A=
=0A=
  without: function() {=0A=
    var values =3D $A(arguments);=0A=
    return this.select(function(value) {=0A=
      return !values.include(value);=0A=
    });=0A=
  },=0A=
=0A=
  reverse: function(inline) {=0A=
    return (inline !=3D=3D false ? this : this.toArray())._reverse();=0A=
  },=0A=
=0A=
  reduce: function() {=0A=
    return this.length > 1 ? this : this[0];=0A=
  },=0A=
=0A=
  uniq: function(sorted) {=0A=
    return this.inject([], function(array, value, index) {=0A=
      if (0 =3D=3D index || (sorted ? array.last() !=3D value : =
!array.include(value)))=0A=
        array.push(value);=0A=
      return array;=0A=
    });=0A=
  },=0A=
=0A=
  intersect: function(array) {=0A=
    return this.uniq().findAll(function(item) {=0A=
      return array.detect(function(value) { return item =3D=3D=3D value =
});=0A=
    });=0A=
  },=0A=
=0A=
  clone: function() {=0A=
    return [].concat(this);=0A=
  },=0A=
=0A=
  size: function() {=0A=
    return this.length;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return '[' + this.map(Object.inspect).join(', ') + ']';=0A=
  },=0A=
=0A=
  toJSON: function() {=0A=
    var results =3D [];=0A=
    this.each(function(object) {=0A=
      var value =3D Object.toJSON(object);=0A=
      if (!Object.isUndefined(value)) results.push(value);=0A=
    });=0A=
    return '[' + results.join(', ') + ']';=0A=
  }=0A=
});=0A=
=0A=
// use native browser JS 1.6 implementation if available=0A=
if (Object.isFunction(Array.prototype.forEach))=0A=
  Array.prototype._each =3D Array.prototype.forEach;=0A=
=0A=
if (!Array.prototype.indexOf) Array.prototype.indexOf =3D function(item, =
i) {=0A=
  i || (i =3D 0);=0A=
  var length =3D this.length;=0A=
  if (i < 0) i =3D length + i;=0A=
  for (; i < length; i++)=0A=
    if (this[i] =3D=3D=3D item) return i;=0A=
  return -1;=0A=
};=0A=
=0A=
if (!Array.prototype.lastIndexOf) Array.prototype.lastIndexOf =3D =
function(item, i) {=0A=
  i =3D isNaN(i) ? this.length : (i < 0 ? this.length + i : i) + 1;=0A=
  var n =3D this.slice(0, i).reverse().indexOf(item);=0A=
  return (n < 0) ? n : i - n - 1;=0A=
};=0A=
=0A=
Array.prototype.toArray =3D Array.prototype.clone;=0A=
=0A=
function $w(string) {=0A=
  if (!Object.isString(string)) return [];=0A=
  string =3D string.strip();=0A=
  return string ? string.split(/\s+/) : [];=0A=
}=0A=
=0A=
if (Prototype.Browser.Opera){=0A=
  Array.prototype.concat =3D function() {=0A=
    var array =3D [];=0A=
    for (var i =3D 0, length =3D this.length; i < length; i++) =
array.push(this[i]);=0A=
    for (var i =3D 0, length =3D arguments.length; i < length; i++) {=0A=
      if (Object.isArray(arguments[i])) {=0A=
        for (var j =3D 0, arrayLength =3D arguments[i].length; j < =
arrayLength; j++)=0A=
          array.push(arguments[i][j]);=0A=
      } else {=0A=
        array.push(arguments[i]);=0A=
      }=0A=
    }=0A=
    return array;=0A=
  };=0A=
}=0A=
Object.extend(Number.prototype, {=0A=
  toColorPart: function() {=0A=
    return this.toPaddedString(2, 16);=0A=
  },=0A=
=0A=
  succ: function() {=0A=
    return this + 1;=0A=
  },=0A=
=0A=
  times: function(iterator) {=0A=
    $R(0, this, true).each(iterator);=0A=
    return this;=0A=
  },=0A=
=0A=
  toPaddedString: function(length, radix) {=0A=
    var string =3D this.toString(radix || 10);=0A=
    return '0'.times(length - string.length) + string;=0A=
  },=0A=
=0A=
  toJSON: function() {=0A=
    return isFinite(this) ? this.toString() : 'null';=0A=
  }=0A=
});=0A=
=0A=
$w('abs round ceil floor').each(function(method){=0A=
  Number.prototype[method] =3D Math[method].methodize();=0A=
});=0A=
function $H(object) {=0A=
  return new Hash(object);=0A=
};=0A=
=0A=
var Hash =3D Class.create(Enumerable, (function() {=0A=
=0A=
  function toQueryPair(key, value) {=0A=
    if (Object.isUndefined(value)) return key;=0A=
    return key + '=3D' + encodeURIComponent(String.interpret(value));=0A=
  }=0A=
=0A=
  return {=0A=
    initialize: function(object) {=0A=
      this._object =3D Object.isHash(object) ? object.toObject() : =
Object.clone(object);=0A=
    },=0A=
=0A=
    _each: function(iterator) {=0A=
      for (var key in this._object) {=0A=
        var value =3D this._object[key], pair =3D [key, value];=0A=
        pair.key =3D key;=0A=
        pair.value =3D value;=0A=
        iterator(pair);=0A=
      }=0A=
    },=0A=
=0A=
    set: function(key, value) {=0A=
      return this._object[key] =3D value;=0A=
    },=0A=
=0A=
    get: function(key) {=0A=
      return this._object[key];=0A=
    },=0A=
=0A=
    unset: function(key) {=0A=
      var value =3D this._object[key];=0A=
      delete this._object[key];=0A=
      return value;=0A=
    },=0A=
=0A=
    toObject: function() {=0A=
      return Object.clone(this._object);=0A=
    },=0A=
=0A=
    keys: function() {=0A=
      return this.pluck('key');=0A=
    },=0A=
=0A=
    values: function() {=0A=
      return this.pluck('value');=0A=
    },=0A=
=0A=
    index: function(value) {=0A=
      var match =3D this.detect(function(pair) {=0A=
        return pair.value =3D=3D=3D value;=0A=
      });=0A=
      return match && match.key;=0A=
    },=0A=
=0A=
    merge: function(object) {=0A=
      return this.clone().update(object);=0A=
    },=0A=
=0A=
    update: function(object) {=0A=
      return new Hash(object).inject(this, function(result, pair) {=0A=
        result.set(pair.key, pair.value);=0A=
        return result;=0A=
      });=0A=
    },=0A=
=0A=
    toQueryString: function() {=0A=
      return this.map(function(pair) {=0A=
        var key =3D encodeURIComponent(pair.key), values =3D pair.value;=0A=
=0A=
        if (values && typeof values =3D=3D 'object') {=0A=
          if (Object.isArray(values))=0A=
            return values.map(toQueryPair.curry(key)).join('&');=0A=
        }=0A=
        return toQueryPair(key, values);=0A=
      }).join('&');=0A=
    },=0A=
=0A=
    inspect: function() {=0A=
      return '#<Hash:{' + this.map(function(pair) {=0A=
        return pair.map(Object.inspect).join(': ');=0A=
      }).join(', ') + '}>';=0A=
    },=0A=
=0A=
    toJSON: function() {=0A=
      return Object.toJSON(this.toObject());=0A=
    },=0A=
=0A=
    clone: function() {=0A=
      return new Hash(this);=0A=
    }=0A=
  }=0A=
})());=0A=
=0A=
Hash.prototype.toTemplateReplacements =3D Hash.prototype.toObject;=0A=
Hash.from =3D $H;=0A=
var ObjectRange =3D Class.create(Enumerable, {=0A=
  initialize: function(start, end, exclusive) {=0A=
    this.start =3D start;=0A=
    this.end =3D end;=0A=
    this.exclusive =3D exclusive;=0A=
  },=0A=
=0A=
  _each: function(iterator) {=0A=
    var value =3D this.start;=0A=
    while (this.include(value)) {=0A=
      iterator(value);=0A=
      value =3D value.succ();=0A=
    }=0A=
  },=0A=
=0A=
  include: function(value) {=0A=
    if (value < this.start)=0A=
      return false;=0A=
    if (this.exclusive)=0A=
      return value < this.end;=0A=
    return value <=3D this.end;=0A=
  }=0A=
});=0A=
=0A=
var $R =3D function(start, end, exclusive) {=0A=
  return new ObjectRange(start, end, exclusive);=0A=
};=0A=
=0A=
var Ajax =3D {=0A=
  getTransport: function() {=0A=
    return Try.these(=0A=
      function() {return new XMLHttpRequest()},=0A=
      function() {return new ActiveXObject('Msxml2.XMLHTTP')},=0A=
      function() {return new ActiveXObject('Microsoft.XMLHTTP')}=0A=
    ) || false;=0A=
  },=0A=
=0A=
  activeRequestCount: 0=0A=
};=0A=
=0A=
Ajax.Responders =3D {=0A=
  responders: [],=0A=
=0A=
  _each: function(iterator) {=0A=
    this.responders._each(iterator);=0A=
  },=0A=
=0A=
  register: function(responder) {=0A=
    if (!this.include(responder))=0A=
      this.responders.push(responder);=0A=
  },=0A=
=0A=
  unregister: function(responder) {=0A=
    this.responders =3D this.responders.without(responder);=0A=
  },=0A=
=0A=
  dispatch: function(callback, request, transport, json) {=0A=
    this.each(function(responder) {=0A=
      if (Object.isFunction(responder[callback])) {=0A=
        try {=0A=
          responder[callback].apply(responder, [request, transport, =
json]);=0A=
        } catch (e) { }=0A=
      }=0A=
    });=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Ajax.Responders, Enumerable);=0A=
=0A=
Ajax.Responders.register({=0A=
  onCreate:   function() { Ajax.activeRequestCount++ },=0A=
  onComplete: function() { Ajax.activeRequestCount-- }=0A=
});=0A=
=0A=
Ajax.Base =3D Class.create({=0A=
  initialize: function(options) {=0A=
    this.options =3D {=0A=
      method:       'post',=0A=
      asynchronous: true,=0A=
      contentType:  'application/x-www-form-urlencoded',=0A=
      encoding:     'UTF-8',=0A=
      parameters:   '',=0A=
      evalJSON:     true,=0A=
      evalJS:       true=0A=
    };=0A=
    Object.extend(this.options, options || { });=0A=
=0A=
    this.options.method =3D this.options.method.toLowerCase();=0A=
=0A=
    if (Object.isString(this.options.parameters))=0A=
      this.options.parameters =3D =
this.options.parameters.toQueryParams();=0A=
    else if (Object.isHash(this.options.parameters))=0A=
      this.options.parameters =3D this.options.parameters.toObject();=0A=
  }=0A=
});=0A=
=0A=
Ajax.Request =3D Class.create(Ajax.Base, {=0A=
  _complete: false,=0A=
=0A=
  initialize: function($super, url, options) {=0A=
    $super(options);=0A=
    this.transport =3D Ajax.getTransport();=0A=
    this.request(url);=0A=
  },=0A=
=0A=
  request: function(url) {=0A=
    this.url =3D url;=0A=
    this.method =3D this.options.method;=0A=
    var params =3D Object.clone(this.options.parameters);=0A=
=0A=
    if (!['get', 'post'].include(this.method)) {=0A=
      // simulate other verbs over post=0A=
      params['_method'] =3D this.method;=0A=
      this.method =3D 'post';=0A=
    }=0A=
=0A=
    this.parameters =3D params;=0A=
=0A=
    if (params =3D Object.toQueryString(params)) {=0A=
      // when GET, append parameters to URL=0A=
      if (this.method =3D=3D 'get')=0A=
        this.url +=3D (this.url.include('?') ? '&' : '?') + params;=0A=
      else if (/Konqueror|Safari|KHTML/.test(navigator.userAgent))=0A=
        params +=3D '&_=3D';=0A=
    }=0A=
=0A=
    try {=0A=
      var response =3D new Ajax.Response(this);=0A=
      if (this.options.onCreate) this.options.onCreate(response);=0A=
      Ajax.Responders.dispatch('onCreate', this, response);=0A=
=0A=
      this.transport.open(this.method.toUpperCase(), this.url,=0A=
        this.options.asynchronous);=0A=
=0A=
      if (this.options.asynchronous) =
this.respondToReadyState.bind(this).defer(1);=0A=
=0A=
      this.transport.onreadystatechange =3D =
this.onStateChange.bind(this);=0A=
      this.setRequestHeaders();=0A=
=0A=
      this.body =3D this.method =3D=3D 'post' ? (this.options.postBody =
|| params) : null;=0A=
      this.transport.send(this.body);=0A=
=0A=
      /* Force Firefox to handle ready state 4 for synchronous requests =
*/=0A=
      if (!this.options.asynchronous && this.transport.overrideMimeType)=0A=
        this.onStateChange();=0A=
=0A=
    }=0A=
    catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  onStateChange: function() {=0A=
    var readyState =3D this.transport.readyState;=0A=
    if (readyState > 1 && !((readyState =3D=3D 4) && this._complete))=0A=
      this.respondToReadyState(this.transport.readyState);=0A=
  },=0A=
=0A=
  setRequestHeaders: function() {=0A=
    var headers =3D {=0A=
      'X-Requested-With': 'XMLHttpRequest',=0A=
      'X-Prototype-Version': Prototype.Version,=0A=
      'Accept': 'text/javascript, text/html, application/xml, text/xml, =
*/*'=0A=
    };=0A=
=0A=
    if (this.method =3D=3D 'post') {=0A=
      headers['Content-type'] =3D this.options.contentType +=0A=
        (this.options.encoding ? '; charset=3D' + this.options.encoding =
: '');=0A=
=0A=
      /* Force "Connection: close" for older Mozilla browsers to work=0A=
       * around a bug where XMLHttpRequest sends an incorrect=0A=
       * Content-length header. See Mozilla Bugzilla #246651.=0A=
       */=0A=
      if (this.transport.overrideMimeType &&=0A=
          (navigator.userAgent.match(/Gecko\/(\d{4})/) || [0,2005])[1] < =
2005)=0A=
            headers['Connection'] =3D 'close';=0A=
    }=0A=
=0A=
    // user-defined headers=0A=
    if (typeof this.options.requestHeaders =3D=3D 'object') {=0A=
      var extras =3D this.options.requestHeaders;=0A=
=0A=
      if (Object.isFunction(extras.push))=0A=
        for (var i =3D 0, length =3D extras.length; i < length; i +=3D 2)=0A=
          headers[extras[i]] =3D extras[i+1];=0A=
      else=0A=
        $H(extras).each(function(pair) { headers[pair.key] =3D =
pair.value });=0A=
    }=0A=
=0A=
    for (var name in headers)=0A=
      this.transport.setRequestHeader(name, headers[name]);=0A=
  },=0A=
=0A=
  success: function() {=0A=
    var status =3D this.getStatus();=0A=
    return !status || (status >=3D 200 && status < 300);=0A=
  },=0A=
=0A=
  getStatus: function() {=0A=
    try {=0A=
      return this.transport.status || 0;=0A=
    } catch (e) { return 0 }=0A=
  },=0A=
=0A=
  respondToReadyState: function(readyState) {=0A=
    var state =3D Ajax.Request.Events[readyState], response =3D new =
Ajax.Response(this);=0A=
=0A=
    if (state =3D=3D 'Complete') {=0A=
      try {=0A=
        this._complete =3D true;=0A=
        (this.options['on' + response.status]=0A=
         || this.options['on' + (this.success() ? 'Success' : 'Failure')]=0A=
         || Prototype.emptyFunction)(response, response.headerJSON);=0A=
      } catch (e) {=0A=
        this.dispatchException(e);=0A=
      }=0A=
=0A=
      var contentType =3D response.getHeader('Content-type');=0A=
      if (this.options.evalJS =3D=3D 'force'=0A=
          || (this.options.evalJS && this.isSameOrigin() && contentType=0A=
          && =
contentType.match(/^\s*(text|application)\/(x-)?(java|ecma)script(;.*)?\s=
*$/i)))=0A=
        this.evalResponse();=0A=
    }=0A=
=0A=
    try {=0A=
      (this.options['on' + state] || Prototype.emptyFunction)(response, =
response.headerJSON);=0A=
      Ajax.Responders.dispatch('on' + state, this, response, =
response.headerJSON);=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
=0A=
    if (state =3D=3D 'Complete') {=0A=
      // avoid memory leak in MSIE: clean up=0A=
      this.transport.onreadystatechange =3D Prototype.emptyFunction;=0A=
    }=0A=
  },=0A=
=0A=
  isSameOrigin: function() {=0A=
    var m =3D this.url.match(/^\s*https?:\/\/[^\/]*/);=0A=
    return !m || (m[0] =3D=3D =
'#{protocol}//#{domain}#{port}'.interpolate({=0A=
      protocol: location.protocol,=0A=
      domain: document.domain,=0A=
      port: location.port ? ':' + location.port : ''=0A=
    }));=0A=
  },=0A=
=0A=
  getHeader: function(name) {=0A=
    try {=0A=
      return this.transport.getResponseHeader(name) || null;=0A=
    } catch (e) { return null }=0A=
  },=0A=
=0A=
  evalResponse: function() {=0A=
    try {=0A=
      return eval((this.transport.responseText || '').unfilterJSON());=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  dispatchException: function(exception) {=0A=
    (this.options.onException || Prototype.emptyFunction)(this, =
exception);=0A=
    Ajax.Responders.dispatch('onException', this, exception);=0A=
  }=0A=
});=0A=
=0A=
Ajax.Request.Events =3D=0A=
  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];=0A=
=0A=
Ajax.Response =3D Class.create({=0A=
  initialize: function(request){=0A=
    this.request =3D request;=0A=
    var transport  =3D this.transport  =3D request.transport,=0A=
        readyState =3D this.readyState =3D transport.readyState;=0A=
=0A=
    if((readyState > 2 && !Prototype.Browser.IE) || readyState =3D=3D 4) =
{=0A=
      this.status       =3D this.getStatus();=0A=
      this.statusText   =3D this.getStatusText();=0A=
      this.responseText =3D String.interpret(transport.responseText);=0A=
      this.headerJSON   =3D this._getHeaderJSON();=0A=
    }=0A=
=0A=
    if(readyState =3D=3D 4) {=0A=
      var xml =3D transport.responseXML;=0A=
      this.responseXML  =3D Object.isUndefined(xml) ? null : xml;=0A=
      this.responseJSON =3D this._getResponseJSON();=0A=
    }=0A=
  },=0A=
=0A=
  status:      0,=0A=
  statusText: '',=0A=
=0A=
  getStatus: Ajax.Request.prototype.getStatus,=0A=
=0A=
  getStatusText: function() {=0A=
    try {=0A=
      return this.transport.statusText || '';=0A=
    } catch (e) { return '' }=0A=
  },=0A=
=0A=
  getHeader: Ajax.Request.prototype.getHeader,=0A=
=0A=
  getAllHeaders: function() {=0A=
    try {=0A=
      return this.getAllResponseHeaders();=0A=
    } catch (e) { return null }=0A=
  },=0A=
=0A=
  getResponseHeader: function(name) {=0A=
    return this.transport.getResponseHeader(name);=0A=
  },=0A=
=0A=
  getAllResponseHeaders: function() {=0A=
    return this.transport.getAllResponseHeaders();=0A=
  },=0A=
=0A=
  _getHeaderJSON: function() {=0A=
    var json =3D this.getHeader('X-JSON');=0A=
    if (!json) return null;=0A=
    json =3D decodeURIComponent(escape(json));=0A=
    try {=0A=
      return json.evalJSON(this.request.options.sanitizeJSON ||=0A=
        !this.request.isSameOrigin());=0A=
    } catch (e) {=0A=
      this.request.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  _getResponseJSON: function() {=0A=
    var options =3D this.request.options;=0A=
    if (!options.evalJSON || (options.evalJSON !=3D 'force' &&=0A=
      !(this.getHeader('Content-type') || =
'').include('application/json')) ||=0A=
        this.responseText.blank())=0A=
          return null;=0A=
    try {=0A=
      return this.responseText.evalJSON(options.sanitizeJSON ||=0A=
        !this.request.isSameOrigin());=0A=
    } catch (e) {=0A=
      this.request.dispatchException(e);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Ajax.Updater =3D Class.create(Ajax.Request, {=0A=
  initialize: function($super, container, url, options) {=0A=
    this.container =3D {=0A=
      success: (container.success || container),=0A=
      failure: (container.failure || (container.success ? null : =
container))=0A=
    };=0A=
=0A=
    options =3D Object.clone(options);=0A=
    var onComplete =3D options.onComplete;=0A=
    options.onComplete =3D (function(response, json) {=0A=
      this.updateContent(response.responseText);=0A=
      if (Object.isFunction(onComplete)) onComplete(response, json);=0A=
    }).bind(this);=0A=
=0A=
    $super(url, options);=0A=
  },=0A=
=0A=
  updateContent: function(responseText) {=0A=
    var receiver =3D this.container[this.success() ? 'success' : =
'failure'],=0A=
        options =3D this.options;=0A=
=0A=
    if (!options.evalScripts) responseText =3D =
responseText.stripScripts();=0A=
=0A=
    if (receiver =3D $(receiver)) {=0A=
      if (options.insertion) {=0A=
        if (Object.isString(options.insertion)) {=0A=
          var insertion =3D { }; insertion[options.insertion] =3D =
responseText;=0A=
          receiver.insert(insertion);=0A=
        }=0A=
        else options.insertion(receiver, responseText);=0A=
      }=0A=
      else receiver.update(responseText);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Ajax.PeriodicalUpdater =3D Class.create(Ajax.Base, {=0A=
  initialize: function($super, container, url, options) {=0A=
    $super(options);=0A=
    this.onComplete =3D this.options.onComplete;=0A=
=0A=
    this.frequency =3D (this.options.frequency || 2);=0A=
    this.decay =3D (this.options.decay || 1);=0A=
=0A=
    this.updater =3D { };=0A=
    this.container =3D container;=0A=
    this.url =3D url;=0A=
=0A=
    this.start();=0A=
  },=0A=
=0A=
  start: function() {=0A=
    this.options.onComplete =3D this.updateComplete.bind(this);=0A=
    this.onTimerEvent();=0A=
  },=0A=
=0A=
  stop: function() {=0A=
    this.updater.options.onComplete =3D undefined;=0A=
    clearTimeout(this.timer);=0A=
    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);=0A=
  },=0A=
=0A=
  updateComplete: function(response) {=0A=
    if (this.options.decay) {=0A=
      this.decay =3D (response.responseText =3D=3D this.lastText ?=0A=
        this.decay * this.options.decay : 1);=0A=
=0A=
      this.lastText =3D response.responseText;=0A=
    }=0A=
    this.timer =3D this.onTimerEvent.bind(this).delay(this.decay * =
this.frequency);=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    this.updater =3D new Ajax.Updater(this.container, this.url, =
this.options);=0A=
  }=0A=
});=0A=
function $(element) {=0A=
  if (arguments.length > 1) {=0A=
    for (var i =3D 0, elements =3D [], length =3D arguments.length; i < =
length; i++)=0A=
      elements.push($(arguments[i]));=0A=
    return elements;=0A=
  }=0A=
  if (Object.isString(element))=0A=
    element =3D document.getElementById(element);=0A=
  return Element.extend(element);=0A=
}=0A=
=0A=
if (Prototype.BrowserFeatures.XPath) {=0A=
  document._getElementsByXPath =3D function(expression, parentElement) {=0A=
    var results =3D [];=0A=
    var query =3D document.evaluate(expression, $(parentElement) || =
document,=0A=
      null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);=0A=
    for (var i =3D 0, length =3D query.snapshotLength; i < length; i++)=0A=
      results.push(Element.extend(query.snapshotItem(i)));=0A=
    return results;=0A=
  };=0A=
}=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
if (!window.Node) var Node =3D { };=0A=
=0A=
if (!Node.ELEMENT_NODE) {=0A=
  // DOM level 2 ECMAScript Language Binding=0A=
  Object.extend(Node, {=0A=
    ELEMENT_NODE: 1,=0A=
    ATTRIBUTE_NODE: 2,=0A=
    TEXT_NODE: 3,=0A=
    CDATA_SECTION_NODE: 4,=0A=
    ENTITY_REFERENCE_NODE: 5,=0A=
    ENTITY_NODE: 6,=0A=
    PROCESSING_INSTRUCTION_NODE: 7,=0A=
    COMMENT_NODE: 8,=0A=
    DOCUMENT_NODE: 9,=0A=
    DOCUMENT_TYPE_NODE: 10,=0A=
    DOCUMENT_FRAGMENT_NODE: 11,=0A=
    NOTATION_NODE: 12=0A=
  });=0A=
}=0A=
=0A=
(function() {=0A=
  var element =3D this.Element;=0A=
  this.Element =3D function(tagName, attributes) {=0A=
    attributes =3D attributes || { };=0A=
    tagName =3D tagName.toLowerCase();=0A=
    var cache =3D Element.cache;=0A=
    if (Prototype.Browser.IE && attributes.name) {=0A=
      tagName =3D '<' + tagName + ' name=3D"' + attributes.name + '">';=0A=
      delete attributes.name;=0A=
      return Element.writeAttribute(document.createElement(tagName), =
attributes);=0A=
    }=0A=
    if (!cache[tagName]) cache[tagName] =3D =
Element.extend(document.createElement(tagName));=0A=
    return Element.writeAttribute(cache[tagName].cloneNode(false), =
attributes);=0A=
  };=0A=
  Object.extend(this.Element, element || { });=0A=
}).call(window);=0A=
=0A=
Element.cache =3D { };=0A=
=0A=
Element.Methods =3D {=0A=
  visible: function(element) {=0A=
    return $(element).style.display !=3D 'none';=0A=
  },=0A=
=0A=
  toggle: function(element) {=0A=
    element =3D $(element);=0A=
    Element[Element.visible(element) ? 'hide' : 'show'](element);=0A=
    return element;=0A=
  },=0A=
=0A=
  hide: function(element) {=0A=
    $(element).style.display =3D 'none';=0A=
    return element;=0A=
  },=0A=
=0A=
  show: function(element) {=0A=
    $(element).style.display =3D '';=0A=
    return element;=0A=
  },=0A=
=0A=
  remove: function(element) {=0A=
    element =3D $(element);=0A=
    element.parentNode.removeChild(element);=0A=
    return element;=0A=
  },=0A=
=0A=
  update: function(element, content) {=0A=
    element =3D $(element);=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) return =
element.update().insert(content);=0A=
    content =3D Object.toHTML(content);=0A=
    element.innerHTML =3D content.stripScripts();=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  },=0A=
=0A=
  replace: function(element, content) {=0A=
    element =3D $(element);=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    else if (!Object.isElement(content)) {=0A=
      content =3D Object.toHTML(content);=0A=
      var range =3D element.ownerDocument.createRange();=0A=
      range.selectNode(element);=0A=
      content.evalScripts.bind(content).defer();=0A=
      content =3D range.createContextualFragment(content.stripScripts());=0A=
    }=0A=
    element.parentNode.replaceChild(content, element);=0A=
    return element;=0A=
  },=0A=
=0A=
  insert: function(element, insertions) {=0A=
    element =3D $(element);=0A=
=0A=
    if (Object.isString(insertions) || Object.isNumber(insertions) ||=0A=
        Object.isElement(insertions) || (insertions && =
(insertions.toElement || insertions.toHTML)))=0A=
          insertions =3D {bottom:insertions};=0A=
=0A=
    var content, insert, tagName, childNodes;=0A=
=0A=
    for (var position in insertions) {=0A=
      content  =3D insertions[position];=0A=
      position =3D position.toLowerCase();=0A=
      insert =3D Element._insertionTranslations[position];=0A=
=0A=
      if (content && content.toElement) content =3D content.toElement();=0A=
      if (Object.isElement(content)) {=0A=
        insert(element, content);=0A=
        continue;=0A=
      }=0A=
=0A=
      content =3D Object.toHTML(content);=0A=
=0A=
      tagName =3D ((position =3D=3D 'before' || position =3D=3D 'after')=0A=
        ? element.parentNode : element).tagName.toUpperCase();=0A=
=0A=
      childNodes =3D Element._getContentFromAnonymousElement(tagName, =
content.stripScripts());=0A=
=0A=
      if (position =3D=3D 'top' || position =3D=3D 'after') =
childNodes.reverse();=0A=
      childNodes.each(insert.curry(element));=0A=
=0A=
      content.evalScripts.bind(content).defer();=0A=
    }=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  wrap: function(element, wrapper, attributes) {=0A=
    element =3D $(element);=0A=
    if (Object.isElement(wrapper))=0A=
      $(wrapper).writeAttribute(attributes || { });=0A=
    else if (Object.isString(wrapper)) wrapper =3D new Element(wrapper, =
attributes);=0A=
    else wrapper =3D new Element('div', wrapper);=0A=
    if (element.parentNode)=0A=
      element.parentNode.replaceChild(wrapper, element);=0A=
    wrapper.appendChild(element);=0A=
    return wrapper;=0A=
  },=0A=
=0A=
  inspect: function(element) {=0A=
    element =3D $(element);=0A=
    var result =3D '<' + element.tagName.toLowerCase();=0A=
    $H({'id': 'id', 'className': 'class'}).each(function(pair) {=0A=
      var property =3D pair.first(), attribute =3D pair.last();=0A=
      var value =3D (element[property] || '').toString();=0A=
      if (value) result +=3D ' ' + attribute + '=3D' + =
value.inspect(true);=0A=
    });=0A=
    return result + '>';=0A=
  },=0A=
=0A=
  recursivelyCollect: function(element, property) {=0A=
    element =3D $(element);=0A=
    var elements =3D [];=0A=
    while (element =3D element[property])=0A=
      if (element.nodeType =3D=3D 1)=0A=
        elements.push(Element.extend(element));=0A=
    return elements;=0A=
  },=0A=
=0A=
  ancestors: function(element) {=0A=
    return $(element).recursivelyCollect('parentNode');=0A=
  },=0A=
=0A=
  descendants: function(element) {=0A=
    return $(element).select("*");=0A=
  },=0A=
=0A=
  firstDescendant: function(element) {=0A=
    element =3D $(element).firstChild;=0A=
    while (element && element.nodeType !=3D 1) element =3D =
element.nextSibling;=0A=
    return $(element);=0A=
  },=0A=
=0A=
  immediateDescendants: function(element) {=0A=
    if (!(element =3D $(element).firstChild)) return [];=0A=
    while (element && element.nodeType !=3D 1) element =3D =
element.nextSibling;=0A=
    if (element) return [element].concat($(element).nextSiblings());=0A=
    return [];=0A=
  },=0A=
=0A=
  previousSiblings: function(element) {=0A=
    return $(element).recursivelyCollect('previousSibling');=0A=
  },=0A=
=0A=
  nextSiblings: function(element) {=0A=
    return $(element).recursivelyCollect('nextSibling');=0A=
  },=0A=
=0A=
  siblings: function(element) {=0A=
    element =3D $(element);=0A=
    return =
element.previousSiblings().reverse().concat(element.nextSiblings());=0A=
  },=0A=
=0A=
  match: function(element, selector) {=0A=
    if (Object.isString(selector))=0A=
      selector =3D new Selector(selector);=0A=
    return selector.match($(element));=0A=
  },=0A=
=0A=
  up: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return $(element.parentNode);=0A=
    var ancestors =3D element.ancestors();=0A=
    return Object.isNumber(expression) ? ancestors[expression] :=0A=
      Selector.findElement(ancestors, expression, index);=0A=
  },=0A=
=0A=
  down: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return element.firstDescendant();=0A=
    return Object.isNumber(expression) ? =
element.descendants()[expression] :=0A=
      element.select(expression)[index || 0];=0A=
  },=0A=
=0A=
  previous: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
$(Selector.handlers.previousElementSibling(element));=0A=
    var previousSiblings =3D element.previousSiblings();=0A=
    return Object.isNumber(expression) ? previousSiblings[expression] :=0A=
      Selector.findElement(previousSiblings, expression, index);=0A=
  },=0A=
=0A=
  next: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
$(Selector.handlers.nextElementSibling(element));=0A=
    var nextSiblings =3D element.nextSiblings();=0A=
    return Object.isNumber(expression) ? nextSiblings[expression] :=0A=
      Selector.findElement(nextSiblings, expression, index);=0A=
  },=0A=
=0A=
  select: function() {=0A=
    var args =3D $A(arguments), element =3D $(args.shift());=0A=
    return Selector.findChildElements(element, args);=0A=
  },=0A=
=0A=
  adjacent: function() {=0A=
    var args =3D $A(arguments), element =3D $(args.shift());=0A=
    return Selector.findChildElements(element.parentNode, =
args).without(element);=0A=
  },=0A=
=0A=
  identify: function(element) {=0A=
    element =3D $(element);=0A=
    var id =3D element.readAttribute('id'), self =3D arguments.callee;=0A=
    if (id) return id;=0A=
    do { id =3D 'anonymous_element_' + self.counter++ } while ($(id));=0A=
    element.writeAttribute('id', id);=0A=
    return id;=0A=
  },=0A=
=0A=
  readAttribute: function(element, name) {=0A=
    element =3D $(element);=0A=
    if (Prototype.Browser.IE) {=0A=
      var t =3D Element._attributeTranslations.read;=0A=
      if (t.values[name]) return t.values[name](element, name);=0A=
      if (t.names[name]) name =3D t.names[name];=0A=
      if (name.include(':')) {=0A=
        return (!element.attributes || !element.attributes[name]) ? null =
:=0A=
         element.attributes[name].value;=0A=
      }=0A=
    }=0A=
    return element.getAttribute(name);=0A=
  },=0A=
=0A=
  writeAttribute: function(element, name, value) {=0A=
    element =3D $(element);=0A=
    var attributes =3D { }, t =3D Element._attributeTranslations.write;=0A=
=0A=
    if (typeof name =3D=3D 'object') attributes =3D name;=0A=
    else attributes[name] =3D Object.isUndefined(value) ? true : value;=0A=
=0A=
    for (var attr in attributes) {=0A=
      name =3D t.names[attr] || attr;=0A=
      value =3D attributes[attr];=0A=
      if (t.values[attr]) name =3D t.values[attr](element, value);=0A=
      if (value =3D=3D=3D false || value =3D=3D=3D null)=0A=
        element.removeAttribute(name);=0A=
      else if (value =3D=3D=3D true)=0A=
        element.setAttribute(name, name);=0A=
      else element.setAttribute(name, value);=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  getHeight: function(element) {=0A=
    return $(element).getDimensions().height;=0A=
  },=0A=
=0A=
  getWidth: function(element) {=0A=
    return $(element).getDimensions().width;=0A=
  },=0A=
=0A=
  classNames: function(element) {=0A=
    return new Element.ClassNames(element);=0A=
  },=0A=
=0A=
  hasClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    var elementClassName =3D element.className;=0A=
    return (elementClassName.length > 0 && (elementClassName =3D=3D =
className ||=0A=
      new RegExp("(^|\\s)" + className + =
"(\\s|$)").test(elementClassName)));=0A=
  },=0A=
=0A=
  addClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    if (!element.hasClassName(className))=0A=
      element.className +=3D (element.className ? ' ' : '') + className;=0A=
    return element;=0A=
  },=0A=
=0A=
  removeClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    element.className =3D element.className.replace(=0A=
      new RegExp("(^|\\s+)" + className + "(\\s+|$)"), ' ').strip();=0A=
    return element;=0A=
  },=0A=
=0A=
  toggleClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    return element[element.hasClassName(className) ?=0A=
      'removeClassName' : 'addClassName'](className);=0A=
  },=0A=
=0A=
  // removes whitespace-only text node children=0A=
  cleanWhitespace: function(element) {=0A=
    element =3D $(element);=0A=
    var node =3D element.firstChild;=0A=
    while (node) {=0A=
      var nextNode =3D node.nextSibling;=0A=
      if (node.nodeType =3D=3D 3 && !/\S/.test(node.nodeValue))=0A=
        element.removeChild(node);=0A=
      node =3D nextNode;=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  empty: function(element) {=0A=
    return $(element).innerHTML.blank();=0A=
  },=0A=
=0A=
  descendantOf: function(element, ancestor) {=0A=
    element =3D $(element), ancestor =3D $(ancestor);=0A=
    var originalAncestor =3D ancestor;=0A=
=0A=
    if (element.compareDocumentPosition)=0A=
      return (element.compareDocumentPosition(ancestor) & 8) =3D=3D=3D 8;=0A=
=0A=
    if (element.sourceIndex && !Prototype.Browser.Opera) {=0A=
      var e =3D element.sourceIndex, a =3D ancestor.sourceIndex,=0A=
       nextAncestor =3D ancestor.nextSibling;=0A=
      if (!nextAncestor) {=0A=
        do { ancestor =3D ancestor.parentNode; }=0A=
        while (!(nextAncestor =3D ancestor.nextSibling) && =
ancestor.parentNode);=0A=
      }=0A=
      if (nextAncestor && nextAncestor.sourceIndex)=0A=
       return (e > a && e < nextAncestor.sourceIndex);=0A=
    }=0A=
=0A=
    while (element =3D element.parentNode)=0A=
      if (element =3D=3D originalAncestor) return true;=0A=
    return false;=0A=
  },=0A=
=0A=
  scrollTo: function(element) {=0A=
    element =3D $(element);=0A=
    var pos =3D element.cumulativeOffset();=0A=
    window.scrollTo(pos[0], pos[1]);=0A=
    return element;=0A=
  },=0A=
=0A=
  getStyle: function(element, style) {=0A=
    element =3D $(element);=0A=
    style =3D style =3D=3D 'float' ? 'cssFloat' : style.camelize();=0A=
    var value =3D element.style[style];=0A=
    if (!value) {=0A=
      var css =3D document.defaultView.getComputedStyle(element, null);=0A=
      value =3D css ? css[style] : null;=0A=
    }=0A=
    if (style =3D=3D 'opacity') return value ? parseFloat(value) : 1.0;=0A=
    return value =3D=3D 'auto' ? null : value;=0A=
  },=0A=
=0A=
  getOpacity: function(element) {=0A=
    return $(element).getStyle('opacity');=0A=
  },=0A=
=0A=
  setStyle: function(element, styles) {=0A=
    element =3D $(element);=0A=
    var elementStyle =3D element.style, match;=0A=
    if (Object.isString(styles)) {=0A=
      element.style.cssText +=3D ';' + styles;=0A=
      return styles.include('opacity') ?=0A=
        element.setOpacity(styles.match(/opacity:\s*(\d?\.?\d*)/)[1]) : =
element;=0A=
    }=0A=
    for (var property in styles)=0A=
      if (property =3D=3D 'opacity') =
element.setOpacity(styles[property]);=0A=
      else=0A=
        elementStyle[(property =3D=3D 'float' || property =3D=3D =
'cssFloat') ?=0A=
          (Object.isUndefined(elementStyle.styleFloat) ? 'cssFloat' : =
'styleFloat') :=0A=
            property] =3D styles[property];=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  setOpacity: function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? =
'' :=0A=
      (value < 0.00001) ? 0 : value;=0A=
    return element;=0A=
  },=0A=
=0A=
  getDimensions: function(element) {=0A=
    element =3D $(element);=0A=
    var display =3D $(element).getStyle('display');=0A=
    if (display !=3D 'none' && display !=3D null) // Safari bug=0A=
      return {width: element.offsetWidth, height: element.offsetHeight};=0A=
=0A=
    // All *Width and *Height properties give 0 on elements with display =
none,=0A=
    // so enable the element temporarily=0A=
    var els =3D element.style;=0A=
    var originalVisibility =3D els.visibility;=0A=
    var originalPosition =3D els.position;=0A=
    var originalDisplay =3D els.display;=0A=
    els.visibility =3D 'hidden';=0A=
    els.position =3D 'absolute';=0A=
    els.display =3D 'block';=0A=
    var originalWidth =3D element.clientWidth;=0A=
    var originalHeight =3D element.clientHeight;=0A=
    els.display =3D originalDisplay;=0A=
    els.position =3D originalPosition;=0A=
    els.visibility =3D originalVisibility;=0A=
    return {width: originalWidth, height: originalHeight};=0A=
  },=0A=
=0A=
  makePositioned: function(element) {=0A=
    element =3D $(element);=0A=
    var pos =3D Element.getStyle(element, 'position');=0A=
    if (pos =3D=3D 'static' || !pos) {=0A=
      element._madePositioned =3D true;=0A=
      element.style.position =3D 'relative';=0A=
      // Opera returns the offset relative to the positioning context, =
when an=0A=
      // element is position relative but top and left have not been =
defined=0A=
      if (window.opera) {=0A=
        element.style.top =3D 0;=0A=
        element.style.left =3D 0;=0A=
      }=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  undoPositioned: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._madePositioned) {=0A=
      element._madePositioned =3D undefined;=0A=
      element.style.position =3D=0A=
        element.style.top =3D=0A=
        element.style.left =3D=0A=
        element.style.bottom =3D=0A=
        element.style.right =3D '';=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  makeClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._overflow) return element;=0A=
    element._overflow =3D Element.getStyle(element, 'overflow') || =
'auto';=0A=
    if (element._overflow !=3D=3D 'hidden')=0A=
      element.style.overflow =3D 'hidden';=0A=
    return element;=0A=
  },=0A=
=0A=
  undoClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (!element._overflow) return element;=0A=
    element.style.overflow =3D element._overflow =3D=3D 'auto' ? '' : =
element._overflow;=0A=
    element._overflow =3D null;=0A=
    return element;=0A=
  },=0A=
=0A=
  cumulativeOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  positionedOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
      if (element) {=0A=
        if (element.tagName =3D=3D 'BODY') break;=0A=
        var p =3D Element.getStyle(element, 'position');=0A=
        if (p !=3D=3D 'static') break;=0A=
      }=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  absolutize: function(element) {=0A=
    element =3D $(element);=0A=
    if (element.getStyle('position') =3D=3D 'absolute') return;=0A=
    // Position.prepare(); // To be done manually by Scripty when it =
needs it.=0A=
=0A=
    var offsets =3D element.positionedOffset();=0A=
    var top     =3D offsets[1];=0A=
    var left    =3D offsets[0];=0A=
    var width   =3D element.clientWidth;=0A=
    var height  =3D element.clientHeight;=0A=
=0A=
    element._originalLeft   =3D left - parseFloat(element.style.left  || =
0);=0A=
    element._originalTop    =3D top  - parseFloat(element.style.top || =
0);=0A=
    element._originalWidth  =3D element.style.width;=0A=
    element._originalHeight =3D element.style.height;=0A=
=0A=
    element.style.position =3D 'absolute';=0A=
    element.style.top    =3D top + 'px';=0A=
    element.style.left   =3D left + 'px';=0A=
    element.style.width  =3D width + 'px';=0A=
    element.style.height =3D height + 'px';=0A=
    return element;=0A=
  },=0A=
=0A=
  relativize: function(element) {=0A=
    element =3D $(element);=0A=
    if (element.getStyle('position') =3D=3D 'relative') return;=0A=
    // Position.prepare(); // To be done manually by Scripty when it =
needs it.=0A=
=0A=
    element.style.position =3D 'relative';=0A=
    var top  =3D parseFloat(element.style.top  || 0) - =
(element._originalTop || 0);=0A=
    var left =3D parseFloat(element.style.left || 0) - =
(element._originalLeft || 0);=0A=
=0A=
    element.style.top    =3D top + 'px';=0A=
    element.style.left   =3D left + 'px';=0A=
    element.style.height =3D element._originalHeight;=0A=
    element.style.width  =3D element._originalWidth;=0A=
    return element;=0A=
  },=0A=
=0A=
  cumulativeScrollOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.scrollTop  || 0;=0A=
      valueL +=3D element.scrollLeft || 0;=0A=
      element =3D element.parentNode;=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  getOffsetParent: function(element) {=0A=
    if (element.offsetParent) return $(element.offsetParent);=0A=
    if (element =3D=3D document.body) return $(element);=0A=
=0A=
    while ((element =3D element.parentNode) && element !=3D =
document.body)=0A=
      if (Element.getStyle(element, 'position') !=3D 'static')=0A=
        return $(element);=0A=
=0A=
    return $(document.body);=0A=
  },=0A=
=0A=
  viewportOffset: function(forElement) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
=0A=
    var element =3D forElement;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
=0A=
      // Safari fix=0A=
      if (element.offsetParent =3D=3D document.body &&=0A=
        Element.getStyle(element, 'position') =3D=3D 'absolute') break;=0A=
=0A=
    } while (element =3D element.offsetParent);=0A=
=0A=
    element =3D forElement;=0A=
    do {=0A=
      if (!Prototype.Browser.Opera || element.tagName =3D=3D 'BODY') {=0A=
        valueT -=3D element.scrollTop  || 0;=0A=
        valueL -=3D element.scrollLeft || 0;=0A=
      }=0A=
    } while (element =3D element.parentNode);=0A=
=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  clonePosition: function(element, source) {=0A=
    var options =3D Object.extend({=0A=
      setLeft:    true,=0A=
      setTop:     true,=0A=
      setWidth:   true,=0A=
      setHeight:  true,=0A=
      offsetTop:  0,=0A=
      offsetLeft: 0=0A=
    }, arguments[2] || { });=0A=
=0A=
    // find page position of source=0A=
    source =3D $(source);=0A=
    var p =3D source.viewportOffset();=0A=
=0A=
    // find coordinate system to use=0A=
    element =3D $(element);=0A=
    var delta =3D [0, 0];=0A=
    var parent =3D null;=0A=
    // delta [0,0] will do fine with position: fixed elements,=0A=
    // position:absolute needs offsetParent deltas=0A=
    if (Element.getStyle(element, 'position') =3D=3D 'absolute') {=0A=
      parent =3D element.getOffsetParent();=0A=
      delta =3D parent.viewportOffset();=0A=
    }=0A=
=0A=
    // correct by body offsets (fixes Safari)=0A=
    if (parent =3D=3D document.body) {=0A=
      delta[0] -=3D document.body.offsetLeft;=0A=
      delta[1] -=3D document.body.offsetTop;=0A=
    }=0A=
=0A=
    // set position=0A=
    if (options.setLeft)   element.style.left  =3D (p[0] - delta[0] + =
options.offsetLeft) + 'px';=0A=
    if (options.setTop)    element.style.top   =3D (p[1] - delta[1] + =
options.offsetTop) + 'px';=0A=
    if (options.setWidth)  element.style.width =3D source.offsetWidth + =
'px';=0A=
    if (options.setHeight) element.style.height =3D source.offsetHeight =
+ 'px';=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
Element.Methods.identify.counter =3D 1;=0A=
=0A=
Object.extend(Element.Methods, {=0A=
  getElementsBySelector: Element.Methods.select,=0A=
  childElements: Element.Methods.immediateDescendants=0A=
});=0A=
=0A=
Element._attributeTranslations =3D {=0A=
  write: {=0A=
    names: {=0A=
      className: 'class',=0A=
      htmlFor:   'for'=0A=
    },=0A=
    values: { }=0A=
  }=0A=
};=0A=
=0A=
if (Prototype.Browser.Opera) {=0A=
  Element.Methods.getStyle =3D Element.Methods.getStyle.wrap(=0A=
    function(proceed, element, style) {=0A=
      switch (style) {=0A=
        case 'left': case 'top': case 'right': case 'bottom':=0A=
          if (proceed(element, 'position') =3D=3D=3D 'static') return =
null;=0A=
        case 'height': case 'width':=0A=
          // returns '0px' for hidden elements; we want it to return null=0A=
          if (!Element.visible(element)) return null;=0A=
=0A=
          // returns the border-box dimensions rather than the =
content-box=0A=
          // dimensions, so we subtract padding and borders from the =
value=0A=
          var dim =3D parseInt(proceed(element, style), 10);=0A=
=0A=
          if (dim !=3D=3D element['offset' + style.capitalize()])=0A=
            return dim + 'px';=0A=
=0A=
          var properties;=0A=
          if (style =3D=3D=3D 'height') {=0A=
            properties =3D ['border-top-width', 'padding-top',=0A=
             'padding-bottom', 'border-bottom-width'];=0A=
          }=0A=
          else {=0A=
            properties =3D ['border-left-width', 'padding-left',=0A=
             'padding-right', 'border-right-width'];=0A=
          }=0A=
          return properties.inject(dim, function(memo, property) {=0A=
            var val =3D proceed(element, property);=0A=
            return val =3D=3D=3D null ? memo : memo - parseInt(val, 10);=0A=
          }) + 'px';=0A=
        default: return proceed(element, style);=0A=
      }=0A=
    }=0A=
  );=0A=
=0A=
  Element.Methods.readAttribute =3D Element.Methods.readAttribute.wrap(=0A=
    function(proceed, element, attribute) {=0A=
      if (attribute =3D=3D=3D 'title') return element.title;=0A=
      return proceed(element, attribute);=0A=
    }=0A=
  );=0A=
}=0A=
=0A=
else if (Prototype.Browser.IE) {=0A=
  // IE doesn't report offsets correctly for static elements, so we =
change them=0A=
  // to "relative" to get the values, then change them back.=0A=
  Element.Methods.getOffsetParent =3D =
Element.Methods.getOffsetParent.wrap(=0A=
    function(proceed, element) {=0A=
      element =3D $(element);=0A=
      var position =3D element.getStyle('position');=0A=
      if (position !=3D=3D 'static') return proceed(element);=0A=
      element.setStyle({ position: 'relative' });=0A=
      var value =3D proceed(element);=0A=
      element.setStyle({ position: position });=0A=
      return value;=0A=
    }=0A=
  );=0A=
=0A=
  $w('positionedOffset viewportOffset').each(function(method) {=0A=
    Element.Methods[method] =3D Element.Methods[method].wrap(=0A=
      function(proceed, element) {=0A=
        element =3D $(element);=0A=
        var position =3D element.getStyle('position');=0A=
        if (position !=3D=3D 'static') return proceed(element);=0A=
        // Trigger hasLayout on the offset parent so that IE6 reports=0A=
        // accurate offsetTop and offsetLeft values for position: fixed.=0A=
        var offsetParent =3D element.getOffsetParent();=0A=
        if (offsetParent && offsetParent.getStyle('position') =3D=3D=3D =
'fixed')=0A=
          offsetParent.setStyle({ zoom: 1 });=0A=
        element.setStyle({ position: 'relative' });=0A=
        var value =3D proceed(element);=0A=
        element.setStyle({ position: position });=0A=
        return value;=0A=
      }=0A=
    );=0A=
  });=0A=
=0A=
  Element.Methods.getStyle =3D function(element, style) {=0A=
    element =3D $(element);=0A=
    style =3D (style =3D=3D 'float' || style =3D=3D 'cssFloat') ? =
'styleFloat' : style.camelize();=0A=
    var value =3D element.style[style];=0A=
    if (!value && element.currentStyle) value =3D =
element.currentStyle[style];=0A=
=0A=
    if (style =3D=3D 'opacity') {=0A=
      if (value =3D (element.getStyle('filter') || =
'').match(/alpha\(opacity=3D(.*)\)/))=0A=
        if (value[1]) return parseFloat(value[1]) / 100;=0A=
      return 1.0;=0A=
    }=0A=
=0A=
    if (value =3D=3D 'auto') {=0A=
      if ((style =3D=3D 'width' || style =3D=3D 'height') && =
(element.getStyle('display') !=3D 'none'))=0A=
        return element['offset' + style.capitalize()] + 'px';=0A=
      return null;=0A=
    }=0A=
    return value;=0A=
  };=0A=
=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    function stripAlpha(filter){=0A=
      return filter.replace(/alpha\([^\)]*\)/gi,'');=0A=
    }=0A=
    element =3D $(element);=0A=
    var currentStyle =3D element.currentStyle;=0A=
    if ((currentStyle && !currentStyle.hasLayout) ||=0A=
      (!currentStyle && element.style.zoom =3D=3D 'normal'))=0A=
        element.style.zoom =3D 1;=0A=
=0A=
    var filter =3D element.getStyle('filter'), style =3D element.style;=0A=
    if (value =3D=3D 1 || value =3D=3D=3D '') {=0A=
      (filter =3D stripAlpha(filter)) ?=0A=
        style.filter =3D filter : style.removeAttribute('filter');=0A=
      return element;=0A=
    } else if (value < 0.00001) value =3D 0;=0A=
    style.filter =3D stripAlpha(filter) +=0A=
      'alpha(opacity=3D' + (value * 100) + ')';=0A=
    return element;=0A=
  };=0A=
=0A=
  Element._attributeTranslations =3D {=0A=
    read: {=0A=
      names: {=0A=
        'class': 'className',=0A=
        'for':   'htmlFor'=0A=
      },=0A=
      values: {=0A=
        _getAttr: function(element, attribute) {=0A=
          return element.getAttribute(attribute, 2);=0A=
        },=0A=
        _getAttrNode: function(element, attribute) {=0A=
          var node =3D element.getAttributeNode(attribute);=0A=
          return node ? node.value : "";=0A=
        },=0A=
        _getEv: function(element, attribute) {=0A=
          attribute =3D element.getAttribute(attribute);=0A=
          return attribute ? attribute.toString().slice(23, -2) : null;=0A=
        },=0A=
        _flag: function(element, attribute) {=0A=
          return $(element).hasAttribute(attribute) ? attribute : null;=0A=
        },=0A=
        style: function(element) {=0A=
          return element.style.cssText.toLowerCase();=0A=
        },=0A=
        title: function(element) {=0A=
          return element.title;=0A=
        }=0A=
      }=0A=
    }=0A=
  };=0A=
=0A=
  Element._attributeTranslations.write =3D {=0A=
    names: Object.extend({=0A=
      cellpadding: 'cellPadding',=0A=
      cellspacing: 'cellSpacing'=0A=
    }, Element._attributeTranslations.read.names),=0A=
    values: {=0A=
      checked: function(element, value) {=0A=
        element.checked =3D !!value;=0A=
      },=0A=
=0A=
      style: function(element, value) {=0A=
        element.style.cssText =3D value ? value : '';=0A=
      }=0A=
    }=0A=
  };=0A=
=0A=
  Element._attributeTranslations.has =3D {};=0A=
=0A=
  $w('colSpan rowSpan vAlign dateTime accessKey tabIndex ' +=0A=
      'encType maxLength readOnly longDesc').each(function(attr) {=0A=
    Element._attributeTranslations.write.names[attr.toLowerCase()] =3D =
attr;=0A=
    Element._attributeTranslations.has[attr.toLowerCase()] =3D attr;=0A=
  });=0A=
=0A=
  (function(v) {=0A=
    Object.extend(v, {=0A=
      href:        v._getAttr,=0A=
      src:         v._getAttr,=0A=
      type:        v._getAttr,=0A=
      action:      v._getAttrNode,=0A=
      disabled:    v._flag,=0A=
      checked:     v._flag,=0A=
      readonly:    v._flag,=0A=
      multiple:    v._flag,=0A=
      onload:      v._getEv,=0A=
      onunload:    v._getEv,=0A=
      onclick:     v._getEv,=0A=
      ondblclick:  v._getEv,=0A=
      onmousedown: v._getEv,=0A=
      onmouseup:   v._getEv,=0A=
      onmouseover: v._getEv,=0A=
      onmousemove: v._getEv,=0A=
      onmouseout:  v._getEv,=0A=
      onfocus:     v._getEv,=0A=
      onblur:      v._getEv,=0A=
      onkeypress:  v._getEv,=0A=
      onkeydown:   v._getEv,=0A=
      onkeyup:     v._getEv,=0A=
      onsubmit:    v._getEv,=0A=
      onreset:     v._getEv,=0A=
      onselect:    v._getEv,=0A=
      onchange:    v._getEv=0A=
    });=0A=
  })(Element._attributeTranslations.read.values);=0A=
}=0A=
=0A=
else if (Prototype.Browser.Gecko && =
/rv:1\.8\.0/.test(navigator.userAgent)) {=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1) ? 0.999999 :=0A=
      (value =3D=3D=3D '') ? '' : (value < 0.00001) ? 0 : value;=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
else if (Prototype.Browser.WebKit) {=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? =
'' :=0A=
      (value < 0.00001) ? 0 : value;=0A=
=0A=
    if (value =3D=3D 1)=0A=
      if(element.tagName =3D=3D 'IMG' && element.width) {=0A=
        element.width++; element.width--;=0A=
      } else try {=0A=
        var n =3D document.createTextNode(' ');=0A=
        element.appendChild(n);=0A=
        element.removeChild(n);=0A=
      } catch (e) { }=0A=
=0A=
    return element;=0A=
  };=0A=
=0A=
  // Safari returns margins on body which is incorrect if the child is =
absolutely=0A=
  // positioned.  For performance reasons, redefine =
Element#cumulativeOffset for=0A=
  // KHTML/WebKit only.=0A=
  Element.Methods.cumulativeOffset =3D function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      if (element.offsetParent =3D=3D document.body)=0A=
        if (Element.getStyle(element, 'position') =3D=3D 'absolute') =
break;=0A=
=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  };=0A=
}=0A=
=0A=
if (Prototype.Browser.IE || Prototype.Browser.Opera) {=0A=
  // IE and Opera are missing .innerHTML support for TABLE-related and =
SELECT elements=0A=
  Element.Methods.update =3D function(element, content) {=0A=
    element =3D $(element);=0A=
=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) return =
element.update().insert(content);=0A=
=0A=
    content =3D Object.toHTML(content);=0A=
    var tagName =3D element.tagName.toUpperCase();=0A=
=0A=
    if (tagName in Element._insertionTranslations.tags) {=0A=
      $A(element.childNodes).each(function(node) { =
element.removeChild(node) });=0A=
      Element._getContentFromAnonymousElement(tagName, =
content.stripScripts())=0A=
        .each(function(node) { element.appendChild(node) });=0A=
    }=0A=
    else element.innerHTML =3D content.stripScripts();=0A=
=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
if ('outerHTML' in document.createElement('div')) {=0A=
  Element.Methods.replace =3D function(element, content) {=0A=
    element =3D $(element);=0A=
=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) {=0A=
      element.parentNode.replaceChild(content, element);=0A=
      return element;=0A=
    }=0A=
=0A=
    content =3D Object.toHTML(content);=0A=
    var parent =3D element.parentNode, tagName =3D =
parent.tagName.toUpperCase();=0A=
=0A=
    if (Element._insertionTranslations.tags[tagName]) {=0A=
      var nextSibling =3D element.next();=0A=
      var fragments =3D Element._getContentFromAnonymousElement(tagName, =
content.stripScripts());=0A=
      parent.removeChild(element);=0A=
      if (nextSibling)=0A=
        fragments.each(function(node) { parent.insertBefore(node, =
nextSibling) });=0A=
      else=0A=
        fragments.each(function(node) { parent.appendChild(node) });=0A=
    }=0A=
    else element.outerHTML =3D content.stripScripts();=0A=
=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
Element._returnOffset =3D function(l, t) {=0A=
  var result =3D [l, t];=0A=
  result.left =3D l;=0A=
  result.top =3D t;=0A=
  return result;=0A=
};=0A=
=0A=
Element._getContentFromAnonymousElement =3D function(tagName, html) {=0A=
  var div =3D new Element('div'), t =3D =
Element._insertionTranslations.tags[tagName];=0A=
  if (t) {=0A=
    div.innerHTML =3D t[0] + html + t[1];=0A=
    t[2].times(function() { div =3D div.firstChild });=0A=
  } else div.innerHTML =3D html;=0A=
  return $A(div.childNodes);=0A=
};=0A=
=0A=
Element._insertionTranslations =3D {=0A=
  before: function(element, node) {=0A=
    element.parentNode.insertBefore(node, element);=0A=
  },=0A=
  top: function(element, node) {=0A=
    element.insertBefore(node, element.firstChild);=0A=
  },=0A=
  bottom: function(element, node) {=0A=
    element.appendChild(node);=0A=
  },=0A=
  after: function(element, node) {=0A=
    element.parentNode.insertBefore(node, element.nextSibling);=0A=
  },=0A=
  tags: {=0A=
    TABLE:  ['<table>',                '</table>',                   1],=0A=
    TBODY:  ['<table><tbody>',         '</tbody></table>',           2],=0A=
    TR:     ['<table><tbody><tr>',     '</tr></tbody></table>',      3],=0A=
    TD:     ['<table><tbody><tr><td>', '</td></tr></tbody></table>', 4],=0A=
    SELECT: ['<select>',               '</select>',                  1]=0A=
  }=0A=
};=0A=
=0A=
(function() {=0A=
  Object.extend(this.tags, {=0A=
    THEAD: this.tags.TBODY,=0A=
    TFOOT: this.tags.TBODY,=0A=
    TH:    this.tags.TD=0A=
  });=0A=
}).call(Element._insertionTranslations);=0A=
=0A=
Element.Methods.Simulated =3D {=0A=
  hasAttribute: function(element, attribute) {=0A=
    attribute =3D Element._attributeTranslations.has[attribute] || =
attribute;=0A=
    var node =3D $(element).getAttributeNode(attribute);=0A=
    return node && node.specified;=0A=
  }=0A=
};=0A=
=0A=
Element.Methods.ByTag =3D { };=0A=
=0A=
Object.extend(Element, Element.Methods);=0A=
=0A=
if (!Prototype.BrowserFeatures.ElementExtensions &&=0A=
    document.createElement('div').__proto__) {=0A=
  window.HTMLElement =3D { };=0A=
  window.HTMLElement.prototype =3D =
document.createElement('div').__proto__;=0A=
  Prototype.BrowserFeatures.ElementExtensions =3D true;=0A=
}=0A=
=0A=
Element.extend =3D (function() {=0A=
  if (Prototype.BrowserFeatures.SpecificElementExtensions)=0A=
    return Prototype.K;=0A=
=0A=
  var Methods =3D { }, ByTag =3D Element.Methods.ByTag;=0A=
=0A=
  var extend =3D Object.extend(function(element) {=0A=
    if (!element || element._extendedByPrototype ||=0A=
        element.nodeType !=3D 1 || element =3D=3D window) return element;=0A=
=0A=
    var methods =3D Object.clone(Methods),=0A=
      tagName =3D element.tagName, property, value;=0A=
=0A=
    // extend methods for specific tags=0A=
    if (ByTag[tagName]) Object.extend(methods, ByTag[tagName]);=0A=
=0A=
    for (property in methods) {=0A=
      value =3D methods[property];=0A=
      if (Object.isFunction(value) && !(property in element))=0A=
        element[property] =3D value.methodize();=0A=
    }=0A=
=0A=
    element._extendedByPrototype =3D Prototype.emptyFunction;=0A=
    return element;=0A=
=0A=
  }, {=0A=
    refresh: function() {=0A=
      // extend methods for all tags (Safari doesn't need this)=0A=
      if (!Prototype.BrowserFeatures.ElementExtensions) {=0A=
        Object.extend(Methods, Element.Methods);=0A=
        Object.extend(Methods, Element.Methods.Simulated);=0A=
      }=0A=
    }=0A=
  });=0A=
=0A=
  extend.refresh();=0A=
  return extend;=0A=
})();=0A=
=0A=
Element.hasAttribute =3D function(element, attribute) {=0A=
  if (element.hasAttribute) return element.hasAttribute(attribute);=0A=
  return Element.Methods.Simulated.hasAttribute(element, attribute);=0A=
};=0A=
=0A=
Element.addMethods =3D function(methods) {=0A=
  var F =3D Prototype.BrowserFeatures, T =3D Element.Methods.ByTag;=0A=
=0A=
  if (!methods) {=0A=
    Object.extend(Form, Form.Methods);=0A=
    Object.extend(Form.Element, Form.Element.Methods);=0A=
    Object.extend(Element.Methods.ByTag, {=0A=
      "FORM":     Object.clone(Form.Methods),=0A=
      "INPUT":    Object.clone(Form.Element.Methods),=0A=
      "SELECT":   Object.clone(Form.Element.Methods),=0A=
      "TEXTAREA": Object.clone(Form.Element.Methods)=0A=
    });=0A=
  }=0A=
=0A=
  if (arguments.length =3D=3D 2) {=0A=
    var tagName =3D methods;=0A=
    methods =3D arguments[1];=0A=
  }=0A=
=0A=
  if (!tagName) Object.extend(Element.Methods, methods || { });=0A=
  else {=0A=
    if (Object.isArray(tagName)) tagName.each(extend);=0A=
    else extend(tagName);=0A=
  }=0A=
=0A=
  function extend(tagName) {=0A=
    tagName =3D tagName.toUpperCase();=0A=
    if (!Element.Methods.ByTag[tagName])=0A=
      Element.Methods.ByTag[tagName] =3D { };=0A=
    Object.extend(Element.Methods.ByTag[tagName], methods);=0A=
  }=0A=
=0A=
  function copy(methods, destination, onlyIfAbsent) {=0A=
    onlyIfAbsent =3D onlyIfAbsent || false;=0A=
    for (var property in methods) {=0A=
      var value =3D methods[property];=0A=
      if (!Object.isFunction(value)) continue;=0A=
      if (!onlyIfAbsent || !(property in destination))=0A=
        destination[property] =3D value.methodize();=0A=
    }=0A=
  }=0A=
=0A=
  function findDOMClass(tagName) {=0A=
    var klass;=0A=
    var trans =3D {=0A=
      "OPTGROUP": "OptGroup", "TEXTAREA": "TextArea", "P": "Paragraph",=0A=
      "FIELDSET": "FieldSet", "UL": "UList", "OL": "OList", "DL": =
"DList",=0A=
      "DIR": "Directory", "H1": "Heading", "H2": "Heading", "H3": =
"Heading",=0A=
      "H4": "Heading", "H5": "Heading", "H6": "Heading", "Q": "Quote",=0A=
      "INS": "Mod", "DEL": "Mod", "A": "Anchor", "IMG": "Image", =
"CAPTION":=0A=
      "TableCaption", "COL": "TableCol", "COLGROUP": "TableCol", "THEAD":=0A=
      "TableSection", "TFOOT": "TableSection", "TBODY": "TableSection", =
"TR":=0A=
      "TableRow", "TH": "TableCell", "TD": "TableCell", "FRAMESET":=0A=
      "FrameSet", "IFRAME": "IFrame"=0A=
    };=0A=
    if (trans[tagName]) klass =3D 'HTML' + trans[tagName] + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
    klass =3D 'HTML' + tagName + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
    klass =3D 'HTML' + tagName.capitalize() + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
=0A=
    window[klass] =3D { };=0A=
    window[klass].prototype =3D =
document.createElement(tagName).__proto__;=0A=
    return window[klass];=0A=
  }=0A=
=0A=
  if (F.ElementExtensions) {=0A=
    copy(Element.Methods, HTMLElement.prototype);=0A=
    copy(Element.Methods.Simulated, HTMLElement.prototype, true);=0A=
  }=0A=
=0A=
  if (F.SpecificElementExtensions) {=0A=
    for (var tag in Element.Methods.ByTag) {=0A=
      var klass =3D findDOMClass(tag);=0A=
      if (Object.isUndefined(klass)) continue;=0A=
      copy(T[tag], klass.prototype);=0A=
    }=0A=
  }=0A=
=0A=
  Object.extend(Element, Element.Methods);=0A=
  delete Element.ByTag;=0A=
=0A=
  if (Element.extend.refresh) Element.extend.refresh();=0A=
  Element.cache =3D { };=0A=
};=0A=
=0A=
document.viewport =3D {=0A=
  getDimensions: function() {=0A=
    var dimensions =3D { };=0A=
    var B =3D Prototype.Browser;=0A=
    $w('width height').each(function(d) {=0A=
      var D =3D d.capitalize();=0A=
      dimensions[d] =3D (B.WebKit && !document.evaluate) ? self['inner' =
+ D] :=0A=
        (B.Opera) ? document.body['client' + D] : =
document.documentElement['client' + D];=0A=
    });=0A=
    return dimensions;=0A=
  },=0A=
=0A=
  getWidth: function() {=0A=
    return this.getDimensions().width;=0A=
  },=0A=
=0A=
  getHeight: function() {=0A=
    return this.getDimensions().height;=0A=
  },=0A=
=0A=
  getScrollOffsets: function() {=0A=
    return Element._returnOffset(=0A=
      window.pageXOffset || document.documentElement.scrollLeft || =
document.body.scrollLeft,=0A=
      window.pageYOffset || document.documentElement.scrollTop || =
document.body.scrollTop);=0A=
  }=0A=
};=0A=
/* Portions of the Selector class are derived from Jack Slocum=E2=80=99s =
DomQuery,=0A=
 * part of YUI-Ext version 0.40, distributed under the terms of an =
MIT-style=0A=
 * license.  Please see http://www.yui-ext.com/ for more information. */=0A=
=0A=
var Selector =3D Class.create({=0A=
  initialize: function(expression) {=0A=
    this.expression =3D expression.strip();=0A=
    this.compileMatcher();=0A=
  },=0A=
=0A=
  shouldUseXPath: function() {=0A=
    if (!Prototype.BrowserFeatures.XPath) return false;=0A=
=0A=
    var e =3D this.expression;=0A=
=0A=
    // Safari 3 chokes on :*-of-type and :empty=0A=
    if (Prototype.Browser.WebKit &&=0A=
     (e.include("-of-type") || e.include(":empty")))=0A=
      return false;=0A=
=0A=
    // XPath can't do namespaced attributes, nor can it read=0A=
    // the "checked" property from DOM nodes=0A=
    if ((/(\[[\w-]*?:|:checked)/).test(this.expression))=0A=
      return false;=0A=
=0A=
    return true;=0A=
  },=0A=
=0A=
  compileMatcher: function() {=0A=
    if (this.shouldUseXPath())=0A=
      return this.compileXPathMatcher();=0A=
=0A=
    var e =3D this.expression, ps =3D Selector.patterns, h =3D =
Selector.handlers,=0A=
        c =3D Selector.criteria, le, p, m;=0A=
=0A=
    if (Selector._cache[e]) {=0A=
      this.matcher =3D Selector._cache[e];=0A=
      return;=0A=
    }=0A=
=0A=
    this.matcher =3D ["this.matcher =3D function(root) {",=0A=
                    "var r =3D root, h =3D Selector.handlers, c =3D =
false, n;"];=0A=
=0A=
    while (e && le !=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i in ps) {=0A=
        p =3D ps[i];=0A=
        if (m =3D e.match(p)) {=0A=
          this.matcher.push(Object.isFunction(c[i]) ? c[i](m) :=0A=
    	      new Template(c[i]).evaluate(m));=0A=
          e =3D e.replace(m[0], '');=0A=
          break;=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    this.matcher.push("return h.unique(n);\n}");=0A=
    eval(this.matcher.join('\n'));=0A=
    Selector._cache[this.expression] =3D this.matcher;=0A=
  },=0A=
=0A=
  compileXPathMatcher: function() {=0A=
    var e =3D this.expression, ps =3D Selector.patterns,=0A=
        x =3D Selector.xpath, le, m;=0A=
=0A=
    if (Selector._cache[e]) {=0A=
      this.xpath =3D Selector._cache[e]; return;=0A=
    }=0A=
=0A=
    this.matcher =3D ['.//*'];=0A=
    while (e && le !=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i in ps) {=0A=
        if (m =3D e.match(ps[i])) {=0A=
          this.matcher.push(Object.isFunction(x[i]) ? x[i](m) :=0A=
            new Template(x[i]).evaluate(m));=0A=
          e =3D e.replace(m[0], '');=0A=
          break;=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    this.xpath =3D this.matcher.join('');=0A=
    Selector._cache[this.expression] =3D this.xpath;=0A=
  },=0A=
=0A=
  findElements: function(root) {=0A=
    root =3D root || document;=0A=
    if (this.xpath) return document._getElementsByXPath(this.xpath, =
root);=0A=
    return this.matcher(root);=0A=
  },=0A=
=0A=
  match: function(element) {=0A=
    this.tokens =3D [];=0A=
=0A=
    var e =3D this.expression, ps =3D Selector.patterns, as =3D =
Selector.assertions;=0A=
    var le, p, m;=0A=
=0A=
    while (e && le !=3D=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i in ps) {=0A=
        p =3D ps[i];=0A=
        if (m =3D e.match(p)) {=0A=
          // use the Selector.assertions methods unless the selector=0A=
          // is too complex.=0A=
          if (as[i]) {=0A=
            this.tokens.push([i, Object.clone(m)]);=0A=
            e =3D e.replace(m[0], '');=0A=
          } else {=0A=
            // reluctantly do a document-wide search=0A=
            // and look for a match in the array=0A=
            return this.findElements(document).include(element);=0A=
          }=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    var match =3D true, name, matches;=0A=
    for (var i =3D 0, token; token =3D this.tokens[i]; i++) {=0A=
      name =3D token[0], matches =3D token[1];=0A=
      if (!Selector.assertions[name](element, matches)) {=0A=
        match =3D false; break;=0A=
      }=0A=
    }=0A=
=0A=
    return match;=0A=
  },=0A=
=0A=
  toString: function() {=0A=
    return this.expression;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return "#<Selector:" + this.expression.inspect() + ">";=0A=
  }=0A=
});=0A=
=0A=
Object.extend(Selector, {=0A=
  _cache: { },=0A=
=0A=
  xpath: {=0A=
    descendant:   "//*",=0A=
    child:        "/*",=0A=
    adjacent:     "/following-sibling::*[1]",=0A=
    laterSibling: '/following-sibling::*',=0A=
    tagName:      function(m) {=0A=
      if (m[1] =3D=3D '*') return '';=0A=
      return "[local-name()=3D'" + m[1].toLowerCase() +=0A=
             "' or local-name()=3D'" + m[1].toUpperCase() + "']";=0A=
    },=0A=
    className:    "[contains(concat(' ', @class, ' '), ' #{1} ')]",=0A=
    id:           "[@id=3D'#{1}']",=0A=
    attrPresence: function(m) {=0A=
      m[1] =3D m[1].toLowerCase();=0A=
      return new Template("[@#{1}]").evaluate(m);=0A=
    },=0A=
    attr: function(m) {=0A=
      m[1] =3D m[1].toLowerCase();=0A=
      m[3] =3D m[5] || m[6];=0A=
      return new Template(Selector.xpath.operators[m[2]]).evaluate(m);=0A=
    },=0A=
    pseudo: function(m) {=0A=
      var h =3D Selector.xpath.pseudos[m[1]];=0A=
      if (!h) return '';=0A=
      if (Object.isFunction(h)) return h(m);=0A=
      return new Template(Selector.xpath.pseudos[m[1]]).evaluate(m);=0A=
    },=0A=
    operators: {=0A=
      '=3D':  "[@#{1}=3D'#{3}']",=0A=
      '!=3D': "[@#{1}!=3D'#{3}']",=0A=
      '^=3D': "[starts-with(@#{1}, '#{3}')]",=0A=
      '$=3D': "[substring(@#{1}, (string-length(@#{1}) - =
string-length('#{3}') + 1))=3D'#{3}']",=0A=
      '*=3D': "[contains(@#{1}, '#{3}')]",=0A=
      '~=3D': "[contains(concat(' ', @#{1}, ' '), ' #{3} ')]",=0A=
      '|=3D': "[contains(concat('-', @#{1}, '-'), '-#{3}-')]"=0A=
    },=0A=
    pseudos: {=0A=
      'first-child': '[not(preceding-sibling::*)]',=0A=
      'last-child':  '[not(following-sibling::*)]',=0A=
      'only-child':  '[not(preceding-sibling::* or =
following-sibling::*)]',=0A=
      'empty':       "[count(*) =3D 0 and (count(text()) =3D 0 or =
translate(text(), ' \t\r\n', '') =3D '')]",=0A=
      'checked':     "[@checked]",=0A=
      'disabled':    "[@disabled]",=0A=
      'enabled':     "[not(@disabled)]",=0A=
      'not': function(m) {=0A=
        var e =3D m[6], p =3D Selector.patterns,=0A=
            x =3D Selector.xpath, le, v;=0A=
=0A=
        var exclusion =3D [];=0A=
        while (e && le !=3D e && (/\S/).test(e)) {=0A=
          le =3D e;=0A=
          for (var i in p) {=0A=
            if (m =3D e.match(p[i])) {=0A=
              v =3D Object.isFunction(x[i]) ? x[i](m) : new =
Template(x[i]).evaluate(m);=0A=
              exclusion.push("(" + v.substring(1, v.length - 1) + ")");=0A=
              e =3D e.replace(m[0], '');=0A=
              break;=0A=
            }=0A=
          }=0A=
        }=0A=
        return "[not(" + exclusion.join(" and ") + ")]";=0A=
      },=0A=
      'nth-child':      function(m) {=0A=
        return =
Selector.xpath.pseudos.nth("(count(./preceding-sibling::*) + 1) ", m);=0A=
      },=0A=
      'nth-last-child': function(m) {=0A=
        return =
Selector.xpath.pseudos.nth("(count(./following-sibling::*) + 1) ", m);=0A=
      },=0A=
      'nth-of-type':    function(m) {=0A=
        return Selector.xpath.pseudos.nth("position() ", m);=0A=
      },=0A=
      'nth-last-of-type': function(m) {=0A=
        return Selector.xpath.pseudos.nth("(last() + 1 - position()) ", =
m);=0A=
      },=0A=
      'first-of-type':  function(m) {=0A=
        m[6] =3D "1"; return Selector.xpath.pseudos['nth-of-type'](m);=0A=
      },=0A=
      'last-of-type':   function(m) {=0A=
        m[6] =3D "1"; return =
Selector.xpath.pseudos['nth-last-of-type'](m);=0A=
      },=0A=
      'only-of-type':   function(m) {=0A=
        var p =3D Selector.xpath.pseudos; return p['first-of-type'](m) + =
p['last-of-type'](m);=0A=
      },=0A=
      nth: function(fragment, m) {=0A=
        var mm, formula =3D m[6], predicate;=0A=
        if (formula =3D=3D 'even') formula =3D '2n+0';=0A=
        if (formula =3D=3D 'odd')  formula =3D '2n+1';=0A=
        if (mm =3D formula.match(/^(\d+)$/)) // digit only=0A=
          return '[' + fragment + "=3D " + mm[1] + ']';=0A=
        if (mm =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b=0A=
          if (mm[1] =3D=3D "-") mm[1] =3D -1;=0A=
          var a =3D mm[1] ? Number(mm[1]) : 1;=0A=
          var b =3D mm[2] ? Number(mm[2]) : 0;=0A=
          predicate =3D "[((#{fragment} - #{b}) mod #{a} =3D 0) and " +=0A=
          "((#{fragment} - #{b}) div #{a} >=3D 0)]";=0A=
          return new Template(predicate).evaluate({=0A=
            fragment: fragment, a: a, b: b });=0A=
        }=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  criteria: {=0A=
    tagName:      'n =3D h.tagName(n, r, "#{1}", c);      c =3D false;',=0A=
    className:    'n =3D h.className(n, r, "#{1}", c);    c =3D false;',=0A=
    id:           'n =3D h.id(n, r, "#{1}", c);           c =3D false;',=0A=
    attrPresence: 'n =3D h.attrPresence(n, r, "#{1}", c); c =3D false;',=0A=
    attr: function(m) {=0A=
      m[3] =3D (m[5] || m[6]);=0A=
      return new Template('n =3D h.attr(n, r, "#{1}", "#{3}", "#{2}", =
c); c =3D false;').evaluate(m);=0A=
    },=0A=
    pseudo: function(m) {=0A=
      if (m[6]) m[6] =3D m[6].replace(/"/g, '\\"');=0A=
      return new Template('n =3D h.pseudo(n, "#{1}", "#{6}", r, c); c =
=3D false;').evaluate(m);=0A=
    },=0A=
    descendant:   'c =3D "descendant";',=0A=
    child:        'c =3D "child";',=0A=
    adjacent:     'c =3D "adjacent";',=0A=
    laterSibling: 'c =3D "laterSibling";'=0A=
  },=0A=
=0A=
  patterns: {=0A=
    // combinators must be listed first=0A=
    // (and descendant needs to be last combinator)=0A=
    laterSibling: /^\s*~\s*/,=0A=
    child:        /^\s*>\s*/,=0A=
    adjacent:     /^\s*\+\s*/,=0A=
    descendant:   /^\s/,=0A=
=0A=
    // selectors follow=0A=
    tagName:      /^\s*(\*|[\w\-]+)(\b|$)?/,=0A=
    id:           /^#([\w\-\*]+)(\b|$)/,=0A=
    className:    /^\.([\w\-\*]+)(\b|$)/,=0A=
    pseudo:=0A=
/^:((first|last|nth|nth-last|only)(-child|-of-type)|empty|checked|(en|dis=
)abled|not)(\((.*?)\))?(\b|$|(?=3D\s|[:+~>]))/,=0A=
    attrPresence: /^\[([\w]+)\]/,=0A=
    attr:         =
/\[((?:[\w-]*:)?[\w-]+)\s*(?:([!^$*~|]?=3D)\s*((['"])([^\4]*?)\4|([^'"][^=
\]]*?)))?\]/=0A=
  },=0A=
=0A=
  // for Selector.match and Element#match=0A=
  assertions: {=0A=
    tagName: function(element, matches) {=0A=
      return matches[1].toUpperCase() =3D=3D =
element.tagName.toUpperCase();=0A=
    },=0A=
=0A=
    className: function(element, matches) {=0A=
      return Element.hasClassName(element, matches[1]);=0A=
    },=0A=
=0A=
    id: function(element, matches) {=0A=
      return element.id =3D=3D=3D matches[1];=0A=
    },=0A=
=0A=
    attrPresence: function(element, matches) {=0A=
      return Element.hasAttribute(element, matches[1]);=0A=
    },=0A=
=0A=
    attr: function(element, matches) {=0A=
      var nodeValue =3D Element.readAttribute(element, matches[1]);=0A=
      return nodeValue && Selector.operators[matches[2]](nodeValue, =
matches[5] || matches[6]);=0A=
    }=0A=
  },=0A=
=0A=
  handlers: {=0A=
    // UTILITY FUNCTIONS=0A=
    // joins two collections=0A=
    concat: function(a, b) {=0A=
      for (var i =3D 0, node; node =3D b[i]; i++)=0A=
        a.push(node);=0A=
      return a;=0A=
    },=0A=
=0A=
    // marks an array of nodes for counting=0A=
    mark: function(nodes) {=0A=
      var _true =3D Prototype.emptyFunction;=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node._countedByPrototype =3D _true;=0A=
      return nodes;=0A=
    },=0A=
=0A=
    unmark: function(nodes) {=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node._countedByPrototype =3D undefined;=0A=
      return nodes;=0A=
    },=0A=
=0A=
    // mark each child node with its position (for nth calls)=0A=
    // "ofType" flag indicates whether we're indexing for nth-of-type=0A=
    // rather than nth-child=0A=
    index: function(parentNode, reverse, ofType) {=0A=
      parentNode._countedByPrototype =3D Prototype.emptyFunction;=0A=
      if (reverse) {=0A=
        for (var nodes =3D parentNode.childNodes, i =3D nodes.length - =
1, j =3D 1; i >=3D 0; i--) {=0A=
          var node =3D nodes[i];=0A=
          if (node.nodeType =3D=3D 1 && (!ofType || =
node._countedByPrototype)) node.nodeIndex =3D j++;=0A=
        }=0A=
      } else {=0A=
        for (var i =3D 0, j =3D 1, nodes =3D parentNode.childNodes; node =
=3D nodes[i]; i++)=0A=
          if (node.nodeType =3D=3D 1 && (!ofType || =
node._countedByPrototype)) node.nodeIndex =3D j++;=0A=
      }=0A=
    },=0A=
=0A=
    // filters out duplicates and extends all nodes=0A=
    unique: function(nodes) {=0A=
      if (nodes.length =3D=3D 0) return nodes;=0A=
      var results =3D [], n;=0A=
      for (var i =3D 0, l =3D nodes.length; i < l; i++)=0A=
        if (!(n =3D nodes[i])._countedByPrototype) {=0A=
          n._countedByPrototype =3D Prototype.emptyFunction;=0A=
          results.push(Element.extend(n));=0A=
        }=0A=
      return Selector.handlers.unmark(results);=0A=
    },=0A=
=0A=
    // COMBINATOR FUNCTIONS=0A=
    descendant: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        h.concat(results, node.getElementsByTagName('*'));=0A=
      return results;=0A=
    },=0A=
=0A=
    child: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        for (var j =3D 0, child; child =3D node.childNodes[j]; j++)=0A=
          if (child.nodeType =3D=3D 1 && child.tagName !=3D '!') =
results.push(child);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    adjacent: function(nodes) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        var next =3D this.nextElementSibling(node);=0A=
        if (next) results.push(next);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    laterSibling: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        h.concat(results, Element.nextSiblings(node));=0A=
      return results;=0A=
    },=0A=
=0A=
    nextElementSibling: function(node) {=0A=
      while (node =3D node.nextSibling)=0A=
	      if (node.nodeType =3D=3D 1) return node;=0A=
      return null;=0A=
    },=0A=
=0A=
    previousElementSibling: function(node) {=0A=
      while (node =3D node.previousSibling)=0A=
        if (node.nodeType =3D=3D 1) return node;=0A=
      return null;=0A=
    },=0A=
=0A=
    // TOKEN FUNCTIONS=0A=
    tagName: function(nodes, root, tagName, combinator) {=0A=
      var uTagName =3D tagName.toUpperCase();=0A=
      var results =3D [], h =3D Selector.handlers;=0A=
      if (nodes) {=0A=
        if (combinator) {=0A=
          // fastlane for ordinary descendant combinators=0A=
          if (combinator =3D=3D "descendant") {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              h.concat(results, node.getElementsByTagName(tagName));=0A=
            return results;=0A=
          } else nodes =3D this[combinator](nodes);=0A=
          if (tagName =3D=3D "*") return nodes;=0A=
        }=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.tagName.toUpperCase() =3D=3D=3D uTagName) =
results.push(node);=0A=
        return results;=0A=
      } else return root.getElementsByTagName(tagName);=0A=
    },=0A=
=0A=
    id: function(nodes, root, id, combinator) {=0A=
      var targetNode =3D $(id), h =3D Selector.handlers;=0A=
      if (!targetNode) return [];=0A=
      if (!nodes && root =3D=3D document) return [targetNode];=0A=
      if (nodes) {=0A=
        if (combinator) {=0A=
          if (combinator =3D=3D 'child') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (targetNode.parentNode =3D=3D node) return [targetNode];=0A=
          } else if (combinator =3D=3D 'descendant') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (Element.descendantOf(targetNode, node)) return =
[targetNode];=0A=
          } else if (combinator =3D=3D 'adjacent') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (Selector.handlers.previousElementSibling(targetNode) =
=3D=3D node)=0A=
                return [targetNode];=0A=
          } else nodes =3D h[combinator](nodes);=0A=
        }=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node =3D=3D targetNode) return [targetNode];=0A=
        return [];=0A=
      }=0A=
      return (targetNode && Element.descendantOf(targetNode, root)) ? =
[targetNode] : [];=0A=
    },=0A=
=0A=
    className: function(nodes, root, className, combinator) {=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      return Selector.handlers.byClassName(nodes, root, className);=0A=
    },=0A=
=0A=
    byClassName: function(nodes, root, className) {=0A=
      if (!nodes) nodes =3D Selector.handlers.descendant([root]);=0A=
      var needle =3D ' ' + className + ' ';=0A=
      for (var i =3D 0, results =3D [], node, nodeClassName; node =3D =
nodes[i]; i++) {=0A=
        nodeClassName =3D node.className;=0A=
        if (nodeClassName.length =3D=3D 0) continue;=0A=
        if (nodeClassName =3D=3D className || (' ' + nodeClassName + ' =
').include(needle))=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    attrPresence: function(nodes, root, attr, combinator) {=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      var results =3D [];=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        if (Element.hasAttribute(node, attr)) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    attr: function(nodes, root, attr, value, operator, combinator) {=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      var handler =3D Selector.operators[operator], results =3D [];=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++) {=0A=
        var nodeValue =3D Element.readAttribute(node, attr);=0A=
        if (nodeValue =3D=3D=3D null) continue;=0A=
        if (handler(nodeValue, value)) results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    pseudo: function(nodes, name, value, root, combinator) {=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      return Selector.pseudos[name](nodes, value, root);=0A=
    }=0A=
  },=0A=
=0A=
  pseudos: {=0A=
    'first-child': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (Selector.handlers.previousElementSibling(node)) continue;=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
    'last-child': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (Selector.handlers.nextElementSibling(node)) continue;=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
    'only-child': function(nodes, value, root) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!h.previousElementSibling(node) && =
!h.nextElementSibling(node))=0A=
          results.push(node);=0A=
      return results;=0A=
    },=0A=
    'nth-child':        function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root);=0A=
    },=0A=
    'nth-last-child':   function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, true);=0A=
    },=0A=
    'nth-of-type':      function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, false, true);=0A=
    },=0A=
    'nth-last-of-type': function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, true, true);=0A=
    },=0A=
    'first-of-type':    function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, "1", root, false, true);=0A=
    },=0A=
    'last-of-type':     function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, "1", root, true, true);=0A=
    },=0A=
    'only-of-type':     function(nodes, formula, root) {=0A=
      var p =3D Selector.pseudos;=0A=
      return p['last-of-type'](p['first-of-type'](nodes, formula, root), =
formula, root);=0A=
    },=0A=
=0A=
    // handles the an+b logic=0A=
    getIndices: function(a, b, total) {=0A=
      if (a =3D=3D 0) return b > 0 ? [b] : [];=0A=
      return $R(1, total).inject([], function(memo, i) {=0A=
        if (0 =3D=3D (i - b) % a && (i - b) / a >=3D 0) memo.push(i);=0A=
        return memo;=0A=
      });=0A=
    },=0A=
=0A=
    // handles nth(-last)-child, nth(-last)-of-type, and =
(first|last)-of-type=0A=
    nth: function(nodes, formula, root, reverse, ofType) {=0A=
      if (nodes.length =3D=3D 0) return [];=0A=
      if (formula =3D=3D 'even') formula =3D '2n+0';=0A=
      if (formula =3D=3D 'odd')  formula =3D '2n+1';=0A=
      var h =3D Selector.handlers, results =3D [], indexed =3D [], m;=0A=
      h.mark(nodes);=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++) {=0A=
        if (!node.parentNode._countedByPrototype) {=0A=
          h.index(node.parentNode, reverse, ofType);=0A=
          indexed.push(node.parentNode);=0A=
        }=0A=
      }=0A=
      if (formula.match(/^\d+$/)) { // just a number=0A=
        formula =3D Number(formula);=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.nodeIndex =3D=3D formula) results.push(node);=0A=
      } else if (m =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // =
an+b=0A=
        if (m[1] =3D=3D "-") m[1] =3D -1;=0A=
        var a =3D m[1] ? Number(m[1]) : 1;=0A=
        var b =3D m[2] ? Number(m[2]) : 0;=0A=
        var indices =3D Selector.pseudos.getIndices(a, b, nodes.length);=0A=
        for (var i =3D 0, node, l =3D indices.length; node =3D nodes[i]; =
i++) {=0A=
          for (var j =3D 0; j < l; j++)=0A=
            if (node.nodeIndex =3D=3D indices[j]) results.push(node);=0A=
        }=0A=
      }=0A=
      h.unmark(nodes);=0A=
      h.unmark(indexed);=0A=
      return results;=0A=
    },=0A=
=0A=
    'empty': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        // IE treats comments as element nodes=0A=
        if (node.tagName =3D=3D '!' || (node.firstChild && =
!node.innerHTML.match(/^\s*$/))) continue;=0A=
        results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    'not': function(nodes, selector, root) {=0A=
      var h =3D Selector.handlers, selectorType, m;=0A=
      var exclusions =3D new Selector(selector).findElements(root);=0A=
      h.mark(exclusions);=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!node._countedByPrototype) results.push(node);=0A=
      h.unmark(exclusions);=0A=
      return results;=0A=
    },=0A=
=0A=
    'enabled': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!node.disabled) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    'disabled': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (node.disabled) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    'checked': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (node.checked) results.push(node);=0A=
      return results;=0A=
    }=0A=
  },=0A=
=0A=
  operators: {=0A=
    '=3D':  function(nv, v) { return nv =3D=3D v; },=0A=
    '!=3D': function(nv, v) { return nv !=3D v; },=0A=
    '^=3D': function(nv, v) { return nv.startsWith(v); },=0A=
    '$=3D': function(nv, v) { return nv.endsWith(v); },=0A=
    '*=3D': function(nv, v) { return nv.include(v); },=0A=
    '~=3D': function(nv, v) { return (' ' + nv + ' ').include(' ' + v + =
' '); },=0A=
    '|=3D': function(nv, v) { return ('-' + nv.toUpperCase() + =
'-').include('-' + v.toUpperCase() + '-'); }=0A=
  },=0A=
=0A=
  split: function(expression) {=0A=
    var expressions =3D [];=0A=
    expression.scan(/(([\w#:.~>+()\s-]+|\*|\[.*?\])+)\s*(,|$)/, =
function(m) {=0A=
      expressions.push(m[1].strip());=0A=
    });=0A=
    return expressions;=0A=
  },=0A=
=0A=
  matchElements: function(elements, expression) {=0A=
    var matches =3D $$(expression), h =3D Selector.handlers;=0A=
    h.mark(matches);=0A=
    for (var i =3D 0, results =3D [], element; element =3D elements[i]; =
i++)=0A=
      if (element._countedByPrototype) results.push(element);=0A=
    h.unmark(matches);=0A=
    return results;=0A=
  },=0A=
=0A=
  findElement: function(elements, expression, index) {=0A=
    if (Object.isNumber(expression)) {=0A=
      index =3D expression; expression =3D false;=0A=
    }=0A=
    return Selector.matchElements(elements, expression || '*')[index || =
0];=0A=
  },=0A=
=0A=
  findChildElements: function(element, expressions) {=0A=
    expressions =3D Selector.split(expressions.join(','));=0A=
    var results =3D [], h =3D Selector.handlers;=0A=
    for (var i =3D 0, l =3D expressions.length, selector; i < l; i++) {=0A=
      selector =3D new Selector(expressions[i].strip());=0A=
      h.concat(results, selector.findElements(element));=0A=
    }=0A=
    return (l > 1) ? h.unique(results) : results;=0A=
  }=0A=
});=0A=
=0A=
if (Prototype.Browser.IE) {=0A=
  Object.extend(Selector.handlers, {=0A=
    // IE returns comment nodes on getElementsByTagName("*").=0A=
    // Filter them out.=0A=
    concat: function(a, b) {=0A=
      for (var i =3D 0, node; node =3D b[i]; i++)=0A=
        if (node.tagName !=3D=3D "!") a.push(node);=0A=
      return a;=0A=
    },=0A=
=0A=
    // IE improperly serializes _countedByPrototype in (inner|outer)HTML.=0A=
    unmark: function(nodes) {=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node.removeAttribute('_countedByPrototype');=0A=
      return nodes;=0A=
    }=0A=
  });=0A=
}=0A=
=0A=
function $$() {=0A=
  return Selector.findChildElements(document, $A(arguments));=0A=
}=0A=
var Form =3D {=0A=
  reset: function(form) {=0A=
    $(form).reset();=0A=
    return form;=0A=
  },=0A=
=0A=
  serializeElements: function(elements, options) {=0A=
    if (typeof options !=3D 'object') options =3D { hash: !!options };=0A=
    else if (Object.isUndefined(options.hash)) options.hash =3D true;=0A=
    var key, value, submitted =3D false, submit =3D options.submit;=0A=
=0A=
    var data =3D elements.inject({ }, function(result, element) {=0A=
      if (!element.disabled && element.name) {=0A=
        key =3D element.name; value =3D $(element).getValue();=0A=
        if (value !=3D null && (element.type !=3D 'submit' || =
(!submitted &&=0A=
            submit !=3D=3D false && (!submit || key =3D=3D submit) && =
(submitted =3D true)))) {=0A=
          if (key in result) {=0A=
            // a key is already present; construct an array of values=0A=
            if (!Object.isArray(result[key])) result[key] =3D =
[result[key]];=0A=
            result[key].push(value);=0A=
          }=0A=
          else result[key] =3D value;=0A=
        }=0A=
      }=0A=
      return result;=0A=
    });=0A=
=0A=
    return options.hash ? data : Object.toQueryString(data);=0A=
  }=0A=
};=0A=
=0A=
Form.Methods =3D {=0A=
  serialize: function(form, options) {=0A=
    return Form.serializeElements(Form.getElements(form), options);=0A=
  },=0A=
=0A=
  getElements: function(form) {=0A=
    return $A($(form).getElementsByTagName('*')).inject([],=0A=
      function(elements, child) {=0A=
        if (Form.Element.Serializers[child.tagName.toLowerCase()])=0A=
          elements.push(Element.extend(child));=0A=
        return elements;=0A=
      }=0A=
    );=0A=
  },=0A=
=0A=
  getInputs: function(form, typeName, name) {=0A=
    form =3D $(form);=0A=
    var inputs =3D form.getElementsByTagName('input');=0A=
=0A=
    if (!typeName && !name) return $A(inputs).map(Element.extend);=0A=
=0A=
    for (var i =3D 0, matchingInputs =3D [], length =3D inputs.length; i =
< length; i++) {=0A=
      var input =3D inputs[i];=0A=
      if ((typeName && input.type !=3D typeName) || (name && input.name =
!=3D name))=0A=
        continue;=0A=
      matchingInputs.push(Element.extend(input));=0A=
    }=0A=
=0A=
    return matchingInputs;=0A=
  },=0A=
=0A=
  disable: function(form) {=0A=
    form =3D $(form);=0A=
    Form.getElements(form).invoke('disable');=0A=
    return form;=0A=
  },=0A=
=0A=
  enable: function(form) {=0A=
    form =3D $(form);=0A=
    Form.getElements(form).invoke('enable');=0A=
    return form;=0A=
  },=0A=
=0A=
  findFirstElement: function(form) {=0A=
    var elements =3D $(form).getElements().findAll(function(element) {=0A=
      return 'hidden' !=3D element.type && !element.disabled;=0A=
    });=0A=
    var firstByIndex =3D elements.findAll(function(element) {=0A=
      return element.hasAttribute('tabIndex') && element.tabIndex >=3D 0;=0A=
    }).sortBy(function(element) { return element.tabIndex }).first();=0A=
=0A=
    return firstByIndex ? firstByIndex : elements.find(function(element) =
{=0A=
      return ['input', 'select', =
'textarea'].include(element.tagName.toLowerCase());=0A=
    });=0A=
  },=0A=
=0A=
  focusFirstElement: function(form) {=0A=
    form =3D $(form);=0A=
    form.findFirstElement().activate();=0A=
    return form;=0A=
  },=0A=
=0A=
  request: function(form, options) {=0A=
    form =3D $(form), options =3D Object.clone(options || { });=0A=
=0A=
    var params =3D options.parameters, action =3D =
form.readAttribute('action') || '';=0A=
    if (action.blank()) action =3D window.location.href;=0A=
    options.parameters =3D form.serialize(true);=0A=
=0A=
    if (params) {=0A=
      if (Object.isString(params)) params =3D params.toQueryParams();=0A=
      Object.extend(options.parameters, params);=0A=
    }=0A=
=0A=
    if (form.hasAttribute('method') && !options.method)=0A=
      options.method =3D form.method;=0A=
=0A=
    return new Ajax.Request(action, options);=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Form.Element =3D {=0A=
  focus: function(element) {=0A=
    $(element).focus();=0A=
    return element;=0A=
  },=0A=
=0A=
  select: function(element) {=0A=
    $(element).select();=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
Form.Element.Methods =3D {=0A=
  serialize: function(element) {=0A=
    element =3D $(element);=0A=
    if (!element.disabled && element.name) {=0A=
      var value =3D element.getValue();=0A=
      if (value !=3D undefined) {=0A=
        var pair =3D { };=0A=
        pair[element.name] =3D value;=0A=
        return Object.toQueryString(pair);=0A=
      }=0A=
    }=0A=
    return '';=0A=
  },=0A=
=0A=
  getValue: function(element) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    return Form.Element.Serializers[method](element);=0A=
  },=0A=
=0A=
  setValue: function(element, value) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    Form.Element.Serializers[method](element, value);=0A=
    return element;=0A=
  },=0A=
=0A=
  clear: function(element) {=0A=
    $(element).value =3D '';=0A=
    return element;=0A=
  },=0A=
=0A=
  present: function(element) {=0A=
    return $(element).value !=3D '';=0A=
  },=0A=
=0A=
  activate: function(element) {=0A=
    element =3D $(element);=0A=
    try {=0A=
      element.focus();=0A=
      if (element.select && (element.tagName.toLowerCase() !=3D 'input' =
||=0A=
          !['button', 'reset', 'submit'].include(element.type)))=0A=
        element.select();=0A=
    } catch (e) { }=0A=
    return element;=0A=
  },=0A=
=0A=
  disable: function(element) {=0A=
    element =3D $(element);=0A=
    element.blur();=0A=
    element.disabled =3D true;=0A=
    return element;=0A=
  },=0A=
=0A=
  enable: function(element) {=0A=
    element =3D $(element);=0A=
    element.disabled =3D false;=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Field =3D Form.Element;=0A=
var $F =3D Form.Element.Methods.getValue;=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Form.Element.Serializers =3D {=0A=
  input: function(element, value) {=0A=
    switch (element.type.toLowerCase()) {=0A=
      case 'checkbox':=0A=
      case 'radio':=0A=
        return Form.Element.Serializers.inputSelector(element, value);=0A=
      default:=0A=
        return Form.Element.Serializers.textarea(element, value);=0A=
    }=0A=
  },=0A=
=0A=
  inputSelector: function(element, value) {=0A=
    if (Object.isUndefined(value)) return element.checked ? =
element.value : null;=0A=
    else element.checked =3D !!value;=0A=
  },=0A=
=0A=
  textarea: function(element, value) {=0A=
    if (Object.isUndefined(value)) return element.value;=0A=
    else element.value =3D value;=0A=
  },=0A=
=0A=
  select: function(element, index) {=0A=
    if (Object.isUndefined(index))=0A=
      return this[element.type =3D=3D 'select-one' ?=0A=
        'selectOne' : 'selectMany'](element);=0A=
    else {=0A=
      var opt, value, single =3D !Object.isArray(index);=0A=
      for (var i =3D 0, length =3D element.length; i < length; i++) {=0A=
        opt =3D element.options[i];=0A=
        value =3D this.optionValue(opt);=0A=
        if (single) {=0A=
          if (value =3D=3D index) {=0A=
            opt.selected =3D true;=0A=
            return;=0A=
          }=0A=
        }=0A=
        else opt.selected =3D index.include(value);=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  selectOne: function(element) {=0A=
    var index =3D element.selectedIndex;=0A=
    return index >=3D 0 ? this.optionValue(element.options[index]) : =
null;=0A=
  },=0A=
=0A=
  selectMany: function(element) {=0A=
    var values, length =3D element.length;=0A=
    if (!length) return null;=0A=
=0A=
    for (var i =3D 0, values =3D []; i < length; i++) {=0A=
      var opt =3D element.options[i];=0A=
      if (opt.selected) values.push(this.optionValue(opt));=0A=
    }=0A=
    return values;=0A=
  },=0A=
=0A=
  optionValue: function(opt) {=0A=
    // extend element because hasAttribute may not be native=0A=
    return Element.extend(opt).hasAttribute('value') ? opt.value : =
opt.text;=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Abstract.TimedObserver =3D Class.create(PeriodicalExecuter, {=0A=
  initialize: function($super, element, frequency, callback) {=0A=
    $super(callback, frequency);=0A=
    this.element   =3D $(element);=0A=
    this.lastValue =3D this.getValue();=0A=
  },=0A=
=0A=
  execute: function() {=0A=
    var value =3D this.getValue();=0A=
    if (Object.isString(this.lastValue) && Object.isString(value) ?=0A=
        this.lastValue !=3D value : String(this.lastValue) !=3D =
String(value)) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Form.Element.Observer =3D Class.create(Abstract.TimedObserver, {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.Observer =3D Class.create(Abstract.TimedObserver, {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Abstract.EventObserver =3D Class.create({=0A=
  initialize: function(element, callback) {=0A=
    this.element  =3D $(element);=0A=
    this.callback =3D callback;=0A=
=0A=
    this.lastValue =3D this.getValue();=0A=
    if (this.element.tagName.toLowerCase() =3D=3D 'form')=0A=
      this.registerFormCallbacks();=0A=
    else=0A=
      this.registerCallback(this.element);=0A=
  },=0A=
=0A=
  onElementEvent: function() {=0A=
    var value =3D this.getValue();=0A=
    if (this.lastValue !=3D value) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  },=0A=
=0A=
  registerFormCallbacks: function() {=0A=
    Form.getElements(this.element).each(this.registerCallback, this);=0A=
  },=0A=
=0A=
  registerCallback: function(element) {=0A=
    if (element.type) {=0A=
      switch (element.type.toLowerCase()) {=0A=
        case 'checkbox':=0A=
        case 'radio':=0A=
          Event.observe(element, 'click', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
        default:=0A=
          Event.observe(element, 'change', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
      }=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Form.Element.EventObserver =3D Class.create(Abstract.EventObserver, {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.EventObserver =3D Class.create(Abstract.EventObserver, {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
if (!window.Event) var Event =3D { };=0A=
=0A=
Object.extend(Event, {=0A=
  KEY_BACKSPACE: 8,=0A=
  KEY_TAB:       9,=0A=
  KEY_RETURN:   13,=0A=
  KEY_ESC:      27,=0A=
  KEY_LEFT:     37,=0A=
  KEY_UP:       38,=0A=
  KEY_RIGHT:    39,=0A=
  KEY_DOWN:     40,=0A=
  KEY_DELETE:   46,=0A=
  KEY_HOME:     36,=0A=
  KEY_END:      35,=0A=
  KEY_PAGEUP:   33,=0A=
  KEY_PAGEDOWN: 34,=0A=
  KEY_INSERT:   45,=0A=
=0A=
  cache: { },=0A=
=0A=
  relatedTarget: function(event) {=0A=
    var element;=0A=
    switch(event.type) {=0A=
      case 'mouseover': element =3D event.fromElement; break;=0A=
      case 'mouseout':  element =3D event.toElement;   break;=0A=
      default: return null;=0A=
    }=0A=
    return Element.extend(element);=0A=
  }=0A=
});=0A=
=0A=
Event.Methods =3D (function() {=0A=
  var isButton;=0A=
=0A=
  if (Prototype.Browser.IE) {=0A=
    var buttonMap =3D { 0: 1, 1: 4, 2: 2 };=0A=
    isButton =3D function(event, code) {=0A=
      return event.button =3D=3D buttonMap[code];=0A=
    };=0A=
=0A=
  } else if (Prototype.Browser.WebKit) {=0A=
    isButton =3D function(event, code) {=0A=
      switch (code) {=0A=
        case 0: return event.which =3D=3D 1 && !event.metaKey;=0A=
        case 1: return event.which =3D=3D 1 && event.metaKey;=0A=
        default: return false;=0A=
      }=0A=
    };=0A=
=0A=
  } else {=0A=
    isButton =3D function(event, code) {=0A=
      return event.which ? (event.which =3D=3D=3D code + 1) : =
(event.button =3D=3D=3D code);=0A=
    };=0A=
  }=0A=
=0A=
  return {=0A=
    isLeftClick:   function(event) { return isButton(event, 0) },=0A=
    isMiddleClick: function(event) { return isButton(event, 1) },=0A=
    isRightClick:  function(event) { return isButton(event, 2) },=0A=
=0A=
    element: function(event) {=0A=
      var node =3D Event.extend(event).target;=0A=
      return Element.extend(node.nodeType =3D=3D Node.TEXT_NODE ? =
node.parentNode : node);=0A=
    },=0A=
=0A=
    findElement: function(event, expression) {=0A=
      var element =3D Event.element(event);=0A=
      if (!expression) return element;=0A=
      var elements =3D [element].concat(element.ancestors());=0A=
      return Selector.findElement(elements, expression, 0);=0A=
    },=0A=
=0A=
    pointer: function(event) {=0A=
      return {=0A=
        x: event.pageX || (event.clientX +=0A=
          (document.documentElement.scrollLeft || =
document.body.scrollLeft)),=0A=
        y: event.pageY || (event.clientY +=0A=
          (document.documentElement.scrollTop || =
document.body.scrollTop))=0A=
      };=0A=
    },=0A=
=0A=
    pointerX: function(event) { return Event.pointer(event).x },=0A=
    pointerY: function(event) { return Event.pointer(event).y },=0A=
=0A=
    stop: function(event) {=0A=
      Event.extend(event);=0A=
      event.preventDefault();=0A=
      event.stopPropagation();=0A=
      event.stopped =3D true;=0A=
    }=0A=
  };=0A=
})();=0A=
=0A=
Event.extend =3D (function() {=0A=
  var methods =3D Object.keys(Event.Methods).inject({ }, function(m, =
name) {=0A=
    m[name] =3D Event.Methods[name].methodize();=0A=
    return m;=0A=
  });=0A=
=0A=
  if (Prototype.Browser.IE) {=0A=
    Object.extend(methods, {=0A=
      stopPropagation: function() { this.cancelBubble =3D true },=0A=
      preventDefault:  function() { this.returnValue =3D false },=0A=
      inspect: function() { return "[object Event]" }=0A=
    });=0A=
=0A=
    return function(event) {=0A=
      if (!event) return false;=0A=
      if (event._extendedByPrototype) return event;=0A=
=0A=
      event._extendedByPrototype =3D Prototype.emptyFunction;=0A=
      var pointer =3D Event.pointer(event);=0A=
      Object.extend(event, {=0A=
        target: event.srcElement,=0A=
        relatedTarget: Event.relatedTarget(event),=0A=
        pageX:  pointer.x,=0A=
        pageY:  pointer.y=0A=
      });=0A=
      return Object.extend(event, methods);=0A=
    };=0A=
=0A=
  } else {=0A=
    Event.prototype =3D Event.prototype || =
document.createEvent("HTMLEvents").__proto__;=0A=
    Object.extend(Event.prototype, methods);=0A=
    return Prototype.K;=0A=
  }=0A=
})();=0A=
=0A=
Object.extend(Event, (function() {=0A=
  var cache =3D Event.cache;=0A=
=0A=
  function getEventID(element) {=0A=
    if (element._prototypeEventID) return element._prototypeEventID[0];=0A=
    arguments.callee.id =3D arguments.callee.id || 1;=0A=
    return element._prototypeEventID =3D [++arguments.callee.id];=0A=
  }=0A=
=0A=
  function getDOMEventName(eventName) {=0A=
    if (eventName && eventName.include(':')) return "dataavailable";=0A=
    return eventName;=0A=
  }=0A=
=0A=
  function getCacheForID(id) {=0A=
    return cache[id] =3D cache[id] || { };=0A=
  }=0A=
=0A=
  function getWrappersForEventName(id, eventName) {=0A=
    var c =3D getCacheForID(id);=0A=
    return c[eventName] =3D c[eventName] || [];=0A=
  }=0A=
=0A=
  function createWrapper(element, eventName, handler) {=0A=
    var id =3D getEventID(element);=0A=
    var c =3D getWrappersForEventName(id, eventName);=0A=
    if (c.pluck("handler").include(handler)) return false;=0A=
=0A=
    var wrapper =3D function(event) {=0A=
      if (!Event || !Event.extend ||=0A=
        (event.eventName && event.eventName !=3D eventName))=0A=
          return false;=0A=
=0A=
      Event.extend(event);=0A=
      handler.call(element, event);=0A=
    };=0A=
=0A=
    wrapper.handler =3D handler;=0A=
    c.push(wrapper);=0A=
    return wrapper;=0A=
  }=0A=
=0A=
  function findWrapper(id, eventName, handler) {=0A=
    var c =3D getWrappersForEventName(id, eventName);=0A=
    return c.find(function(wrapper) { return wrapper.handler =3D=3D =
handler });=0A=
  }=0A=
=0A=
  function destroyWrapper(id, eventName, handler) {=0A=
    var c =3D getCacheForID(id);=0A=
    if (!c[eventName]) return false;=0A=
    c[eventName] =3D c[eventName].without(findWrapper(id, eventName, =
handler));=0A=
  }=0A=
=0A=
  function destroyCache() {=0A=
    for (var id in cache)=0A=
      for (var eventName in cache[id])=0A=
        cache[id][eventName] =3D null;=0A=
  }=0A=
=0A=
  if (window.attachEvent) {=0A=
    window.attachEvent("onunload", destroyCache);=0A=
  }=0A=
=0A=
  return {=0A=
    observe: function(element, eventName, handler) {=0A=
      element =3D $(element);=0A=
      var name =3D getDOMEventName(eventName);=0A=
=0A=
      var wrapper =3D createWrapper(element, eventName, handler);=0A=
      if (!wrapper) return element;=0A=
=0A=
      if (element.addEventListener) {=0A=
        element.addEventListener(name, wrapper, false);=0A=
      } else {=0A=
        element.attachEvent("on" + name, wrapper);=0A=
      }=0A=
=0A=
      return element;=0A=
    },=0A=
=0A=
    stopObserving: function(element, eventName, handler) {=0A=
      element =3D $(element);=0A=
      var id =3D getEventID(element), name =3D =
getDOMEventName(eventName);=0A=
=0A=
      if (!handler && eventName) {=0A=
        getWrappersForEventName(id, eventName).each(function(wrapper) {=0A=
          element.stopObserving(eventName, wrapper.handler);=0A=
        });=0A=
        return element;=0A=
=0A=
      } else if (!eventName) {=0A=
        Object.keys(getCacheForID(id)).each(function(eventName) {=0A=
          element.stopObserving(eventName);=0A=
        });=0A=
        return element;=0A=
      }=0A=
=0A=
      var wrapper =3D findWrapper(id, eventName, handler);=0A=
      if (!wrapper) return element;=0A=
=0A=
      if (element.removeEventListener) {=0A=
        element.removeEventListener(name, wrapper, false);=0A=
      } else {=0A=
        element.detachEvent("on" + name, wrapper);=0A=
      }=0A=
=0A=
      destroyWrapper(id, eventName, handler);=0A=
=0A=
      return element;=0A=
    },=0A=
=0A=
    fire: function(element, eventName, memo) {=0A=
      element =3D $(element);=0A=
      if (element =3D=3D document && document.createEvent && =
!element.dispatchEvent)=0A=
        element =3D document.documentElement;=0A=
=0A=
      var event;=0A=
      if (document.createEvent) {=0A=
        event =3D document.createEvent("HTMLEvents");=0A=
        event.initEvent("dataavailable", true, true);=0A=
      } else {=0A=
        event =3D document.createEventObject();=0A=
        event.eventType =3D "ondataavailable";=0A=
      }=0A=
=0A=
      event.eventName =3D eventName;=0A=
      event.memo =3D memo || { };=0A=
=0A=
      if (document.createEvent) {=0A=
        element.dispatchEvent(event);=0A=
      } else {=0A=
        element.fireEvent(event.eventType, event);=0A=
      }=0A=
=0A=
      return Event.extend(event);=0A=
    }=0A=
  };=0A=
})());=0A=
=0A=
Object.extend(Event, Event.Methods);=0A=
=0A=
Element.addMethods({=0A=
  fire:          Event.fire,=0A=
  observe:       Event.observe,=0A=
  stopObserving: Event.stopObserving=0A=
});=0A=
=0A=
Object.extend(document, {=0A=
  fire:          Element.Methods.fire.methodize(),=0A=
  observe:       Element.Methods.observe.methodize(),=0A=
  stopObserving: Element.Methods.stopObserving.methodize(),=0A=
  loaded:        false=0A=
});=0A=
=0A=
(function() {=0A=
  /* Support for the DOMContentLoaded event is based on work by Dan Webb,=0A=
     Matthias Miller, Dean Edwards and John Resig. */=0A=
=0A=
  var timer;=0A=
=0A=
  function fireContentLoadedEvent() {=0A=
    if (document.loaded) return;=0A=
    if (timer) window.clearInterval(timer);=0A=
    document.fire("dom:loaded");=0A=
    document.loaded =3D true;=0A=
  }=0A=
=0A=
  if (document.addEventListener) {=0A=
    if (Prototype.Browser.WebKit) {=0A=
      timer =3D window.setInterval(function() {=0A=
        if (/loaded|complete/.test(document.readyState))=0A=
          fireContentLoadedEvent();=0A=
      }, 0);=0A=
=0A=
      Event.observe(window, "load", fireContentLoadedEvent);=0A=
=0A=
    } else {=0A=
      document.addEventListener("DOMContentLoaded",=0A=
        fireContentLoadedEvent, false);=0A=
    }=0A=
=0A=
  } else {=0A=
    document.write("<script id=3D__onDOMContentLoaded defer =
src=3D//:><\/script>");=0A=
    $("__onDOMContentLoaded").onreadystatechange =3D function() {=0A=
      if (this.readyState =3D=3D "complete") {=0A=
        this.onreadystatechange =3D null;=0A=
        fireContentLoadedEvent();=0A=
      }=0A=
    };=0A=
  }=0A=
})();=0A=
/*------------------------------- DEPRECATED =
-------------------------------*/=0A=
=0A=
Hash.toQueryString =3D Object.toQueryString;=0A=
=0A=
var Toggle =3D { display: Element.toggle };=0A=
=0A=
Element.Methods.childOf =3D Element.Methods.descendantOf;=0A=
=0A=
var Insertion =3D {=0A=
  Before: function(element, content) {=0A=
    return Element.insert(element, {before:content});=0A=
  },=0A=
=0A=
  Top: function(element, content) {=0A=
    return Element.insert(element, {top:content});=0A=
  },=0A=
=0A=
  Bottom: function(element, content) {=0A=
    return Element.insert(element, {bottom:content});=0A=
  },=0A=
=0A=
  After: function(element, content) {=0A=
    return Element.insert(element, {after:content});=0A=
  }=0A=
};=0A=
=0A=
var $continue =3D new Error('"throw $continue" is deprecated, use =
"return" instead');=0A=
=0A=
// This should be moved to script.aculo.us; notice the deprecated methods=0A=
// further below, that map to the newer Element methods.=0A=
var Position =3D {=0A=
  // set to true if needed, warning: firefox performance problems=0A=
  // NOT neeeded for page scrolling, only if draggable contained in=0A=
  // scrollable elements=0A=
  includeScrollOffsets: false,=0A=
=0A=
  // must be called before calling withinIncludingScrolloffset, every =
time the=0A=
  // page is scrolled=0A=
  prepare: function() {=0A=
    this.deltaX =3D  window.pageXOffset=0A=
                || document.documentElement.scrollLeft=0A=
                || document.body.scrollLeft=0A=
                || 0;=0A=
    this.deltaY =3D  window.pageYOffset=0A=
                || document.documentElement.scrollTop=0A=
                || document.body.scrollTop=0A=
                || 0;=0A=
  },=0A=
=0A=
  // caches x/y coordinate pair to use with overlap=0A=
  within: function(element, x, y) {=0A=
    if (this.includeScrollOffsets)=0A=
      return this.withinIncludingScrolloffsets(element, x, y);=0A=
    this.xcomp =3D x;=0A=
    this.ycomp =3D y;=0A=
    this.offset =3D Element.cumulativeOffset(element);=0A=
=0A=
    return (y >=3D this.offset[1] &&=0A=
            y <  this.offset[1] + element.offsetHeight &&=0A=
            x >=3D this.offset[0] &&=0A=
            x <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  withinIncludingScrolloffsets: function(element, x, y) {=0A=
    var offsetcache =3D Element.cumulativeScrollOffset(element);=0A=
=0A=
    this.xcomp =3D x + offsetcache[0] - this.deltaX;=0A=
    this.ycomp =3D y + offsetcache[1] - this.deltaY;=0A=
    this.offset =3D Element.cumulativeOffset(element);=0A=
=0A=
    return (this.ycomp >=3D this.offset[1] &&=0A=
            this.ycomp <  this.offset[1] + element.offsetHeight &&=0A=
            this.xcomp >=3D this.offset[0] &&=0A=
            this.xcomp <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  // within must be called directly before=0A=
  overlap: function(mode, element) {=0A=
    if (!mode) return 0;=0A=
    if (mode =3D=3D 'vertical')=0A=
      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /=0A=
        element.offsetHeight;=0A=
    if (mode =3D=3D 'horizontal')=0A=
      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /=0A=
        element.offsetWidth;=0A=
  },=0A=
=0A=
  // Deprecation layer -- use newer Element methods now (1.5.2).=0A=
=0A=
  cumulativeOffset: Element.Methods.cumulativeOffset,=0A=
=0A=
  positionedOffset: Element.Methods.positionedOffset,=0A=
=0A=
  absolutize: function(element) {=0A=
    Position.prepare();=0A=
    return Element.absolutize(element);=0A=
  },=0A=
=0A=
  relativize: function(element) {=0A=
    Position.prepare();=0A=
    return Element.relativize(element);=0A=
  },=0A=
=0A=
  realOffset: Element.Methods.cumulativeScrollOffset,=0A=
=0A=
  offsetParent: Element.Methods.getOffsetParent,=0A=
=0A=
  page: Element.Methods.viewportOffset,=0A=
=0A=
  clone: function(source, target, options) {=0A=
    options =3D options || { };=0A=
    return Element.clonePosition(target, source, options);=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
if (!document.getElementsByClassName) document.getElementsByClassName =
=3D function(instanceMethods){=0A=
  function iter(name) {=0A=
    return name.blank() ? null : "[contains(concat(' ', @class, ' '), ' =
" + name + " ')]";=0A=
  }=0A=
=0A=
  instanceMethods.getElementsByClassName =3D =
Prototype.BrowserFeatures.XPath ?=0A=
  function(element, className) {=0A=
    className =3D className.toString().strip();=0A=
    var cond =3D /\s/.test(className) ? $w(className).map(iter).join('') =
: iter(className);=0A=
    return cond ? document._getElementsByXPath('.//*' + cond, element) : =
[];=0A=
  } : function(element, className) {=0A=
    className =3D className.toString().strip();=0A=
    var elements =3D [], classNames =3D (/\s/.test(className) ? =
$w(className) : null);=0A=
    if (!classNames && !className) return elements;=0A=
=0A=
    var nodes =3D $(element).getElementsByTagName('*');=0A=
    className =3D ' ' + className + ' ';=0A=
=0A=
    for (var i =3D 0, child, cn; child =3D nodes[i]; i++) {=0A=
      if (child.className && (cn =3D ' ' + child.className + ' ') && =
(cn.include(className) ||=0A=
          (classNames && classNames.all(function(name) {=0A=
            return !name.toString().blank() && cn.include(' ' + name + ' =
');=0A=
          }))))=0A=
        elements.push(Element.extend(child));=0A=
    }=0A=
    return elements;=0A=
  };=0A=
=0A=
  return function(className, parentElement) {=0A=
    return $(parentElement || =
document.body).getElementsByClassName(className);=0A=
  };=0A=
}(Element.Methods);=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.ClassNames =3D Class.create();=0A=
Element.ClassNames.prototype =3D {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
  },=0A=
=0A=
  _each: function(iterator) {=0A=
    this.element.className.split(/\s+/).select(function(name) {=0A=
      return name.length > 0;=0A=
    })._each(iterator);=0A=
  },=0A=
=0A=
  set: function(className) {=0A=
    this.element.className =3D className;=0A=
  },=0A=
=0A=
  add: function(classNameToAdd) {=0A=
    if (this.include(classNameToAdd)) return;=0A=
    this.set($A(this).concat(classNameToAdd).join(' '));=0A=
  },=0A=
=0A=
  remove: function(classNameToRemove) {=0A=
    if (!this.include(classNameToRemove)) return;=0A=
    this.set($A(this).without(classNameToRemove).join(' '));=0A=
  },=0A=
=0A=
  toString: function() {=0A=
    return $A(this).join(' ');=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Element.ClassNames.prototype, Enumerable);=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.addMethods();
------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://devimages.apple.com/global/scripts/lib/scriptaculous.js

// script.aculo.us scriptaculous.js v1.8.0, Tue Nov 06 15:01:40 +0300 =
2007=0A=
=0A=
// Copyright (c) 2005-2007 Thomas Fuchs (http://script.aculo.us, =
http://mir.aculo.us)=0A=
// =0A=
// Permission is hereby granted, free of charge, to any person obtaining=0A=
// a copy of this software and associated documentation files (the=0A=
// "Software"), to deal in the Software without restriction, including=0A=
// without limitation the rights to use, copy, modify, merge, publish,=0A=
// distribute, sublicense, and/or sell copies of the Software, and to=0A=
// permit persons to whom the Software is furnished to do so, subject to=0A=
// the following conditions:=0A=
// =0A=
// The above copyright notice and this permission notice shall be=0A=
// included in all copies or substantial portions of the Software.=0A=
//=0A=
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,=0A=
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF=0A=
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND=0A=
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE=0A=
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION=0A=
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION=0A=
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.=0A=
//=0A=
// For details, see the script.aculo.us web site: http://script.aculo.us/=0A=
=0A=
var Scriptaculous =3D {=0A=
  Version: '1.8.0',=0A=
  REQUIRED_PROTOTYPE: '1.6.0'=0A=
}=0A=
=0A=
var Builder =3D {=0A=
  NODEMAP: {=0A=
    AREA: 'map',=0A=
    CAPTION: 'table',=0A=
    COL: 'table',=0A=
    COLGROUP: 'table',=0A=
    LEGEND: 'fieldset',=0A=
    OPTGROUP: 'select',=0A=
    OPTION: 'select',=0A=
    PARAM: 'object',=0A=
    TBODY: 'table',=0A=
    TD: 'table',=0A=
    TFOOT: 'table',=0A=
    TH: 'table',=0A=
    THEAD: 'table',=0A=
    TR: 'table'=0A=
  },=0A=
  // note: For Firefox < 1.5, OPTION and OPTGROUP tags are currently =
broken,=0A=
  //       due to a Firefox bug=0A=
  node: function(elementName) {=0A=
    elementName =3D elementName.toUpperCase();=0A=
    =0A=
    // try innerHTML approach=0A=
    var parentTag =3D this.NODEMAP[elementName] || 'div';=0A=
    var parentElement =3D document.createElement(parentTag);=0A=
    try { // prevent IE "feature": http://dev.rubyonrails.org/ticket/2707=0A=
      parentElement.innerHTML =3D "<" + elementName + "></" + =
elementName + ">";=0A=
    } catch(e) {}=0A=
    var element =3D parentElement.firstChild || null;=0A=
      =0A=
    // see if browser added wrapping tags=0A=
    if(element && (element.tagName.toUpperCase() !=3D elementName))=0A=
      element =3D element.getElementsByTagName(elementName)[0];=0A=
    =0A=
    // fallback to createElement approach=0A=
    if(!element) element =3D document.createElement(elementName);=0A=
    =0A=
    // abort if nothing could be created=0A=
    if(!element) return;=0A=
=0A=
    // attributes (or text)=0A=
    if(arguments[1])=0A=
      if(this._isStringOrNumber(arguments[1]) ||=0A=
        (arguments[1] instanceof Array) ||=0A=
        arguments[1].tagName) {=0A=
          this._children(element, arguments[1]);=0A=
        } else {=0A=
          var attrs =3D this._attributes(arguments[1]);=0A=
          if(attrs.length) {=0A=
            try { // prevent IE "feature": =
http://dev.rubyonrails.org/ticket/2707=0A=
              parentElement.innerHTML =3D "<" +elementName + " " +=0A=
                attrs + "></" + elementName + ">";=0A=
            } catch(e) {}=0A=
            element =3D parentElement.firstChild || null;=0A=
            // workaround firefox 1.0.X bug=0A=
            if(!element) {=0A=
              element =3D document.createElement(elementName);=0A=
              for(attr in arguments[1]) =0A=
                element[attr =3D=3D 'class' ? 'className' : attr] =3D =
arguments[1][attr];=0A=
            }=0A=
            if(element.tagName.toUpperCase() !=3D elementName)=0A=
              element =3D =
parentElement.getElementsByTagName(elementName)[0];=0A=
          }=0A=
        } =0A=
=0A=
    // text, or array of children=0A=
    if(arguments[2])=0A=
      this._children(element, arguments[2]);=0A=
=0A=
     return element;=0A=
  },=0A=
  _text: function(text) {=0A=
     return document.createTextNode(text);=0A=
  },=0A=
=0A=
  ATTR_MAP: {=0A=
    'className': 'class',=0A=
    'htmlFor': 'for'=0A=
  },=0A=
=0A=
  _attributes: function(attributes) {=0A=
    var attrs =3D [];=0A=
    for(attribute in attributes)=0A=
      attrs.push((attribute in this.ATTR_MAP ? this.ATTR_MAP[attribute] =
: attribute) +=0A=
          '=3D"' + =
attributes[attribute].toString().escapeHTML().gsub(/"/,'&quot;') + '"');=0A=
    return attrs.join(" ");=0A=
  },=0A=
  _children: function(element, children) {=0A=
    if(children.tagName) {=0A=
      element.appendChild(children);=0A=
      return;=0A=
    }=0A=
    if(typeof children=3D=3D'object') { // array can hold nodes and text=0A=
      children.flatten().each( function(e) {=0A=
        if(typeof e=3D=3D'object')=0A=
          element.appendChild(e)=0A=
        else=0A=
          if(Builder._isStringOrNumber(e))=0A=
            element.appendChild(Builder._text(e));=0A=
      });=0A=
    } else=0A=
      if(Builder._isStringOrNumber(children))=0A=
        element.appendChild(Builder._text(children));=0A=
  },=0A=
  _isStringOrNumber: function(param) {=0A=
    return(typeof param=3D=3D'string' || typeof param=3D=3D'number');=0A=
  },=0A=
  build: function(html) {=0A=
    var element =3D this.node('div');=0A=
    $(element).update(html.strip());=0A=
    return element.down();=0A=
  },=0A=
  dump: function(scope) { =0A=
    if(typeof scope !=3D 'object' && typeof scope !=3D 'function') scope =
=3D window; //global scope =0A=
  =0A=
    var tags =3D ("A ABBR ACRONYM ADDRESS APPLET AREA B BASE BASEFONT =
BDO BIG BLOCKQUOTE BODY " +=0A=
      "BR BUTTON CAPTION CENTER CITE CODE COL COLGROUP DD DEL DFN DIR =
DIV DL DT EM FIELDSET " +=0A=
      "FONT FORM FRAME FRAMESET H1 H2 H3 H4 H5 H6 HEAD HR HTML I IFRAME =
IMG INPUT INS ISINDEX "+=0A=
      "KBD LABEL LEGEND LI LINK MAP MENU META NOFRAMES NOSCRIPT OBJECT =
OL OPTGROUP OPTION P "+=0A=
      "PARAM PRE Q S SAMP SCRIPT SELECT SMALL SPAN STRIKE STRONG STYLE =
SUB SUP TABLE TBODY TD "+=0A=
      "TEXTAREA TFOOT TH THEAD TITLE TR TT U UL VAR").split(/\s+/);=0A=
  =0A=
    tags.each( function(tag){ =0A=
      scope[tag] =3D function() { =0A=
        return Builder.node.apply(Builder, [tag].concat($A(arguments))); =
 =0A=
      } =0A=
    });=0A=
  }=0A=
}=0A=
=0A=
String.prototype.parseColor =3D function() {  =0A=
  var color =3D '#';=0A=
  if (this.slice(0,4) =3D=3D 'rgb(') {  =0A=
    var cols =3D this.slice(4,this.length-1).split(',');  =0A=
    var i=3D0; do { color +=3D parseInt(cols[i]).toColorPart() } while =
(++i<3);  =0A=
  } else {  =0A=
    if (this.slice(0,1) =3D=3D '#') {  =0A=
      if (this.length=3D=3D4) for(var i=3D1;i<4;i++) color +=3D =
(this.charAt(i) + this.charAt(i)).toLowerCase();  =0A=
      if (this.length=3D=3D7) color =3D this.toLowerCase();  =0A=
    }  =0A=
  }  =0A=
  return (color.length=3D=3D7 ? color : (arguments[0] || this));  =0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.collectTextNodes =3D function(element) {  =0A=
  return $A($(element).childNodes).collect( function(node) {=0A=
    return (node.nodeType=3D=3D3 ? node.nodeValue : =0A=
      (node.hasChildNodes() ? Element.collectTextNodes(node) : ''));=0A=
  }).flatten().join('');=0A=
};=0A=
=0A=
Element.collectTextNodesIgnoreClass =3D function(element, className) {  =0A=
  return $A($(element).childNodes).collect( function(node) {=0A=
    return (node.nodeType=3D=3D3 ? node.nodeValue : =0A=
      ((node.hasChildNodes() && !Element.hasClassName(node,className)) ? =0A=
        Element.collectTextNodesIgnoreClass(node, className) : ''));=0A=
  }).flatten().join('');=0A=
};=0A=
=0A=
Element.setContentZoom =3D function(element, percent) {=0A=
  element =3D $(element);  =0A=
  element.setStyle({fontSize: (percent/100) + 'em'});   =0A=
  if (Prototype.Browser.WebKit) window.scrollBy(0,0);=0A=
  return element;=0A=
};=0A=
=0A=
Element.getInlineOpacity =3D function(element){=0A=
  return $(element).style.opacity || '';=0A=
};=0A=
=0A=
Element.forceRerendering =3D function(element) {=0A=
  try {=0A=
    element =3D $(element);=0A=
    var n =3D document.createTextNode(' ');=0A=
    element.appendChild(n);=0A=
    element.removeChild(n);=0A=
  } catch(e) { }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Effect =3D {=0A=
  _elementDoesNotExistError: {=0A=
    name: 'ElementDoesNotExistError',=0A=
    message: 'The specified DOM element does not exist, but is required =
for this effect to operate'=0A=
  },=0A=
  Transitions: {=0A=
    linear: Prototype.K,=0A=
    sinoidal: function(pos) {=0A=
      return (-Math.cos(pos*Math.PI)/2) + 0.5;=0A=
    },=0A=
    reverse: function(pos) {=0A=
      return 1-pos;=0A=
    },=0A=
    flicker: function(pos) {=0A=
      var pos =3D ((-Math.cos(pos*Math.PI)/4) + 0.75) + Math.random()/4;=0A=
      return pos > 1 ? 1 : pos;=0A=
    },=0A=
    wobble: function(pos) {=0A=
      return (-Math.cos(pos*Math.PI*(9*pos))/2) + 0.5;=0A=
    },=0A=
    pulse: function(pos, pulses) { =0A=
      pulses =3D pulses || 5; =0A=
      return (=0A=
        ((pos % (1/pulses)) * pulses).round() =3D=3D 0 ? =0A=
              ((pos * pulses * 2) - (pos * pulses * 2).floor()) : =0A=
          1 - ((pos * pulses * 2) - (pos * pulses * 2).floor())=0A=
        );=0A=
    },=0A=
    spring: function(pos) { =0A=
      return 1 - (Math.cos(pos * 4.5 * Math.PI) * Math.exp(-pos * 6)); =0A=
    },=0A=
    none: function(pos) {=0A=
      return 0;=0A=
    },=0A=
    full: function(pos) {=0A=
      return 1;=0A=
    }=0A=
  },=0A=
  DefaultOptions: {=0A=
    duration:   1.0,   // seconds=0A=
    fps:        100,   // 100=3D assume 66fps max.=0A=
    sync:       false, // true for combining=0A=
    from:       0.0,=0A=
    to:         1.0,=0A=
    delay:      0.0,=0A=
    queue:      'parallel'=0A=
  },=0A=
  tagifyText: function(element) {=0A=
    var tagifyStyle =3D 'position:relative';=0A=
    if (Prototype.Browser.IE) tagifyStyle +=3D ';zoom:1';=0A=
    =0A=
    element =3D $(element);=0A=
    $A(element.childNodes).each( function(child) {=0A=
      if (child.nodeType=3D=3D3) {=0A=
        child.nodeValue.toArray().each( function(character) {=0A=
          element.insertBefore(=0A=
            new Element('span', {style: tagifyStyle}).update(=0A=
              character =3D=3D ' ' ? String.fromCharCode(160) : =
character), =0A=
              child);=0A=
        });=0A=
        Element.remove(child);=0A=
      }=0A=
    });=0A=
  },=0A=
  multiple: function(element, effect) {=0A=
    var elements;=0A=
    if (((typeof element =3D=3D 'object') || =0A=
        Object.isFunction(element)) && =0A=
       (element.length))=0A=
      elements =3D element;=0A=
    else=0A=
      elements =3D $(element).childNodes;=0A=
      =0A=
    var options =3D Object.extend({=0A=
      speed: 0.1,=0A=
      delay: 0.0=0A=
    }, arguments[2] || { });=0A=
    var masterDelay =3D options.delay;=0A=
=0A=
    $A(elements).each( function(element, index) {=0A=
      new effect(element, Object.extend(options, { delay: index * =
options.speed + masterDelay }));=0A=
    });=0A=
  },=0A=
  PAIRS: {=0A=
    'slide':  ['SlideDown','SlideUp'],=0A=
    'blind':  ['BlindDown','BlindUp'],=0A=
    'appear': ['Appear','Fade']=0A=
  },=0A=
  toggle: function(element, effect) {=0A=
    element =3D $(element);=0A=
    effect =3D (effect || 'appear').toLowerCase();=0A=
    var options =3D Object.extend({=0A=
      queue: { position:'end', scope:(element.id || 'global'), limit: 1 }=0A=
    }, arguments[2] || { });=0A=
    Effect[element.visible() ? =0A=
      Effect.PAIRS[effect][1] : Effect.PAIRS[effect][0]](element, =
options);=0A=
  }=0A=
};=0A=
=0A=
Effect.DefaultOptions.transition =3D Effect.Transitions.sinoidal;=0A=
=0A=
/* ------------- core effects ------------- */=0A=
=0A=
Effect.ScopedQueue =3D Class.create(Enumerable, {=0A=
  initialize: function() {=0A=
    this.effects  =3D [];=0A=
    this.interval =3D null;    =0A=
  },=0A=
  _each: function(iterator) {=0A=
    this.effects._each(iterator);=0A=
  },=0A=
  add: function(effect) {=0A=
    var timestamp =3D new Date().getTime();=0A=
    =0A=
    var position =3D Object.isString(effect.options.queue) ? =0A=
      effect.options.queue : effect.options.queue.position;=0A=
    =0A=
    switch(position) {=0A=
      case 'front':=0A=
        // move unstarted effects after this effect  =0A=
        this.effects.findAll(function(e){ return e.state=3D=3D'idle' =
}).each( function(e) {=0A=
            e.startOn  +=3D effect.finishOn;=0A=
            e.finishOn +=3D effect.finishOn;=0A=
          });=0A=
        break;=0A=
      case 'with-last':=0A=
        timestamp =3D this.effects.pluck('startOn').max() || timestamp;=0A=
        break;=0A=
      case 'end':=0A=
        // start effect after last queued effect has finished=0A=
        timestamp =3D this.effects.pluck('finishOn').max() || timestamp;=0A=
        break;=0A=
    }=0A=
    =0A=
    effect.startOn  +=3D timestamp;=0A=
    effect.finishOn +=3D timestamp;=0A=
=0A=
    if (!effect.options.queue.limit || (this.effects.length < =
effect.options.queue.limit))=0A=
      this.effects.push(effect);=0A=
    =0A=
    if (!this.interval)=0A=
      this.interval =3D setInterval(this.loop.bind(this), 15);=0A=
  },=0A=
  remove: function(effect) {=0A=
    this.effects =3D this.effects.reject(function(e) { return =
e=3D=3Deffect });=0A=
    if (this.effects.length =3D=3D 0) {=0A=
      clearInterval(this.interval);=0A=
      this.interval =3D null;=0A=
    }=0A=
  },=0A=
  loop: function() {=0A=
    var timePos =3D new Date().getTime();=0A=
    for(var i=3D0, len=3Dthis.effects.length;i<len;i++) =0A=
      this.effects[i] && this.effects[i].loop(timePos);=0A=
  }=0A=
});=0A=
=0A=
Effect.Queues =3D {=0A=
  instances: $H(),=0A=
  get: function(queueName) {=0A=
    if (!Object.isString(queueName)) return queueName;=0A=
    =0A=
    return this.instances.get(queueName) ||=0A=
      this.instances.set(queueName, new Effect.ScopedQueue());=0A=
  }=0A=
};=0A=
Effect.Queue =3D Effect.Queues.get('global');=0A=
=0A=
Effect.Base =3D Class.create({=0A=
  position: null,=0A=
  start: function(options) {=0A=
    function codeForEvent(options,eventName){=0A=
      return (=0A=
        (options[eventName+'Internal'] ? =
'this.options.'+eventName+'Internal(this);' : '') +=0A=
        (options[eventName] ? 'this.options.'+eventName+'(this);' : '')=0A=
      );=0A=
    }=0A=
    if (options && options.transition =3D=3D=3D false) =
options.transition =3D Effect.Transitions.linear;=0A=
    this.options      =3D Object.extend(Object.extend({ =
},Effect.DefaultOptions), options || { });=0A=
    this.currentFrame =3D 0;=0A=
    this.state        =3D 'idle';=0A=
    this.startOn      =3D this.options.delay*1000;=0A=
    this.finishOn     =3D this.startOn+(this.options.duration*1000);=0A=
    this.fromToDelta  =3D this.options.to-this.options.from;=0A=
    this.totalTime    =3D this.finishOn-this.startOn;=0A=
    this.totalFrames  =3D this.options.fps*this.options.duration;=0A=
    =0A=
    eval('this.render =3D function(pos){ '+=0A=
      'if (this.state=3D=3D"idle"){this.state=3D"running";'+=0A=
      codeForEvent(this.options,'beforeSetup')+=0A=
      (this.setup ? 'this.setup();':'')+ =0A=
      codeForEvent(this.options,'afterSetup')+=0A=
      '};if (this.state=3D=3D"running"){'+=0A=
      =
'pos=3Dthis.options.transition(pos)*'+this.fromToDelta+'+'+this.options.f=
rom+';'+=0A=
      'this.position=3Dpos;'+=0A=
      codeForEvent(this.options,'beforeUpdate')+=0A=
      (this.update ? 'this.update(pos);':'')+=0A=
      codeForEvent(this.options,'afterUpdate')+=0A=
      '}}');=0A=
    =0A=
    this.event('beforeStart');=0A=
    if (!this.options.sync)=0A=
      Effect.Queues.get(Object.isString(this.options.queue) ? =0A=
        'global' : this.options.queue.scope).add(this);=0A=
  },=0A=
  loop: function(timePos) {=0A=
    if (timePos >=3D this.startOn) {=0A=
      if (timePos >=3D this.finishOn) {=0A=
        this.render(1.0);=0A=
        this.cancel();=0A=
        this.event('beforeFinish');=0A=
        if (this.finish) this.finish(); =0A=
        this.event('afterFinish');=0A=
        return;  =0A=
      }=0A=
      var pos   =3D (timePos - this.startOn) / this.totalTime,=0A=
          frame =3D (pos * this.totalFrames).round();=0A=
      if (frame > this.currentFrame) {=0A=
        this.render(pos);=0A=
        this.currentFrame =3D frame;=0A=
      }=0A=
    }=0A=
  },=0A=
  cancel: function() {=0A=
    if (!this.options.sync)=0A=
      Effect.Queues.get(Object.isString(this.options.queue) ? =0A=
        'global' : this.options.queue.scope).remove(this);=0A=
    this.state =3D 'finished';=0A=
  },=0A=
  event: function(eventName) {=0A=
    if (this.options[eventName + 'Internal']) this.options[eventName + =
'Internal'](this);=0A=
    if (this.options[eventName]) this.options[eventName](this);=0A=
  },=0A=
  inspect: function() {=0A=
    var data =3D $H();=0A=
    for(property in this)=0A=
      if (!Object.isFunction(this[property])) data.set(property, =
this[property]);=0A=
    return '#<Effect:' + data.inspect() + ',options:' + =
$H(this.options).inspect() + '>';=0A=
  }=0A=
});=0A=
=0A=
Effect.Parallel =3D Class.create(Effect.Base, {=0A=
  initialize: function(effects) {=0A=
    this.effects =3D effects || [];=0A=
    this.start(arguments[1]);=0A=
  },=0A=
  update: function(position) {=0A=
    this.effects.invoke('render', position);=0A=
  },=0A=
  finish: function(position) {=0A=
    this.effects.each( function(effect) {=0A=
      effect.render(1.0);=0A=
      effect.cancel();=0A=
      effect.event('beforeFinish');=0A=
      if (effect.finish) effect.finish(position);=0A=
      effect.event('afterFinish');=0A=
    });=0A=
  }=0A=
});=0A=
=0A=
Effect.Tween =3D Class.create(Effect.Base, {=0A=
  initialize: function(object, from, to) {=0A=
    object =3D Object.isString(object) ? $(object) : object;=0A=
    var args =3D $A(arguments), method =3D args.last(), =0A=
      options =3D args.length =3D=3D 5 ? args[3] : null;=0A=
    this.method =3D Object.isFunction(method) ? method.bind(object) :=0A=
      Object.isFunction(object[method]) ? object[method].bind(object) : =0A=
      function(value) { object[method] =3D value };=0A=
    this.start(Object.extend({ from: from, to: to }, options || { }));=0A=
  },=0A=
  update: function(position) {=0A=
    this.method(position);=0A=
  }=0A=
});=0A=
=0A=
Effect.Event =3D Class.create(Effect.Base, {=0A=
  initialize: function() {=0A=
    this.start(Object.extend({ duration: 0 }, arguments[0] || { }));=0A=
  },=0A=
  update: Prototype.emptyFunction=0A=
});=0A=
=0A=
Effect.Opacity =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    // make this work on IE on elements without 'layout'=0A=
    if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))=0A=
      this.element.setStyle({zoom: 1});=0A=
    var options =3D Object.extend({=0A=
      from: this.element.getOpacity() || 0.0,=0A=
      to:   1.0=0A=
    }, arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setOpacity(position);=0A=
  }=0A=
});=0A=
=0A=
Effect.Move =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      x:    0,=0A=
      y:    0,=0A=
      mode: 'relative'=0A=
    }, arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    this.element.makePositioned();=0A=
    this.originalLeft =3D parseFloat(this.element.getStyle('left') || =
'0');=0A=
    this.originalTop  =3D parseFloat(this.element.getStyle('top')  || =
'0');=0A=
    if (this.options.mode =3D=3D 'absolute') {=0A=
      this.options.x =3D this.options.x - this.originalLeft;=0A=
      this.options.y =3D this.options.y - this.originalTop;=0A=
    }=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setStyle({=0A=
      left: (this.options.x  * position + this.originalLeft).round() + =
'px',=0A=
      top:  (this.options.y  * position + this.originalTop).round()  + =
'px'=0A=
    });=0A=
  }=0A=
});=0A=
=0A=
// for backwards compatibility=0A=
Effect.MoveBy =3D function(element, toTop, toLeft) {=0A=
  return new Effect.Move(element, =0A=
    Object.extend({ x: toLeft, y: toTop }, arguments[3] || { }));=0A=
};=0A=
=0A=
Effect.Scale =3D Class.create(Effect.Base, {=0A=
  initialize: function(element, percent) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      scaleX: true,=0A=
      scaleY: true,=0A=
      scaleContent: true,=0A=
      scaleFromCenter: false,=0A=
      scaleMode: 'box',        // 'box' or 'contents' or { } with =
provided values=0A=
      scaleFrom: 100.0,=0A=
      scaleTo:   percent=0A=
    }, arguments[2] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    this.restoreAfterFinish =3D this.options.restoreAfterFinish || false;=0A=
    this.elementPositioning =3D this.element.getStyle('position');=0A=
    =0A=
    this.originalStyle =3D { };=0A=
    ['top','left','width','height','fontSize'].each( function(k) {=0A=
      this.originalStyle[k] =3D this.element.style[k];=0A=
    }.bind(this));=0A=
      =0A=
    this.originalTop  =3D this.element.offsetTop;=0A=
    this.originalLeft =3D this.element.offsetLeft;=0A=
    =0A=
    var fontSize =3D this.element.getStyle('font-size') || '100%';=0A=
    ['em','px','%','pt'].each( function(fontSizeType) {=0A=
      if (fontSize.indexOf(fontSizeType)>0) {=0A=
        this.fontSize     =3D parseFloat(fontSize);=0A=
        this.fontSizeType =3D fontSizeType;=0A=
      }=0A=
    }.bind(this));=0A=
    =0A=
    this.factor =3D (this.options.scaleTo - this.options.scaleFrom)/100;=0A=
    =0A=
    this.dims =3D null;=0A=
    if (this.options.scaleMode=3D=3D'box')=0A=
      this.dims =3D [this.element.offsetHeight, =
this.element.offsetWidth];=0A=
    if (/^content/.test(this.options.scaleMode))=0A=
      this.dims =3D [this.element.scrollHeight, =
this.element.scrollWidth];=0A=
    if (!this.dims)=0A=
      this.dims =3D [this.options.scaleMode.originalHeight,=0A=
                   this.options.scaleMode.originalWidth];=0A=
  },=0A=
  update: function(position) {=0A=
    var currentScale =3D (this.options.scaleFrom/100.0) + (this.factor * =
position);=0A=
    if (this.options.scaleContent && this.fontSize)=0A=
      this.element.setStyle({fontSize: this.fontSize * currentScale + =
this.fontSizeType });=0A=
    this.setDimensions(this.dims[0] * currentScale, this.dims[1] * =
currentScale);=0A=
  },=0A=
  finish: function(position) {=0A=
    if (this.restoreAfterFinish) =
this.element.setStyle(this.originalStyle);=0A=
  },=0A=
  setDimensions: function(height, width) {=0A=
    var d =3D { };=0A=
    if (this.options.scaleX) d.width =3D width.round() + 'px';=0A=
    if (this.options.scaleY) d.height =3D height.round() + 'px';=0A=
    if (this.options.scaleFromCenter) {=0A=
      var topd  =3D (height - this.dims[0])/2;=0A=
      var leftd =3D (width  - this.dims[1])/2;=0A=
      if (this.elementPositioning =3D=3D 'absolute') {=0A=
        if (this.options.scaleY) d.top =3D this.originalTop-topd + 'px';=0A=
        if (this.options.scaleX) d.left =3D this.originalLeft-leftd + =
'px';=0A=
      } else {=0A=
        if (this.options.scaleY) d.top =3D -topd + 'px';=0A=
        if (this.options.scaleX) d.left =3D -leftd + 'px';=0A=
      }=0A=
    }=0A=
    this.element.setStyle(d);=0A=
  }=0A=
});=0A=
=0A=
Effect.Highlight =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({ startcolor: '#ffff99' }, =
arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    // Prevent executing on elements not in the layout flow=0A=
    if (this.element.getStyle('display')=3D=3D'none') { this.cancel(); =
return; }=0A=
    // Disable background image during the effect=0A=
    this.oldStyle =3D { };=0A=
    if (!this.options.keepBackgroundImage) {=0A=
      this.oldStyle.backgroundImage =3D =
this.element.getStyle('background-image');=0A=
      this.element.setStyle({backgroundImage: 'none'});=0A=
    }=0A=
    if (!this.options.endcolor)=0A=
      this.options.endcolor =3D =
this.element.getStyle('background-color').parseColor('#ffffff');=0A=
    if (!this.options.restorecolor)=0A=
      this.options.restorecolor =3D =
this.element.getStyle('background-color');=0A=
    // init color calculations=0A=
    this._base  =3D $R(0,2).map(function(i){ return =
parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16) }.bind(this));=0A=
    this._delta =3D $R(0,2).map(function(i){ return =
parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i] =
}.bind(this));=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setStyle({backgroundColor: =
$R(0,2).inject('#',function(m,v,i){=0A=
      return =
m+((this._base[i]+(this._delta[i]*position)).round().toColorPart()); =
}.bind(this)) });=0A=
  },=0A=
  finish: function() {=0A=
    this.element.setStyle(Object.extend(this.oldStyle, {=0A=
      backgroundColor: this.options.restorecolor=0A=
    }));=0A=
  }=0A=
});=0A=
=0A=
Effect.ScrollTo =3D function(element) {=0A=
  var options =3D arguments[1] || { },=0A=
    scrollOffsets =3D document.viewport.getScrollOffsets(),=0A=
    elementOffsets =3D $(element).cumulativeOffset(),=0A=
    max =3D (window.height || document.body.scrollHeight) - =
document.viewport.getHeight();  =0A=
=0A=
  if (options.offset) elementOffsets[1] +=3D options.offset;=0A=
=0A=
  return new Effect.Tween(null,=0A=
    scrollOffsets.top,=0A=
    elementOffsets[1] > max ? max : elementOffsets[1],=0A=
    options,=0A=
    function(p){ scrollTo(scrollOffsets.left, p.round()) }=0A=
  );=0A=
};=0A=
=0A=
/* ------------- combination effects ------------- */=0A=
=0A=
Effect.Fade =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  var options =3D Object.extend({=0A=
    from: element.getOpacity() || 1.0,=0A=
    to:   0.0,=0A=
    afterFinishInternal: function(effect) { =0A=
      if (effect.options.to!=3D0) return;=0A=
      effect.element.hide().setStyle({opacity: oldOpacity}); =0A=
    }=0A=
  }, arguments[1] || { });=0A=
  return new Effect.Opacity(element,options);=0A=
};=0A=
=0A=
Effect.Appear =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
  from: (element.getStyle('display') =3D=3D 'none' ? 0.0 : =
element.getOpacity() || 0.0),=0A=
  to:   1.0,=0A=
  // force Safari to render floated elements properly=0A=
  afterFinishInternal: function(effect) {=0A=
    effect.element.forceRerendering();=0A=
  },=0A=
  beforeSetup: function(effect) {=0A=
    effect.element.setOpacity(effect.options.from).show(); =0A=
  }}, arguments[1] || { });=0A=
  return new Effect.Opacity(element,options);=0A=
};=0A=
=0A=
Effect.Puff =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D { =0A=
    opacity: element.getInlineOpacity(), =0A=
    position: element.getStyle('position'),=0A=
    top:  element.style.top,=0A=
    left: element.style.left,=0A=
    width: element.style.width,=0A=
    height: element.style.height=0A=
  };=0A=
  return new Effect.Parallel(=0A=
   [ new Effect.Scale(element, 200, =0A=
      { sync: true, scaleFromCenter: true, scaleContent: true, =
restoreAfterFinish: true }), =0A=
     new Effect.Opacity(element, { sync: true, to: 0.0 } ) ], =0A=
     Object.extend({ duration: 1.0, =0A=
      beforeSetupInternal: function(effect) {=0A=
        Position.absolutize(effect.effects[0].element)=0A=
      },=0A=
      afterFinishInternal: function(effect) {=0A=
         effect.effects[0].element.hide().setStyle(oldStyle); }=0A=
     }, arguments[1] || { })=0A=
   );=0A=
};=0A=
=0A=
Effect.BlindUp =3D function(element) {=0A=
  element =3D $(element);=0A=
  element.makeClipping();=0A=
  return new Effect.Scale(element, 0,=0A=
    Object.extend({ scaleContent: false, =0A=
      scaleX: false, =0A=
      restoreAfterFinish: true,=0A=
      afterFinishInternal: function(effect) {=0A=
        effect.element.hide().undoClipping();=0A=
      } =0A=
    }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
Effect.BlindDown =3D function(element) {=0A=
  element =3D $(element);=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, 100, Object.extend({ =0A=
    scaleContent: false, =0A=
    scaleX: false,=0A=
    scaleFrom: 0,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makeClipping().setStyle({height: '0px'}).show(); =0A=
    },  =0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.undoClipping();=0A=
    }=0A=
  }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.SwitchOff =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  return new Effect.Appear(element, Object.extend({=0A=
    duration: 0.4,=0A=
    from: 0,=0A=
    transition: Effect.Transitions.flicker,=0A=
    afterFinishInternal: function(effect) {=0A=
      new Effect.Scale(effect.element, 1, { =0A=
        duration: 0.3, scaleFromCenter: true,=0A=
        scaleX: false, scaleContent: false, restoreAfterFinish: true,=0A=
        beforeSetup: function(effect) { =0A=
          effect.element.makePositioned().makeClipping();=0A=
        },=0A=
        afterFinishInternal: function(effect) {=0A=
          =
effect.element.hide().undoClipping().undoPositioned().setStyle({opacity: =
oldOpacity});=0A=
        }=0A=
      })=0A=
    }=0A=
  }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.DropOut =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    top: element.getStyle('top'),=0A=
    left: element.getStyle('left'),=0A=
    opacity: element.getInlineOpacity() };=0A=
  return new Effect.Parallel(=0A=
    [ new Effect.Move(element, {x: 0, y: 100, sync: true }), =0A=
      new Effect.Opacity(element, { sync: true, to: 0.0 }) ],=0A=
    Object.extend(=0A=
      { duration: 0.5,=0A=
        beforeSetup: function(effect) {=0A=
          effect.effects[0].element.makePositioned(); =0A=
        },=0A=
        afterFinishInternal: function(effect) {=0A=
          =
effect.effects[0].element.hide().undoPositioned().setStyle(oldStyle);=0A=
        } =0A=
      }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.Shake =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    distance: 20,=0A=
    duration: 0.5=0A=
  }, arguments[1] || {});=0A=
  var distance =3D parseFloat(options.distance);=0A=
  var split =3D parseFloat(options.duration) / 10.0;=0A=
  var oldStyle =3D {=0A=
    top: element.getStyle('top'),=0A=
    left: element.getStyle('left') };=0A=
    return new Effect.Move(element,=0A=
      { x:  distance, y: 0, duration: split, afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance, y: 0, duration: split, afterFinishInternal: =
function(effect) {=0A=
        effect.element.undoPositioned().setStyle(oldStyle);=0A=
  }}) }}) }}) }}) }}) }});=0A=
};=0A=
=0A=
Effect.SlideDown =3D function(element) {=0A=
  element =3D $(element).cleanWhitespace();=0A=
  // SlideDown need to have the content of the element wrapped in a =
container element with fixed height!=0A=
  var oldInnerBottom =3D element.down().getStyle('bottom');=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, 100, Object.extend({ =0A=
    scaleContent: false, =0A=
    scaleX: false, =0A=
    scaleFrom: window.opera ? 0 : 1,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makePositioned();=0A=
      effect.element.down().makePositioned();=0A=
      if (window.opera) effect.element.setStyle({top: ''});=0A=
      effect.element.makeClipping().setStyle({height: '0px'}).show(); =0A=
    },=0A=
    afterUpdateInternal: function(effect) {=0A=
      effect.element.down().setStyle({bottom:=0A=
        (effect.dims[0] - effect.element.clientHeight) + 'px' }); =0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.undoClipping().undoPositioned();=0A=
      effect.element.down().undoPositioned().setStyle({bottom: =
oldInnerBottom}); }=0A=
    }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
Effect.SlideUp =3D function(element) {=0A=
  element =3D $(element).cleanWhitespace();=0A=
  var oldInnerBottom =3D element.down().getStyle('bottom');=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, window.opera ? 0 : 1,=0A=
   Object.extend({ scaleContent: false, =0A=
    scaleX: false, =0A=
    scaleMode: 'box',=0A=
    scaleFrom: 100,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makePositioned();=0A=
      effect.element.down().makePositioned();=0A=
      if (window.opera) effect.element.setStyle({top: ''});=0A=
      effect.element.makeClipping().show();=0A=
    },  =0A=
    afterUpdateInternal: function(effect) {=0A=
      effect.element.down().setStyle({bottom:=0A=
        (effect.dims[0] - effect.element.clientHeight) + 'px' });=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.hide().undoClipping().undoPositioned();=0A=
      effect.element.down().undoPositioned().setStyle({bottom: =
oldInnerBottom});=0A=
    }=0A=
   }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
// Bug in opera makes the TD containing this element expand for a =
instance after finish =0A=
Effect.Squish =3D function(element) {=0A=
  return new Effect.Scale(element, window.opera ? 1 : 0, { =0A=
    restoreAfterFinish: true,=0A=
    beforeSetup: function(effect) {=0A=
      effect.element.makeClipping(); =0A=
    },  =0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.hide().undoClipping(); =0A=
    }=0A=
  });=0A=
};=0A=
=0A=
Effect.Grow =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    direction: 'center',=0A=
    moveTransition: Effect.Transitions.sinoidal,=0A=
    scaleTransition: Effect.Transitions.sinoidal,=0A=
    opacityTransition: Effect.Transitions.full=0A=
  }, arguments[1] || { });=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    height: element.style.height,=0A=
    width: element.style.width,=0A=
    opacity: element.getInlineOpacity() };=0A=
=0A=
  var dims =3D element.getDimensions();    =0A=
  var initialMoveX, initialMoveY;=0A=
  var moveX, moveY;=0A=
  =0A=
  switch (options.direction) {=0A=
    case 'top-left':=0A=
      initialMoveX =3D initialMoveY =3D moveX =3D moveY =3D 0; =0A=
      break;=0A=
    case 'top-right':=0A=
      initialMoveX =3D dims.width;=0A=
      initialMoveY =3D moveY =3D 0;=0A=
      moveX =3D -dims.width;=0A=
      break;=0A=
    case 'bottom-left':=0A=
      initialMoveX =3D moveX =3D 0;=0A=
      initialMoveY =3D dims.height;=0A=
      moveY =3D -dims.height;=0A=
      break;=0A=
    case 'bottom-right':=0A=
      initialMoveX =3D dims.width;=0A=
      initialMoveY =3D dims.height;=0A=
      moveX =3D -dims.width;=0A=
      moveY =3D -dims.height;=0A=
      break;=0A=
    case 'center':=0A=
      initialMoveX =3D dims.width / 2;=0A=
      initialMoveY =3D dims.height / 2;=0A=
      moveX =3D -dims.width / 2;=0A=
      moveY =3D -dims.height / 2;=0A=
      break;=0A=
  }=0A=
  =0A=
  return new Effect.Move(element, {=0A=
    x: initialMoveX,=0A=
    y: initialMoveY,=0A=
    duration: 0.01, =0A=
    beforeSetup: function(effect) {=0A=
      effect.element.hide().makeClipping().makePositioned();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      new Effect.Parallel(=0A=
        [ new Effect.Opacity(effect.element, { sync: true, to: 1.0, =
from: 0.0, transition: options.opacityTransition }),=0A=
          new Effect.Move(effect.element, { x: moveX, y: moveY, sync: =
true, transition: options.moveTransition }),=0A=
          new Effect.Scale(effect.element, 100, {=0A=
            scaleMode: { originalHeight: dims.height, originalWidth: =
dims.width }, =0A=
            sync: true, scaleFrom: window.opera ? 1 : 0, transition: =
options.scaleTransition, restoreAfterFinish: true})=0A=
        ], Object.extend({=0A=
             beforeSetup: function(effect) {=0A=
               effect.effects[0].element.setStyle({height: =
'0px'}).show(); =0A=
             },=0A=
             afterFinishInternal: function(effect) {=0A=
               =
effect.effects[0].element.undoClipping().undoPositioned().setStyle(oldSty=
le); =0A=
             }=0A=
           }, options)=0A=
      )=0A=
    }=0A=
  });=0A=
};=0A=
=0A=
Effect.Shrink =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    direction: 'center',=0A=
    moveTransition: Effect.Transitions.sinoidal,=0A=
    scaleTransition: Effect.Transitions.sinoidal,=0A=
    opacityTransition: Effect.Transitions.none=0A=
  }, arguments[1] || { });=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    height: element.style.height,=0A=
    width: element.style.width,=0A=
    opacity: element.getInlineOpacity() };=0A=
=0A=
  var dims =3D element.getDimensions();=0A=
  var moveX, moveY;=0A=
  =0A=
  switch (options.direction) {=0A=
    case 'top-left':=0A=
      moveX =3D moveY =3D 0;=0A=
      break;=0A=
    case 'top-right':=0A=
      moveX =3D dims.width;=0A=
      moveY =3D 0;=0A=
      break;=0A=
    case 'bottom-left':=0A=
      moveX =3D 0;=0A=
      moveY =3D dims.height;=0A=
      break;=0A=
    case 'bottom-right':=0A=
      moveX =3D dims.width;=0A=
      moveY =3D dims.height;=0A=
      break;=0A=
    case 'center':  =0A=
      moveX =3D dims.width / 2;=0A=
      moveY =3D dims.height / 2;=0A=
      break;=0A=
  }=0A=
  =0A=
  return new Effect.Parallel(=0A=
    [ new Effect.Opacity(element, { sync: true, to: 0.0, from: 1.0, =
transition: options.opacityTransition }),=0A=
      new Effect.Scale(element, window.opera ? 1 : 0, { sync: true, =
transition: options.scaleTransition, restoreAfterFinish: true}),=0A=
      new Effect.Move(element, { x: moveX, y: moveY, sync: true, =
transition: options.moveTransition })=0A=
    ], Object.extend({            =0A=
         beforeStartInternal: function(effect) {=0A=
           effect.effects[0].element.makePositioned().makeClipping(); =0A=
         },=0A=
         afterFinishInternal: function(effect) {=0A=
           =
effect.effects[0].element.hide().undoClipping().undoPositioned().setStyle=
(oldStyle); }=0A=
       }, options)=0A=
  );=0A=
};=0A=
=0A=
Effect.Pulsate =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options    =3D arguments[1] || { };=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  var transition =3D options.transition || Effect.Transitions.sinoidal;=0A=
  var reverser   =3D function(pos){ return =
transition(1-Effect.Transitions.pulse(pos, options.pulses)) };=0A=
  reverser.bind(transition);=0A=
  return new Effect.Opacity(element, =0A=
    Object.extend(Object.extend({  duration: 2.0, from: 0,=0A=
      afterFinishInternal: function(effect) { =
effect.element.setStyle({opacity: oldOpacity}); }=0A=
    }, options), {transition: reverser}));=0A=
};=0A=
=0A=
Effect.Fold =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    width: element.style.width,=0A=
    height: element.style.height };=0A=
  element.makeClipping();=0A=
  return new Effect.Scale(element, 5, Object.extend({   =0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    afterFinishInternal: function(effect) {=0A=
    new Effect.Scale(element, 1, { =0A=
      scaleContent: false, =0A=
      scaleY: false,=0A=
      afterFinishInternal: function(effect) {=0A=
        effect.element.hide().undoClipping().setStyle(oldStyle);=0A=
      } });=0A=
  }}, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.Morph =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      style: { }=0A=
    }, arguments[1] || { });=0A=
    =0A=
    if (!Object.isString(options.style)) this.style =3D =
$H(options.style);=0A=
    else {=0A=
      if (options.style.include(':'))=0A=
        this.style =3D options.style.parseStyle();=0A=
      else {=0A=
        this.element.addClassName(options.style);=0A=
        this.style =3D $H(this.element.getStyles());=0A=
        this.element.removeClassName(options.style);=0A=
        var css =3D this.element.getStyles();=0A=
        this.style =3D this.style.reject(function(style) {=0A=
          return style.value =3D=3D css[style.key];=0A=
        });=0A=
        options.afterFinishInternal =3D function(effect) {=0A=
          effect.element.addClassName(effect.options.style);=0A=
          effect.transforms.each(function(transform) {=0A=
            effect.element.style[transform.style] =3D '';=0A=
          });=0A=
        }=0A=
      }=0A=
    }=0A=
    this.start(options);=0A=
  },=0A=
  =0A=
  setup: function(){=0A=
    function parseColor(color){=0A=
      if (!color || ['rgba(0, 0, 0, 0)','transparent'].include(color)) =
color =3D '#ffffff';=0A=
      color =3D color.parseColor();=0A=
      return $R(0,2).map(function(i){=0A=
        return parseInt( color.slice(i*2+1,i*2+3), 16 ) =0A=
      });=0A=
    }=0A=
    this.transforms =3D this.style.map(function(pair){=0A=
      var property =3D pair[0], value =3D pair[1], unit =3D null;=0A=
=0A=
      if (value.parseColor('#zzzzzz') !=3D '#zzzzzz') {=0A=
        value =3D value.parseColor();=0A=
        unit  =3D 'color';=0A=
      } else if (property =3D=3D 'opacity') {=0A=
        value =3D parseFloat(value);=0A=
        if (Prototype.Browser.IE && =
(!this.element.currentStyle.hasLayout))=0A=
          this.element.setStyle({zoom: 1});=0A=
      } else if (Element.CSS_LENGTH.test(value)) {=0A=
          var components =3D value.match(/^([\+\-]?[0-9\.]+)(.*)$/);=0A=
          value =3D parseFloat(components[1]);=0A=
          unit =3D (components.length =3D=3D 3) ? components[2] : null;=0A=
      }=0A=
=0A=
      var originalValue =3D this.element.getStyle(property);=0A=
      return { =0A=
        style: property.camelize(), =0A=
        originalValue: unit=3D=3D'color' ? parseColor(originalValue) : =
parseFloat(originalValue || 0), =0A=
        targetValue: unit=3D=3D'color' ? parseColor(value) : value,=0A=
        unit: unit=0A=
      };=0A=
    }.bind(this)).reject(function(transform){=0A=
      return (=0A=
        (transform.originalValue =3D=3D transform.targetValue) ||=0A=
        (=0A=
          transform.unit !=3D 'color' &&=0A=
          (isNaN(transform.originalValue) || =
isNaN(transform.targetValue))=0A=
        )=0A=
      )=0A=
    });=0A=
  },=0A=
  update: function(position) {=0A=
    var style =3D { }, transform, i =3D this.transforms.length;=0A=
    while(i--)=0A=
      style[(transform =3D this.transforms[i]).style] =3D =0A=
        transform.unit=3D=3D'color' ? '#'+=0A=
          (Math.round(transform.originalValue[0]+=0A=
            =
(transform.targetValue[0]-transform.originalValue[0])*position)).toColorP=
art() +=0A=
          (Math.round(transform.originalValue[1]+=0A=
            =
(transform.targetValue[1]-transform.originalValue[1])*position)).toColorP=
art() +=0A=
          (Math.round(transform.originalValue[2]+=0A=
            =
(transform.targetValue[2]-transform.originalValue[2])*position)).toColorP=
art() :=0A=
        (transform.originalValue +=0A=
          (transform.targetValue - transform.originalValue) * =
position).toFixed(3) + =0A=
            (transform.unit =3D=3D=3D null ? '' : transform.unit);=0A=
    this.element.setStyle(style, true);=0A=
  }=0A=
});=0A=
=0A=
Effect.Transform =3D Class.create({=0A=
  initialize: function(tracks){=0A=
    this.tracks  =3D [];=0A=
    this.options =3D arguments[1] || { };=0A=
    this.addTracks(tracks);=0A=
  },=0A=
  addTracks: function(tracks){=0A=
    tracks.each(function(track){=0A=
      track =3D $H(track);=0A=
      var data =3D track.values().first();=0A=
      this.tracks.push($H({=0A=
        ids:     track.keys().first(),=0A=
        effect:  Effect.Morph,=0A=
        options: { style: data }=0A=
      }));=0A=
    }.bind(this));=0A=
    return this;=0A=
  },=0A=
  play: function(){=0A=
    return new Effect.Parallel(=0A=
      this.tracks.map(function(track){=0A=
        var ids =3D track.get('ids'), effect =3D track.get('effect'), =
options =3D track.get('options');=0A=
        var elements =3D [$(ids) || $$(ids)].flatten();=0A=
        return elements.map(function(e){ return new effect(e, =
Object.extend({ sync:true }, options)) });=0A=
      }).flatten(),=0A=
      this.options=0A=
    );=0A=
  }=0A=
});=0A=
=0A=
Element.CSS_PROPERTIES =3D $w(=0A=
  'backgroundColor backgroundPosition borderBottomColor =
borderBottomStyle ' + =0A=
  'borderBottomWidth borderLeftColor borderLeftStyle borderLeftWidth ' +=0A=
  'borderRightColor borderRightStyle borderRightWidth borderSpacing ' +=0A=
  'borderTopColor borderTopStyle borderTopWidth bottom clip color ' +=0A=
  'fontSize fontWeight height left letterSpacing lineHeight ' +=0A=
  'marginBottom marginLeft marginRight marginTop markerOffset maxHeight =
'+=0A=
  'maxWidth minHeight minWidth opacity outlineColor outlineOffset ' +=0A=
  'outlineWidth paddingBottom paddingLeft paddingRight paddingTop ' +=0A=
  'right textIndent top width wordSpacing zIndex');=0A=
  =0A=
Element.CSS_LENGTH =3D =
/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;=0A=
=0A=
String.__parseStyleElement =3D document.createElement('div');=0A=
String.prototype.parseStyle =3D function(){=0A=
  var style, styleRules =3D $H();=0A=
  if (Prototype.Browser.WebKit)=0A=
    style =3D new Element('div',{style:this}).style;=0A=
  else {=0A=
    String.__parseStyleElement.innerHTML =3D '<div style=3D"' + this + =
'"></div>';=0A=
    style =3D String.__parseStyleElement.childNodes[0].style;=0A=
  }=0A=
  =0A=
  Element.CSS_PROPERTIES.each(function(property){=0A=
    if (style[property]) styleRules.set(property, style[property]); =0A=
  });=0A=
  =0A=
  if (Prototype.Browser.IE && this.include('opacity'))=0A=
    styleRules.set('opacity', =
this.match(/opacity:\s*((?:0|1)?(?:\.\d*)?)/)[1]);=0A=
=0A=
  return styleRules;=0A=
};=0A=
=0A=
if (document.defaultView && document.defaultView.getComputedStyle) {=0A=
  Element.getStyles =3D function(element) {=0A=
    var css =3D document.defaultView.getComputedStyle($(element), null);=0A=
    return Element.CSS_PROPERTIES.inject({ }, function(styles, property) =
{=0A=
      styles[property] =3D css[property];=0A=
      return styles;=0A=
    });=0A=
  };=0A=
} else {=0A=
  Element.getStyles =3D function(element) {=0A=
    element =3D $(element);=0A=
    var css =3D element.currentStyle, styles;=0A=
    styles =3D Element.CSS_PROPERTIES.inject({ }, function(hash, =
property) {=0A=
      hash.set(property, css[property]);=0A=
      return hash;=0A=
    });=0A=
    if (!styles.opacity) styles.set('opacity', element.getOpacity());=0A=
    return styles;=0A=
  };=0A=
};=0A=
=0A=
Effect.Methods =3D {=0A=
  morph: function(element, style) {=0A=
    element =3D $(element);=0A=
    new Effect.Morph(element, Object.extend({ style: style }, =
arguments[2] || { }));=0A=
    return element;=0A=
  },=0A=
  visualEffect: function(element, effect, options) {=0A=
    element =3D $(element)=0A=
    var s =3D effect.dasherize().camelize(), klass =3D =
s.charAt(0).toUpperCase() + s.substring(1);=0A=
    new Effect[klass](element, options);=0A=
    return element;=0A=
  },=0A=
  highlight: function(element, options) {=0A=
    element =3D $(element);=0A=
    new Effect.Highlight(element, options);=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
$w('fade appear grow shrink fold blindUp blindDown slideUp slideDown '+=0A=
  'pulsate shake puff squish switchOff dropOut').each(=0A=
  function(effect) { =0A=
    Effect.Methods[effect] =3D function(element, options){=0A=
      element =3D $(element);=0A=
      Effect[effect.charAt(0).toUpperCase() + =
effect.substring(1)](element, options);=0A=
      return element;=0A=
    }=0A=
  }=0A=
);=0A=
=0A=
$w('getInlineOpacity forceRerendering setContentZoom collectTextNodes =
collectTextNodesIgnoreClass getStyles').each( =0A=
  function(f) { Effect.Methods[f] =3D Element[f]; }=0A=
);=0A=
=0A=
Element.addMethods(Effect.Methods);=0A=
=0A=
if(typeof Effect =3D=3D 'undefined')=0A=
  throw("controls.js requires including script.aculo.us' effects.js =
library");=0A=
=0A=
var Autocompleter =3D { }=0A=
Autocompleter.Base =3D Class.create({=0A=
  baseInitialize: function(element, update, options) {=0A=
    element          =3D $(element)=0A=
    this.element     =3D element; =0A=
    this.update      =3D $(update);  =0A=
    this.hasFocus    =3D false; =0A=
    this.changed     =3D false; =0A=
    this.active      =3D false; =0A=
    this.index       =3D 0;     =0A=
    this.entryCount  =3D 0;=0A=
    this.oldElementValue =3D this.element.value;=0A=
=0A=
    if(this.setOptions)=0A=
      this.setOptions(options);=0A=
    else=0A=
      this.options =3D options || { };=0A=
=0A=
    this.options.paramName    =3D this.options.paramName || =
this.element.name;=0A=
    this.options.tokens       =3D this.options.tokens || [];=0A=
    this.options.frequency    =3D this.options.frequency || 0.4;=0A=
    this.options.minChars     =3D this.options.minChars || 1;=0A=
    this.options.onShow       =3D this.options.onShow || =0A=
      function(element, update){ =0A=
        if(!update.style.position || =
update.style.position=3D=3D'absolute') {=0A=
          update.style.position =3D 'absolute';=0A=
          Position.clone(element, update, {=0A=
            setHeight: false, =0A=
            offsetTop: element.offsetHeight=0A=
          });=0A=
        }=0A=
        Effect.Appear(update,{duration:0.15});=0A=
      };=0A=
    this.options.onHide =3D this.options.onHide || =0A=
      function(element, update){ new Effect.Fade(update,{duration:0.15}) =
};=0A=
=0A=
    if(typeof(this.options.tokens) =3D=3D 'string') =0A=
      this.options.tokens =3D new Array(this.options.tokens);=0A=
    // Force carriage returns as token delimiters anyway=0A=
    if (!this.options.tokens.include('\n'))=0A=
      this.options.tokens.push('\n');=0A=
=0A=
    this.observer =3D null;=0A=
    =0A=
    this.element.setAttribute('autocomplete','off');=0A=
=0A=
    Element.hide(this.update);=0A=
=0A=
    Event.observe(this.element, 'blur', =
this.onBlur.bindAsEventListener(this));=0A=
    Event.observe(this.element, 'keypress', =
this.onKeyPress.bindAsEventListener(this));=0A=
  },=0A=
=0A=
  show: function() {=0A=
    if(Element.getStyle(this.update, 'display')=3D=3D'none') =
this.options.onShow(this.element, this.update);=0A=
    if(!this.iefix && =0A=
      (Prototype.Browser.IE) &&=0A=
      (Element.getStyle(this.update, 'position')=3D=3D'absolute')) {=0A=
      new Insertion.After(this.update, =0A=
       '<iframe id=3D"' + this.update.id + '_iefix" '+=0A=
       =
'style=3D"display:none;position:absolute;filter:progid:DXImageTransform.M=
icrosoft.Alpha(opacity=3D0);" ' +=0A=
       'src=3D"javascript:false;" frameborder=3D"0" =
scrolling=3D"no"></iframe>');=0A=
      this.iefix =3D $(this.update.id+'_iefix');=0A=
    }=0A=
    if(this.iefix) setTimeout(this.fixIEOverlapping.bind(this), 50);=0A=
  },=0A=
  =0A=
  fixIEOverlapping: function() {=0A=
    Position.clone(this.update, this.iefix, =
{setTop:(!this.update.style.height)});=0A=
    this.iefix.style.zIndex =3D 1;=0A=
    this.update.style.zIndex =3D 2;=0A=
    Element.show(this.iefix);=0A=
  },=0A=
=0A=
  hide: function() {=0A=
    this.stopIndicator();=0A=
    if(Element.getStyle(this.update, 'display')!=3D'none') =
this.options.onHide(this.element, this.update);=0A=
    if(this.iefix) Element.hide(this.iefix);=0A=
  },=0A=
=0A=
  startIndicator: function() {=0A=
    if(this.options.indicator) Element.show(this.options.indicator);=0A=
  },=0A=
=0A=
  stopIndicator: function() {=0A=
    if(this.options.indicator) Element.hide(this.options.indicator);=0A=
  },=0A=
=0A=
  onKeyPress: function(event) {=0A=
    if(this.active)=0A=
      switch(event.keyCode) {=0A=
       case Event.KEY_TAB:=0A=
       case Event.KEY_RETURN:=0A=
         this.selectEntry();=0A=
         Event.stop(event);=0A=
       case Event.KEY_ESC:=0A=
         this.hide();=0A=
         this.active =3D false;=0A=
         Event.stop(event);=0A=
         return;=0A=
       case Event.KEY_LEFT:=0A=
       case Event.KEY_RIGHT:=0A=
         return;=0A=
       case Event.KEY_UP:=0A=
         this.markPrevious();=0A=
         this.render();=0A=
         if(Prototype.Browser.WebKit) Event.stop(event);=0A=
         return;=0A=
       case Event.KEY_DOWN:=0A=
         this.markNext();=0A=
         this.render();=0A=
         if(Prototype.Browser.WebKit) Event.stop(event);=0A=
         return;=0A=
      }=0A=
     else =0A=
       if(event.keyCode=3D=3DEvent.KEY_TAB || =
event.keyCode=3D=3DEvent.KEY_RETURN || =0A=
         (Prototype.Browser.WebKit > 0 && event.keyCode =3D=3D 0)) =
return;=0A=
=0A=
    this.changed =3D true;=0A=
    this.hasFocus =3D true;=0A=
=0A=
    if(this.observer) clearTimeout(this.observer);=0A=
      this.observer =3D =0A=
        setTimeout(this.onObserverEvent.bind(this), =
this.options.frequency*1000);=0A=
  },=0A=
=0A=
  activate: function() {=0A=
    this.changed =3D false;=0A=
    this.hasFocus =3D true;=0A=
    this.getUpdatedChoices();=0A=
  },=0A=
=0A=
  onHover: function(event) {=0A=
    var element =3D Event.findElement(event, 'LI');=0A=
    if(this.index !=3D element.autocompleteIndex) =0A=
    {=0A=
        this.index =3D element.autocompleteIndex;=0A=
        this.render();=0A=
    }=0A=
    Event.stop(event);=0A=
  },=0A=
  =0A=
  onClick: function(event) {=0A=
    var element =3D Event.findElement(event, 'LI');=0A=
    this.index =3D element.autocompleteIndex;=0A=
    this.selectEntry();=0A=
    this.hide();=0A=
  },=0A=
  =0A=
  onBlur: function(event) {=0A=
    // needed to make click events working=0A=
    setTimeout(this.hide.bind(this), 250);=0A=
    this.hasFocus =3D false;=0A=
    this.active =3D false;     =0A=
  }, =0A=
  =0A=
  render: function() {=0A=
    if(this.entryCount > 0) {=0A=
      for (var i =3D 0; i < this.entryCount; i++)=0A=
        this.index=3D=3Di ? =0A=
          Element.addClassName(this.getEntry(i),"selected") : =0A=
          Element.removeClassName(this.getEntry(i),"selected");=0A=
      if(this.hasFocus) { =0A=
        this.show();=0A=
        this.active =3D true;=0A=
      }=0A=
    } else {=0A=
      this.active =3D false;=0A=
      this.hide();=0A=
    }=0A=
  },=0A=
  =0A=
  markPrevious: function() {=0A=
    if(this.index > 0) this.index--=0A=
      else this.index =3D this.entryCount-1;=0A=
    this.getEntry(this.index).scrollIntoView(true);=0A=
  },=0A=
  =0A=
  markNext: function() {=0A=
    if(this.index < this.entryCount-1) this.index++=0A=
      else this.index =3D 0;=0A=
    this.getEntry(this.index).scrollIntoView(false);=0A=
  },=0A=
  =0A=
  getEntry: function(index) {=0A=
    return this.update.firstChild.childNodes[index];=0A=
  },=0A=
  =0A=
  getCurrentEntry: function() {=0A=
    return this.getEntry(this.index);=0A=
  },=0A=
  =0A=
  selectEntry: function() {=0A=
    this.active =3D false;=0A=
    this.updateElement(this.getCurrentEntry());=0A=
  },=0A=
=0A=
  updateElement: function(selectedElement) {=0A=
    if (this.options.updateElement) {=0A=
      this.options.updateElement(selectedElement);=0A=
      return;=0A=
    }=0A=
    var value =3D '';=0A=
    if (this.options.select) {=0A=
      var nodes =3D $(selectedElement).select('.' + this.options.select) =
|| [];=0A=
      if(nodes.length>0) value =3D Element.collectTextNodes(nodes[0], =
this.options.select);=0A=
    } else=0A=
      value =3D Element.collectTextNodesIgnoreClass(selectedElement, =
'informal');=0A=
    =0A=
    var bounds =3D this.getTokenBounds();=0A=
    if (bounds[0] !=3D -1) {=0A=
      var newValue =3D this.element.value.substr(0, bounds[0]);=0A=
      var whitespace =3D =
this.element.value.substr(bounds[0]).match(/^\s+/);=0A=
      if (whitespace)=0A=
        newValue +=3D whitespace[0];=0A=
      this.element.value =3D newValue + value + =
this.element.value.substr(bounds[1]);=0A=
    } else {=0A=
      this.element.value =3D value;=0A=
    }=0A=
    this.oldElementValue =3D this.element.value;=0A=
    this.element.focus();=0A=
    =0A=
    if (this.options.afterUpdateElement)=0A=
      this.options.afterUpdateElement(this.element, selectedElement);=0A=
  },=0A=
=0A=
  updateChoices: function(choices) {=0A=
    if(!this.changed && this.hasFocus) {=0A=
      this.update.innerHTML =3D choices;=0A=
      Element.cleanWhitespace(this.update);=0A=
      Element.cleanWhitespace(this.update.down());=0A=
=0A=
      if(this.update.firstChild && this.update.down().childNodes) {=0A=
        this.entryCount =3D =0A=
          this.update.down().childNodes.length;=0A=
        for (var i =3D 0; i < this.entryCount; i++) {=0A=
          var entry =3D this.getEntry(i);=0A=
          entry.autocompleteIndex =3D i;=0A=
          this.addObservers(entry);=0A=
        }=0A=
      } else { =0A=
        this.entryCount =3D 0;=0A=
      }=0A=
=0A=
      this.stopIndicator();=0A=
      this.index =3D 0;=0A=
      =0A=
      if(this.entryCount=3D=3D1 && this.options.autoSelect) {=0A=
        this.selectEntry();=0A=
        this.hide();=0A=
      } else {=0A=
        this.render();=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  addObservers: function(element) {=0A=
    Event.observe(element, "mouseover", =
this.onHover.bindAsEventListener(this));=0A=
    Event.observe(element, "click", =
this.onClick.bindAsEventListener(this));=0A=
  },=0A=
=0A=
  onObserverEvent: function() {=0A=
    this.changed =3D false;   =0A=
    this.tokenBounds =3D null;=0A=
    if(this.getToken().length>=3Dthis.options.minChars) {=0A=
      this.getUpdatedChoices();=0A=
    } else {=0A=
      this.active =3D false;=0A=
      this.hide();=0A=
    }=0A=
    this.oldElementValue =3D this.element.value;=0A=
  },=0A=
=0A=
  getToken: function() {=0A=
    var bounds =3D this.getTokenBounds();=0A=
    return this.element.value.substring(bounds[0], bounds[1]).strip();=0A=
  },=0A=
=0A=
  getTokenBounds: function() {=0A=
    if (null !=3D this.tokenBounds) return this.tokenBounds;=0A=
    var value =3D this.element.value;=0A=
    if (value.strip().empty()) return [-1, 0];=0A=
    var diff =3D arguments.callee.getFirstDifferencePos(value, =
this.oldElementValue);=0A=
    var offset =3D (diff =3D=3D this.oldElementValue.length ? 1 : 0);=0A=
    var prevTokenPos =3D -1, nextTokenPos =3D value.length;=0A=
    var tp;=0A=
    for (var index =3D 0, l =3D this.options.tokens.length; index < l; =
++index) {=0A=
      tp =3D value.lastIndexOf(this.options.tokens[index], diff + offset =
- 1);=0A=
      if (tp > prevTokenPos) prevTokenPos =3D tp;=0A=
      tp =3D value.indexOf(this.options.tokens[index], diff + offset);=0A=
      if (-1 !=3D tp && tp < nextTokenPos) nextTokenPos =3D tp;=0A=
    }=0A=
    return (this.tokenBounds =3D [prevTokenPos + 1, nextTokenPos]);=0A=
  }=0A=
});=0A=
=0A=
Autocompleter.Base.prototype.getTokenBounds.getFirstDifferencePos =3D =
function(newS, oldS) {=0A=
  var boundary =3D Math.min(newS.length, oldS.length);=0A=
  for (var index =3D 0; index < boundary; ++index)=0A=
    if (newS[index] !=3D oldS[index])=0A=
      return index;=0A=
  return boundary;=0A=
};=0A=
=0A=
Ajax.Autocompleter =3D Class.create(Autocompleter.Base, {=0A=
  initialize: function(element, update, url, options) {=0A=
    this.baseInitialize(element, update, options);=0A=
    this.options.asynchronous  =3D true;=0A=
    this.options.onComplete    =3D this.onComplete.bind(this);=0A=
    this.options.defaultParams =3D this.options.parameters || null;=0A=
    this.url                   =3D url;=0A=
  },=0A=
=0A=
  getUpdatedChoices: function() {=0A=
    this.startIndicator();=0A=
    =0A=
    var entry =3D encodeURIComponent(this.options.paramName) + '=3D' + =0A=
      encodeURIComponent(this.getToken());=0A=
=0A=
    this.options.parameters =3D this.options.callback ?=0A=
      this.options.callback(this.element, entry) : entry;=0A=
=0A=
    if(this.options.defaultParams) =0A=
      this.options.parameters +=3D '&' + this.options.defaultParams;=0A=
    =0A=
    new Ajax.Request(this.url, this.options);=0A=
  },=0A=
=0A=
  onComplete: function(request) {=0A=
    this.updateChoices(request.responseText);=0A=
  }=0A=
});=0A=
=0A=
// The local array autocompleter. Used when you'd prefer to=0A=
// inject an array of autocompletion options into the page, rather=0A=
// than sending out Ajax queries, which can be quite slow sometimes.=0A=
//=0A=
// The constructor takes four parameters. The first two are, as usual,=0A=
// the id of the monitored textbox, and id of the autocompletion menu.=0A=
// The third is the array you want to autocomplete from, and the fourth=0A=
// is the options block.=0A=
//=0A=
// Extra local autocompletion options:=0A=
// - choices - How many autocompletion choices to offer=0A=
//=0A=
// - partialSearch - If false, the autocompleter will match entered=0A=
//                    text only at the beginning of strings in the =0A=
//                    autocomplete array. Defaults to true, which will=0A=
//                    match text at the beginning of any *word* in the=0A=
//                    strings in the autocomplete array. If you want to=0A=
//                    search anywhere in the string, additionally set=0A=
//                    the option fullSearch to true (default: off).=0A=
//=0A=
// - fullSsearch - Search anywhere in autocomplete array strings.=0A=
//=0A=
// - partialChars - How many characters to enter before triggering=0A=
//                   a partial match (unlike minChars, which defines=0A=
//                   how many characters are required to do any match=0A=
//                   at all). Defaults to 2.=0A=
//=0A=
// - ignoreCase - Whether to ignore case when autocompleting.=0A=
//                 Defaults to true.=0A=
//=0A=
// It's possible to pass in a custom function as the 'selector' =0A=
// option, if you prefer to write your own autocompletion logic.=0A=
// In that case, the other options above will not apply unless=0A=
// you support them.=0A=
=0A=
Autocompleter.Local =3D Class.create(Autocompleter.Base, {=0A=
  initialize: function(element, update, array, options) {=0A=
    this.baseInitialize(element, update, options);=0A=
    this.options.array =3D array;=0A=
  },=0A=
=0A=
  getUpdatedChoices: function() {=0A=
    this.updateChoices(this.options.selector(this));=0A=
  },=0A=
=0A=
  setOptions: function(options) {=0A=
    this.options =3D Object.extend({=0A=
      choices: 10,=0A=
      partialSearch: true,=0A=
      partialChars: 2,=0A=
      ignoreCase: true,=0A=
      fullSearch: false,=0A=
      selector: function(instance) {=0A=
        var ret       =3D []; // Beginning matches=0A=
        var partial   =3D []; // Inside matches=0A=
        var entry     =3D instance.getToken();=0A=
        var count     =3D 0;=0A=
=0A=
        for (var i =3D 0; i < instance.options.array.length &&  =0A=
          ret.length < instance.options.choices ; i++) { =0A=
=0A=
          var elem =3D instance.options.array[i];=0A=
          var foundPos =3D instance.options.ignoreCase ? =0A=
            elem.toLowerCase().indexOf(entry.toLowerCase()) : =0A=
            elem.indexOf(entry);=0A=
=0A=
          while (foundPos !=3D -1) {=0A=
            if (foundPos =3D=3D 0 && elem.length !=3D entry.length) { =0A=
              ret.push("<li><strong>" + elem.substr(0, entry.length) + =
"</strong>" + =0A=
                elem.substr(entry.length) + "</li>");=0A=
              break;=0A=
            } else if (entry.length >=3D instance.options.partialChars =
&& =0A=
              instance.options.partialSearch && foundPos !=3D -1) {=0A=
              if (instance.options.fullSearch || =
/\s/.test(elem.substr(foundPos-1,1))) {=0A=
                partial.push("<li>" + elem.substr(0, foundPos) + =
"<strong>" +=0A=
                  elem.substr(foundPos, entry.length) + "</strong>" + =
elem.substr(=0A=
                  foundPos + entry.length) + "</li>");=0A=
                break;=0A=
              }=0A=
            }=0A=
=0A=
            foundPos =3D instance.options.ignoreCase ? =0A=
              elem.toLowerCase().indexOf(entry.toLowerCase(), foundPos + =
1) : =0A=
              elem.indexOf(entry, foundPos + 1);=0A=
=0A=
          }=0A=
        }=0A=
        if (partial.length)=0A=
          ret =3D ret.concat(partial.slice(0, instance.options.choices - =
ret.length))=0A=
        return "<ul>" + ret.join('') + "</ul>";=0A=
      }=0A=
    }, options || { });=0A=
  }=0A=
});=0A=
=0A=
// AJAX in-place editor and collection editor=0A=
// Full rewrite by Christophe Porteneuve <tdd@tddsworld.com> (April =
2007).=0A=
=0A=
// Use this if you notice weird scrolling problems on some browsers,=0A=
// the DOM might be a bit confused when this gets called so do this=0A=
// waits 1 ms (with setTimeout) until it does the activation=0A=
Field.scrollFreeActivate =3D function(field) {=0A=
  setTimeout(function() {=0A=
    Field.activate(field);=0A=
  }, 1);=0A=
}=0A=
=0A=
Ajax.InPlaceEditor =3D Class.create({=0A=
  initialize: function(element, url, options) {=0A=
    this.url =3D url;=0A=
    this.element =3D element =3D $(element);=0A=
    this.prepareOptions();=0A=
    this._controls =3D { };=0A=
    arguments.callee.dealWithDeprecatedOptions(options); // DEPRECATION =
LAYER!!!=0A=
    Object.extend(this.options, options || { });=0A=
    if (!this.options.formId && this.element.id) {=0A=
      this.options.formId =3D this.element.id + '-inplaceeditor';=0A=
      if ($(this.options.formId))=0A=
        this.options.formId =3D '';=0A=
    }=0A=
    if (this.options.externalControl)=0A=
      this.options.externalControl =3D $(this.options.externalControl);=0A=
    if (!this.options.externalControl)=0A=
      this.options.externalControlOnly =3D false;=0A=
    this._originalBackground =3D =
this.element.getStyle('background-color') || 'transparent';=0A=
    this.element.title =3D this.options.clickToEditText;=0A=
    this._boundCancelHandler =3D this.handleFormCancellation.bind(this);=0A=
    this._boundComplete =3D (this.options.onComplete || =
Prototype.emptyFunction).bind(this);=0A=
    this._boundFailureHandler =3D this.handleAJAXFailure.bind(this);=0A=
    this._boundSubmitHandler =3D this.handleFormSubmission.bind(this);=0A=
    this._boundWrapperHandler =3D this.wrapUp.bind(this);=0A=
    this.registerListeners();=0A=
  },=0A=
  checkForEscapeOrReturn: function(e) {=0A=
    if (!this._editing || e.ctrlKey || e.altKey || e.shiftKey) return;=0A=
    if (Event.KEY_ESC =3D=3D e.keyCode)=0A=
      this.handleFormCancellation(e);=0A=
    else if (Event.KEY_RETURN =3D=3D e.keyCode)=0A=
      this.handleFormSubmission(e);=0A=
  },=0A=
  createControl: function(mode, handler, extraClasses) {=0A=
    var control =3D this.options[mode + 'Control'];=0A=
    var text =3D this.options[mode + 'Text'];=0A=
    if ('button' =3D=3D control) {=0A=
      var btn =3D document.createElement('input');=0A=
      btn.type =3D 'submit';=0A=
      btn.value =3D text;=0A=
      btn.className =3D 'editor_' + mode + '_button';=0A=
      if ('cancel' =3D=3D mode)=0A=
        btn.onclick =3D this._boundCancelHandler;=0A=
      this._form.appendChild(btn);=0A=
      this._controls[mode] =3D btn;=0A=
    } else if ('link' =3D=3D control) {=0A=
      var link =3D document.createElement('a');=0A=
      link.href =3D '#';=0A=
      link.appendChild(document.createTextNode(text));=0A=
      link.onclick =3D 'cancel' =3D=3D mode ? this._boundCancelHandler : =
this._boundSubmitHandler;=0A=
      link.className =3D 'editor_' + mode + '_link';=0A=
      if (extraClasses)=0A=
        link.className +=3D ' ' + extraClasses;=0A=
      this._form.appendChild(link);=0A=
      this._controls[mode] =3D link;=0A=
    }=0A=
  },=0A=
  createEditField: function() {=0A=
    var text =3D (this.options.loadTextURL ? this.options.loadingText : =
this.getText());=0A=
    var fld;=0A=
    if (1 >=3D this.options.rows && !/\r|\n/.test(this.getText())) {=0A=
      fld =3D document.createElement('input');=0A=
      fld.type =3D 'text';=0A=
      var size =3D this.options.size || this.options.cols || 0;=0A=
      if (0 < size) fld.size =3D size;=0A=
    } else {=0A=
      fld =3D document.createElement('textarea');=0A=
      fld.rows =3D (1 >=3D this.options.rows ? this.options.autoRows : =
this.options.rows);=0A=
      fld.cols =3D this.options.cols || 40;=0A=
    }=0A=
    fld.name =3D this.options.paramName;=0A=
    fld.value =3D text; // No HTML breaks conversion anymore=0A=
    fld.className =3D 'editor_field';=0A=
    if (this.options.submitOnBlur)=0A=
      fld.onblur =3D this._boundSubmitHandler;=0A=
    this._controls.editor =3D fld;=0A=
    if (this.options.loadTextURL)=0A=
      this.loadExternalText();=0A=
    this._form.appendChild(this._controls.editor);=0A=
  },=0A=
  createForm: function() {=0A=
    var ipe =3D this;=0A=
    function addText(mode, condition) {=0A=
      var text =3D ipe.options['text' + mode + 'Controls'];=0A=
      if (!text || condition =3D=3D=3D false) return;=0A=
      ipe._form.appendChild(document.createTextNode(text));=0A=
    };=0A=
    this._form =3D $(document.createElement('form'));=0A=
    this._form.id =3D this.options.formId;=0A=
    this._form.addClassName(this.options.formClassName);=0A=
    this._form.onsubmit =3D this._boundSubmitHandler;=0A=
    this.createEditField();=0A=
    if ('textarea' =3D=3D this._controls.editor.tagName.toLowerCase())=0A=
      this._form.appendChild(document.createElement('br'));=0A=
    if (this.options.onFormCustomization)=0A=
      this.options.onFormCustomization(this, this._form);=0A=
    addText('Before', this.options.okControl || =
this.options.cancelControl);=0A=
    this.createControl('ok', this._boundSubmitHandler);=0A=
    addText('Between', this.options.okControl && =
this.options.cancelControl);=0A=
    this.createControl('cancel', this._boundCancelHandler, =
'editor_cancel');=0A=
    addText('After', this.options.okControl || =
this.options.cancelControl);=0A=
  },=0A=
  destroy: function() {=0A=
    if (this._oldInnerHTML)=0A=
      this.element.innerHTML =3D this._oldInnerHTML;=0A=
    this.leaveEditMode();=0A=
    this.unregisterListeners();=0A=
  },=0A=
  enterEditMode: function(e) {=0A=
    if (this._saving || this._editing) return;=0A=
    this._editing =3D true;=0A=
    this.triggerCallback('onEnterEditMode');=0A=
    if (this.options.externalControl)=0A=
      this.options.externalControl.hide();=0A=
    this.element.hide();=0A=
    this.createForm();=0A=
    this.element.parentNode.insertBefore(this._form, this.element);=0A=
    if (!this.options.loadTextURL)=0A=
      this.postProcessEditField();=0A=
    if (e) Event.stop(e);=0A=
  },=0A=
  enterHover: function(e) {=0A=
    if (this.options.hoverClassName)=0A=
      this.element.addClassName(this.options.hoverClassName);=0A=
    if (this._saving) return;=0A=
    this.triggerCallback('onEnterHover');=0A=
  },=0A=
  getText: function() {=0A=
    return this.element.innerHTML;=0A=
  },=0A=
  handleAJAXFailure: function(transport) {=0A=
    this.triggerCallback('onFailure', transport);=0A=
    if (this._oldInnerHTML) {=0A=
      this.element.innerHTML =3D this._oldInnerHTML;=0A=
      this._oldInnerHTML =3D null;=0A=
    }=0A=
  },=0A=
  handleFormCancellation: function(e) {=0A=
    this.wrapUp();=0A=
    if (e) Event.stop(e);=0A=
  },=0A=
  handleFormSubmission: function(e) {=0A=
    var form =3D this._form;=0A=
    var value =3D $F(this._controls.editor);=0A=
    this.prepareSubmission();=0A=
    var params =3D this.options.callback(form, value) || '';=0A=
    if (Object.isString(params))=0A=
      params =3D params.toQueryParams();=0A=
    params.editorId =3D this.element.id;=0A=
    if (this.options.htmlResponse) {=0A=
      var options =3D Object.extend({ evalScripts: true }, =
this.options.ajaxOptions);=0A=
      Object.extend(options, {=0A=
        parameters: params,=0A=
        onComplete: this._boundWrapperHandler,=0A=
        onFailure: this._boundFailureHandler=0A=
      });=0A=
      new Ajax.Updater({ success: this.element }, this.url, options);=0A=
    } else {=0A=
      var options =3D Object.extend({ method: 'get' }, =
this.options.ajaxOptions);=0A=
      Object.extend(options, {=0A=
        parameters: params,=0A=
        onComplete: this._boundWrapperHandler,=0A=
        onFailure: this._boundFailureHandler=0A=
      });=0A=
      new Ajax.Request(this.url, options);=0A=
    }=0A=
    if (e) Event.stop(e);=0A=
  },=0A=
  leaveEditMode: function() {=0A=
    this.element.removeClassName(this.options.savingClassName);=0A=
    this.removeForm();=0A=
    this.leaveHover();=0A=
    this.element.style.backgroundColor =3D this._originalBackground;=0A=
    this.element.show();=0A=
    if (this.options.externalControl)=0A=
      this.options.externalControl.show();=0A=
    this._saving =3D false;=0A=
    this._editing =3D false;=0A=
    this._oldInnerHTML =3D null;=0A=
    this.triggerCallback('onLeaveEditMode');=0A=
  },=0A=
  leaveHover: function(e) {=0A=
    if (this.options.hoverClassName)=0A=
      this.element.removeClassName(this.options.hoverClassName);=0A=
    if (this._saving) return;=0A=
    this.triggerCallback('onLeaveHover');=0A=
  },=0A=
  loadExternalText: function() {=0A=
    this._form.addClassName(this.options.loadingClassName);=0A=
    this._controls.editor.disabled =3D true;=0A=
    var options =3D Object.extend({ method: 'get' }, =
this.options.ajaxOptions);=0A=
    Object.extend(options, {=0A=
      parameters: 'editorId=3D' + encodeURIComponent(this.element.id),=0A=
      onComplete: Prototype.emptyFunction,=0A=
      onSuccess: function(transport) {=0A=
        this._form.removeClassName(this.options.loadingClassName);=0A=
        var text =3D transport.responseText;=0A=
        if (this.options.stripLoadedTextTags)=0A=
          text =3D text.stripTags();=0A=
        this._controls.editor.value =3D text;=0A=
        this._controls.editor.disabled =3D false;=0A=
        this.postProcessEditField();=0A=
      }.bind(this),=0A=
      onFailure: this._boundFailureHandler=0A=
    });=0A=
    new Ajax.Request(this.options.loadTextURL, options);=0A=
  },=0A=
  postProcessEditField: function() {=0A=
    var fpc =3D this.options.fieldPostCreation;=0A=
    if (fpc)=0A=
      $(this._controls.editor)['focus' =3D=3D fpc ? 'focus' : =
'activate']();=0A=
  },=0A=
  prepareOptions: function() {=0A=
    this.options =3D Object.clone(Ajax.InPlaceEditor.DefaultOptions);=0A=
    Object.extend(this.options, Ajax.InPlaceEditor.DefaultCallbacks);=0A=
    [this._extraDefaultOptions].flatten().compact().each(function(defs) {=0A=
      Object.extend(this.options, defs);=0A=
    }.bind(this));=0A=
  },=0A=
  prepareSubmission: function() {=0A=
    this._saving =3D true;=0A=
    this.removeForm();=0A=
    this.leaveHover();=0A=
    this.showSaving();=0A=
  },=0A=
  registerListeners: function() {=0A=
    this._listeners =3D { };=0A=
    var listener;=0A=
    $H(Ajax.InPlaceEditor.Listeners).each(function(pair) {=0A=
      listener =3D this[pair.value].bind(this);=0A=
      this._listeners[pair.key] =3D listener;=0A=
      if (!this.options.externalControlOnly)=0A=
        this.element.observe(pair.key, listener);=0A=
      if (this.options.externalControl)=0A=
        this.options.externalControl.observe(pair.key, listener);=0A=
    }.bind(this));=0A=
  },=0A=
  removeForm: function() {=0A=
    if (!this._form) return;=0A=
    this._form.remove();=0A=
    this._form =3D null;=0A=
    this._controls =3D { };=0A=
  },=0A=
  showSaving: function() {=0A=
    this._oldInnerHTML =3D this.element.innerHTML;=0A=
    this.element.innerHTML =3D this.options.savingText;=0A=
    this.element.addClassName(this.options.savingClassName);=0A=
    this.element.style.backgroundColor =3D this._originalBackground;=0A=
    this.element.show();=0A=
  },=0A=
  triggerCallback: function(cbName, arg) {=0A=
    if ('function' =3D=3D typeof this.options[cbName]) {=0A=
      this.options[cbName](this, arg);=0A=
    }=0A=
  },=0A=
  unregisterListeners: function() {=0A=
    $H(this._listeners).each(function(pair) {=0A=
      if (!this.options.externalControlOnly)=0A=
        this.element.stopObserving(pair.key, pair.value);=0A=
      if (this.options.externalControl)=0A=
        this.options.externalControl.stopObserving(pair.key, pair.value);=0A=
    }.bind(this));=0A=
  },=0A=
  wrapUp: function(transport) {=0A=
    this.leaveEditMode();=0A=
    // Can't use triggerCallback due to backward compatibility: requires=0A=
    // binding + direct element=0A=
    this._boundComplete(transport, this.element);=0A=
  }=0A=
});=0A=
=0A=
Object.extend(Ajax.InPlaceEditor.prototype, {=0A=
  dispose: Ajax.InPlaceEditor.prototype.destroy=0A=
});=0A=
=0A=
Ajax.InPlaceCollectionEditor =3D Class.create(Ajax.InPlaceEditor, {=0A=
  initialize: function($super, element, url, options) {=0A=
    this._extraDefaultOptions =3D =
Ajax.InPlaceCollectionEditor.DefaultOptions;=0A=
    $super(element, url, options);=0A=
  },=0A=
=0A=
  createEditField: function() {=0A=
    var list =3D document.createElement('select');=0A=
    list.name =3D this.options.paramName;=0A=
    list.size =3D 1;=0A=
    this._controls.editor =3D list;=0A=
    this._collection =3D this.options.collection || [];=0A=
    if (this.options.loadCollectionURL)=0A=
      this.loadCollection();=0A=
    else=0A=
      this.checkForExternalText();=0A=
    this._form.appendChild(this._controls.editor);=0A=
  },=0A=
=0A=
  loadCollection: function() {=0A=
    this._form.addClassName(this.options.loadingClassName);=0A=
    this.showLoadingText(this.options.loadingCollectionText);=0A=
    var options =3D Object.extend({ method: 'get' }, =
this.options.ajaxOptions);=0A=
    Object.extend(options, {=0A=
      parameters: 'editorId=3D' + encodeURIComponent(this.element.id),=0A=
      onComplete: Prototype.emptyFunction,=0A=
      onSuccess: function(transport) {=0A=
        var js =3D transport.responseText.strip();=0A=
        if (!/^\[.*\]$/.test(js)) // TODO: improve sanity check=0A=
          throw 'Server returned an invalid collection representation.';=0A=
        this._collection =3D eval(js);=0A=
        this.checkForExternalText();=0A=
      }.bind(this),=0A=
      onFailure: this.onFailure=0A=
    });=0A=
    new Ajax.Request(this.options.loadCollectionURL, options);=0A=
  },=0A=
=0A=
  showLoadingText: function(text) {=0A=
    this._controls.editor.disabled =3D true;=0A=
    var tempOption =3D this._controls.editor.firstChild;=0A=
    if (!tempOption) {=0A=
      tempOption =3D document.createElement('option');=0A=
      tempOption.value =3D '';=0A=
      this._controls.editor.appendChild(tempOption);=0A=
      tempOption.selected =3D true;=0A=
    }=0A=
    tempOption.update((text || '').stripScripts().stripTags());=0A=
  },=0A=
=0A=
  checkForExternalText: function() {=0A=
    this._text =3D this.getText();=0A=
    if (this.options.loadTextURL)=0A=
      this.loadExternalText();=0A=
    else=0A=
      this.buildOptionList();=0A=
  },=0A=
=0A=
  loadExternalText: function() {=0A=
    this.showLoadingText(this.options.loadingText);=0A=
    var options =3D Object.extend({ method: 'get' }, =
this.options.ajaxOptions);=0A=
    Object.extend(options, {=0A=
      parameters: 'editorId=3D' + encodeURIComponent(this.element.id),=0A=
      onComplete: Prototype.emptyFunction,=0A=
      onSuccess: function(transport) {=0A=
        this._text =3D transport.responseText.strip();=0A=
        this.buildOptionList();=0A=
      }.bind(this),=0A=
      onFailure: this.onFailure=0A=
    });=0A=
    new Ajax.Request(this.options.loadTextURL, options);=0A=
  },=0A=
=0A=
  buildOptionList: function() {=0A=
    this._form.removeClassName(this.options.loadingClassName);=0A=
    this._collection =3D this._collection.map(function(entry) {=0A=
      return 2 =3D=3D=3D entry.length ? entry : [entry, entry].flatten();=0A=
    });=0A=
    var marker =3D ('value' in this.options) ? this.options.value : =
this._text;=0A=
    var textFound =3D this._collection.any(function(entry) {=0A=
      return entry[0] =3D=3D marker;=0A=
    }.bind(this));=0A=
    this._controls.editor.update('');=0A=
    var option;=0A=
    this._collection.each(function(entry, index) {=0A=
      option =3D document.createElement('option');=0A=
      option.value =3D entry[0];=0A=
      option.selected =3D textFound ? entry[0] =3D=3D marker : 0 =3D=3D =
index;=0A=
      option.appendChild(document.createTextNode(entry[1]));=0A=
      this._controls.editor.appendChild(option);=0A=
    }.bind(this));=0A=
    this._controls.editor.disabled =3D false;=0A=
    Field.scrollFreeActivate(this._controls.editor);=0A=
  }=0A=
});=0A=
=0A=
//**** DEPRECATION LAYER FOR InPlace[Collection]Editor! ****=0A=
//**** This only  exists for a while,  in order to  let ****=0A=
//**** users adapt to  the new API.  Read up on the new ****=0A=
//**** API and convert your code to it ASAP!            ****=0A=
=0A=
Ajax.InPlaceEditor.prototype.initialize.dealWithDeprecatedOptions =3D =
function(options) {=0A=
  if (!options) return;=0A=
  function fallback(name, expr) {=0A=
    if (name in options || expr =3D=3D=3D undefined) return;=0A=
    options[name] =3D expr;=0A=
  };=0A=
  fallback('cancelControl', (options.cancelLink ? 'link' : =
(options.cancelButton ? 'button' :=0A=
    options.cancelLink =3D=3D options.cancelButton =3D=3D false ? false =
: undefined)));=0A=
  fallback('okControl', (options.okLink ? 'link' : (options.okButton ? =
'button' :=0A=
    options.okLink =3D=3D options.okButton =3D=3D false ? false : =
undefined)));=0A=
  fallback('highlightColor', options.highlightcolor);=0A=
  fallback('highlightEndColor', options.highlightendcolor);=0A=
};=0A=
=0A=
Object.extend(Ajax.InPlaceEditor, {=0A=
  DefaultOptions: {=0A=
    ajaxOptions: { },=0A=
    autoRows: 3,                                // Use when multi-line =
w/ rows =3D=3D 1=0A=
    cancelControl: 'link',                      // 'link'|'button'|false=0A=
    cancelText: 'cancel',=0A=
    clickToEditText: 'Click to edit',=0A=
    externalControl: null,                      // id|elt=0A=
    externalControlOnly: false,=0A=
    fieldPostCreation: 'activate',              // =
'activate'|'focus'|false=0A=
    formClassName: 'inplaceeditor-form',=0A=
    formId: null,                               // id|elt=0A=
    highlightColor: '#ffff99',=0A=
    highlightEndColor: '#ffffff',=0A=
    hoverClassName: '',=0A=
    htmlResponse: true,=0A=
    loadingClassName: 'inplaceeditor-loading',=0A=
    loadingText: 'Loading...',=0A=
    okControl: 'button',                        // 'link'|'button'|false=0A=
    okText: 'ok',=0A=
    paramName: 'value',=0A=
    rows: 1,                                    // If 1 and multi-line, =
uses autoRows=0A=
    savingClassName: 'inplaceeditor-saving',=0A=
    savingText: 'Saving...',=0A=
    size: 0,=0A=
    stripLoadedTextTags: false,=0A=
    submitOnBlur: false,=0A=
    textAfterControls: '',=0A=
    textBeforeControls: '',=0A=
    textBetweenControls: ''=0A=
  },=0A=
  DefaultCallbacks: {=0A=
    callback: function(form) {=0A=
      return Form.serialize(form);=0A=
    },=0A=
    onComplete: function(transport, element) {=0A=
      // For backward compatibility, this one is bound to the IPE, and =
passes=0A=
      // the element directly.  It was too often customized, so we don't =
break it.=0A=
      new Effect.Highlight(element, {=0A=
        startcolor: this.options.highlightColor, keepBackgroundImage: =
true });=0A=
    },=0A=
    onEnterEditMode: null,=0A=
    onEnterHover: function(ipe) {=0A=
      ipe.element.style.backgroundColor =3D ipe.options.highlightColor;=0A=
      if (ipe._effect)=0A=
        ipe._effect.cancel();=0A=
    },=0A=
    onFailure: function(transport, ipe) {=0A=
      alert('Error communication with the server: ' + =
transport.responseText.stripTags());=0A=
    },=0A=
    onFormCustomization: null, // Takes the IPE and its generated form, =
after editor, before controls.=0A=
    onLeaveEditMode: null,=0A=
    onLeaveHover: function(ipe) {=0A=
      ipe._effect =3D new Effect.Highlight(ipe.element, {=0A=
        startcolor: ipe.options.highlightColor, endcolor: =
ipe.options.highlightEndColor,=0A=
        restorecolor: ipe._originalBackground, keepBackgroundImage: true=0A=
      });=0A=
    }=0A=
  },=0A=
  Listeners: {=0A=
    click: 'enterEditMode',=0A=
    keydown: 'checkForEscapeOrReturn',=0A=
    mouseover: 'enterHover',=0A=
    mouseout: 'leaveHover'=0A=
  }=0A=
});=0A=
=0A=
Ajax.InPlaceCollectionEditor.DefaultOptions =3D {=0A=
  loadingCollectionText: 'Loading options...'=0A=
};=0A=
=0A=
// Delayed observer, like Form.Element.Observer, =0A=
// but waits for delay after last key input=0A=
// Ideal for live-search fields=0A=
=0A=
Form.Element.DelayedObserver =3D Class.create({=0A=
  initialize: function(element, delay, callback) {=0A=
    this.delay     =3D delay || 0.5;=0A=
    this.element   =3D $(element);=0A=
    this.callback  =3D callback;=0A=
    this.timer     =3D null;=0A=
    this.lastValue =3D $F(this.element); =0A=
    =
Event.observe(this.element,'keyup',this.delayedListener.bindAsEventListen=
er(this));=0A=
  },=0A=
  delayedListener: function(event) {=0A=
    if(this.lastValue =3D=3D $F(this.element)) return;=0A=
    if(this.timer) clearTimeout(this.timer);=0A=
    this.timer =3D setTimeout(this.onTimerEvent.bind(this), this.delay * =
1000);=0A=
    this.lastValue =3D $F(this.element);=0A=
  },=0A=
  onTimerEvent: function() {=0A=
    this.timer =3D null;=0A=
    this.callback(this.element, $F(this.element));=0A=
  }=0A=
});=0A=
=0A=
if (!Control) var Control =3D { };=0A=
=0A=
// options:=0A=
//  axis: 'vertical', or 'horizontal' (default)=0A=
//=0A=
// callbacks:=0A=
//  onChange(value)=0A=
//  onSlide(value)=0A=
Control.Slider =3D Class.create({=0A=
  initialize: function(handle, track, options) {=0A=
    var slider =3D this;=0A=
    =0A=
    if (Object.isArray(handle)) {=0A=
      this.handles =3D handle.collect( function(e) { return $(e) });=0A=
    } else {=0A=
      this.handles =3D [$(handle)];=0A=
    }=0A=
    =0A=
    this.track   =3D $(track);=0A=
    this.options =3D options || { };=0A=
=0A=
    this.axis      =3D this.options.axis || 'horizontal';=0A=
    this.increment =3D this.options.increment || 1;=0A=
    this.step      =3D parseInt(this.options.step || '1');=0A=
    this.range     =3D this.options.range || $R(0,1);=0A=
    =0A=
    this.value     =3D 0; // assure backwards compat=0A=
    this.values    =3D this.handles.map( function() { return 0 });=0A=
    this.spans     =3D this.options.spans ? =
this.options.spans.map(function(s){ return $(s) }) : false;=0A=
    this.options.startSpan =3D $(this.options.startSpan || null);=0A=
    this.options.endSpan   =3D $(this.options.endSpan || null);=0A=
=0A=
    this.restricted =3D this.options.restricted || false;=0A=
=0A=
    this.maximum   =3D this.options.maximum || this.range.end;=0A=
    this.minimum   =3D this.options.minimum || this.range.start;=0A=
=0A=
    // Will be used to align the handle onto the track, if necessary=0A=
    this.alignX =3D parseInt(this.options.alignX || '0');=0A=
    this.alignY =3D parseInt(this.options.alignY || '0');=0A=
    =0A=
    this.trackLength =3D this.maximumOffset() - this.minimumOffset();=0A=
=0A=
    this.handleLength =3D this.isVertical() ? =0A=
      (this.handles[0].offsetHeight !=3D 0 ? =0A=
        this.handles[0].offsetHeight : =
this.handles[0].style.height.replace(/px$/,"")) : =0A=
      (this.handles[0].offsetWidth !=3D 0 ? this.handles[0].offsetWidth =
: =0A=
        this.handles[0].style.width.replace(/px$/,""));=0A=
=0A=
    this.active   =3D false;=0A=
    this.dragging =3D false;=0A=
    this.disabled =3D false;=0A=
=0A=
    if (this.options.disabled) this.setDisabled();=0A=
=0A=
    // Allowed values array=0A=
    this.allowedValues =3D this.options.values ? =
this.options.values.sortBy(Prototype.K) : false;=0A=
    if (this.allowedValues) {=0A=
      this.minimum =3D this.allowedValues.min();=0A=
      this.maximum =3D this.allowedValues.max();=0A=
    }=0A=
=0A=
    this.eventMouseDown =3D this.startDrag.bindAsEventListener(this);=0A=
    this.eventMouseUp   =3D this.endDrag.bindAsEventListener(this);=0A=
    this.eventMouseMove =3D this.update.bindAsEventListener(this);=0A=
=0A=
    // Initialize handles in reverse (make sure first handle is active)=0A=
    this.handles.each( function(h,i) {=0A=
      i =3D slider.handles.length-1-i;=0A=
      slider.setValue(parseFloat(=0A=
        (Object.isArray(slider.options.sliderValue) ? =0A=
          slider.options.sliderValue[i] : slider.options.sliderValue) || =0A=
         slider.range.start), i);=0A=
      h.makePositioned().observe("mousedown", slider.eventMouseDown);=0A=
    });=0A=
    =0A=
    this.track.observe("mousedown", this.eventMouseDown);=0A=
    document.observe("mouseup", this.eventMouseUp);=0A=
    document.observe("mousemove", this.eventMouseMove);=0A=
    =0A=
    this.initialized =3D true;=0A=
  },=0A=
  dispose: function() {=0A=
    var slider =3D this;    =0A=
    Event.stopObserving(this.track, "mousedown", this.eventMouseDown);=0A=
    Event.stopObserving(document, "mouseup", this.eventMouseUp);=0A=
    Event.stopObserving(document, "mousemove", this.eventMouseMove);=0A=
    this.handles.each( function(h) {=0A=
      Event.stopObserving(h, "mousedown", slider.eventMouseDown);=0A=
    });=0A=
  },=0A=
  setDisabled: function(){=0A=
    this.disabled =3D true;=0A=
  },=0A=
  setEnabled: function(){=0A=
    this.disabled =3D false;=0A=
  },  =0A=
  getNearestValue: function(value){=0A=
    if (this.allowedValues){=0A=
      if (value >=3D this.allowedValues.max()) =
return(this.allowedValues.max());=0A=
      if (value <=3D this.allowedValues.min()) =
return(this.allowedValues.min());=0A=
      =0A=
      var offset =3D Math.abs(this.allowedValues[0] - value);=0A=
      var newValue =3D this.allowedValues[0];=0A=
      this.allowedValues.each( function(v) {=0A=
        var currentOffset =3D Math.abs(v - value);=0A=
        if (currentOffset <=3D offset){=0A=
          newValue =3D v;=0A=
          offset =3D currentOffset;=0A=
        } =0A=
      });=0A=
      return newValue;=0A=
    }=0A=
    if (value > this.range.end) return this.range.end;=0A=
    if (value < this.range.start) return this.range.start;=0A=
    return value;=0A=
  },=0A=
  setValue: function(sliderValue, handleIdx){=0A=
    if (!this.active) {=0A=
      this.activeHandleIdx =3D handleIdx || 0;=0A=
      this.activeHandle    =3D this.handles[this.activeHandleIdx];=0A=
      this.updateStyles();=0A=
    }=0A=
    handleIdx =3D handleIdx || this.activeHandleIdx || 0;=0A=
    if (this.initialized && this.restricted) {=0A=
      if ((handleIdx>0) && (sliderValue<this.values[handleIdx-1]))=0A=
        sliderValue =3D this.values[handleIdx-1];=0A=
      if ((handleIdx < (this.handles.length-1)) && =
(sliderValue>this.values[handleIdx+1]))=0A=
        sliderValue =3D this.values[handleIdx+1];=0A=
    }=0A=
    sliderValue =3D this.getNearestValue(sliderValue);=0A=
    this.values[handleIdx] =3D sliderValue;=0A=
    this.value =3D this.values[0]; // assure backwards compat=0A=
    =0A=
    this.handles[handleIdx].style[this.isVertical() ? 'top' : 'left'] =
=3D =0A=
      this.translateToPx(sliderValue);=0A=
    =0A=
    this.drawSpans();=0A=
    if (!this.dragging || !this.event) this.updateFinished();=0A=
  },=0A=
  setValueBy: function(delta, handleIdx) {=0A=
    this.setValue(this.values[handleIdx || this.activeHandleIdx || 0] + =
delta, =0A=
      handleIdx || this.activeHandleIdx || 0);=0A=
  },=0A=
  translateToPx: function(value) {=0A=
    return Math.round(=0A=
      =
((this.trackLength-this.handleLength)/(this.range.end-this.range.start)) =
* =0A=
      (value - this.range.start)) + "px";=0A=
  },=0A=
  translateToValue: function(offset) {=0A=
    return ((offset/(this.trackLength-this.handleLength) * =0A=
      (this.range.end-this.range.start)) + this.range.start);=0A=
  },=0A=
  getRange: function(range) {=0A=
    var v =3D this.values.sortBy(Prototype.K); =0A=
    range =3D range || 0;=0A=
    return $R(v[range],v[range+1]);=0A=
  },=0A=
  minimumOffset: function(){=0A=
    return(this.isVertical() ? this.alignY : this.alignX);=0A=
  },=0A=
  maximumOffset: function(){=0A=
    return(this.isVertical() ? =0A=
      (this.track.offsetHeight !=3D 0 ? this.track.offsetHeight :=0A=
        this.track.style.height.replace(/px$/,"")) - this.alignY : =0A=
      (this.track.offsetWidth !=3D 0 ? this.track.offsetWidth : =0A=
        this.track.style.width.replace(/px$/,"")) - this.alignX);=0A=
  },  =0A=
  isVertical:  function(){=0A=
    return (this.axis =3D=3D 'vertical');=0A=
  },=0A=
  drawSpans: function() {=0A=
    var slider =3D this;=0A=
    if (this.spans)=0A=
      $R(0, this.spans.length-1).each(function(r) { =
slider.setSpan(slider.spans[r], slider.getRange(r)) });=0A=
    if (this.options.startSpan)=0A=
      this.setSpan(this.options.startSpan,=0A=
        $R(0, this.values.length>1 ? this.getRange(0).min() : this.value =
));=0A=
    if (this.options.endSpan)=0A=
      this.setSpan(this.options.endSpan, =0A=
        $R(this.values.length>1 ? =
this.getRange(this.spans.length-1).max() : this.value, this.maximum));=0A=
  },=0A=
  setSpan: function(span, range) {=0A=
    if (this.isVertical()) {=0A=
      span.style.top =3D this.translateToPx(range.start);=0A=
      span.style.height =3D this.translateToPx(range.end - range.start + =
this.range.start);=0A=
    } else {=0A=
      span.style.left =3D this.translateToPx(range.start);=0A=
      span.style.width =3D this.translateToPx(range.end - range.start + =
this.range.start);=0A=
    }=0A=
  },=0A=
  updateStyles: function() {=0A=
    this.handles.each( function(h){ Element.removeClassName(h, =
'selected') });=0A=
    Element.addClassName(this.activeHandle, 'selected');=0A=
  },=0A=
  startDrag: function(event) {=0A=
    if (Event.isLeftClick(event)) {=0A=
      if (!this.disabled){=0A=
        this.active =3D true;=0A=
        =0A=
        var handle =3D Event.element(event);=0A=
        var pointer  =3D [Event.pointerX(event), Event.pointerY(event)];=0A=
        var track =3D handle;=0A=
        if (track=3D=3Dthis.track) {=0A=
          var offsets  =3D Position.cumulativeOffset(this.track); =0A=
          this.event =3D event;=0A=
          this.setValue(this.translateToValue( =0A=
           (this.isVertical() ? pointer[1]-offsets[1] : =
pointer[0]-offsets[0])-(this.handleLength/2)=0A=
          ));=0A=
          var offsets  =3D Position.cumulativeOffset(this.activeHandle);=0A=
          this.offsetX =3D (pointer[0] - offsets[0]);=0A=
          this.offsetY =3D (pointer[1] - offsets[1]);=0A=
        } else {=0A=
          // find the handle (prevents issues with Safari)=0A=
          while((this.handles.indexOf(handle) =3D=3D -1) && =
handle.parentNode) =0A=
            handle =3D handle.parentNode;=0A=
            =0A=
          if (this.handles.indexOf(handle)!=3D-1) {=0A=
            this.activeHandle    =3D handle;=0A=
            this.activeHandleIdx =3D =
this.handles.indexOf(this.activeHandle);=0A=
            this.updateStyles();=0A=
            =0A=
            var offsets  =3D =
Position.cumulativeOffset(this.activeHandle);=0A=
            this.offsetX =3D (pointer[0] - offsets[0]);=0A=
            this.offsetY =3D (pointer[1] - offsets[1]);=0A=
          }=0A=
        }=0A=
      }=0A=
      Event.stop(event);=0A=
    }=0A=
  },=0A=
  update: function(event) {=0A=
   if (this.active) {=0A=
      if (!this.dragging) this.dragging =3D true;=0A=
      this.draw(event);=0A=
      if (Prototype.Browser.WebKit) window.scrollBy(0,0);=0A=
      Event.stop(event);=0A=
   }=0A=
  },=0A=
  draw: function(event) {=0A=
    var pointer =3D [Event.pointerX(event), Event.pointerY(event)];=0A=
    var offsets =3D Position.cumulativeOffset(this.track);=0A=
    pointer[0] -=3D this.offsetX + offsets[0];=0A=
    pointer[1] -=3D this.offsetY + offsets[1];=0A=
    this.event =3D event;=0A=
    this.setValue(this.translateToValue( this.isVertical() ? pointer[1] =
: pointer[0] ));=0A=
    if (this.initialized && this.options.onSlide)=0A=
      this.options.onSlide(this.values.length>1 ? this.values : =
this.value, this);=0A=
  },=0A=
  endDrag: function(event) {=0A=
    if (this.active && this.dragging) {=0A=
      this.finishDrag(event, true);=0A=
      Event.stop(event);=0A=
    }=0A=
    this.active =3D false;=0A=
    this.dragging =3D false;=0A=
  },  =0A=
  finishDrag: function(event, success) {=0A=
    this.active =3D false;=0A=
    this.dragging =3D false;=0A=
    this.updateFinished();=0A=
  },=0A=
  updateFinished: function() {=0A=
    if (this.initialized && this.options.onChange) =0A=
      this.options.onChange(this.values.length>1 ? this.values : =
this.value, this);=0A=
    this.event =3D null;=0A=
  }=0A=
});=0A=
=0A=
if(Object.isUndefined(Effect))=0A=
  throw("dragdrop.js requires including script.aculo.us' effects.js =
library");=0A=
=0A=
var Droppables =3D {=0A=
  drops: [],=0A=
=0A=
  remove: function(element) {=0A=
    this.drops =3D this.drops.reject(function(d) { return =
d.element=3D=3D$(element) });=0A=
  },=0A=
=0A=
  add: function(element) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend({=0A=
      greedy:     true,=0A=
      hoverclass: null,=0A=
      tree:       false=0A=
    }, arguments[1] || { });=0A=
=0A=
    // cache containers=0A=
    if(options.containment) {=0A=
      options._containers =3D [];=0A=
      var containment =3D options.containment;=0A=
      if(Object.isArray(containment)) {=0A=
        containment.each( function(c) { options._containers.push($(c)) =
});=0A=
      } else {=0A=
        options._containers.push($(containment));=0A=
      }=0A=
    }=0A=
    =0A=
    if(options.accept) options.accept =3D [options.accept].flatten();=0A=
=0A=
    Element.makePositioned(element); // fix IE=0A=
    options.element =3D element;=0A=
=0A=
    this.drops.push(options);=0A=
  },=0A=
  =0A=
  findDeepestChild: function(drops) {=0A=
    deepest =3D drops[0];=0A=
      =0A=
    for (i =3D 1; i < drops.length; ++i)=0A=
      if (Element.isParent(drops[i].element, deepest.element))=0A=
        deepest =3D drops[i];=0A=
    =0A=
    return deepest;=0A=
  },=0A=
=0A=
  isContained: function(element, drop) {=0A=
    var containmentNode;=0A=
    if(drop.tree) {=0A=
      containmentNode =3D element.treeNode; =0A=
    } else {=0A=
      containmentNode =3D element.parentNode;=0A=
    }=0A=
    return drop._containers.detect(function(c) { return containmentNode =
=3D=3D c });=0A=
  },=0A=
  =0A=
  isAffected: function(point, element, drop) {=0A=
    return (=0A=
      (drop.element!=3Delement) &&=0A=
      ((!drop._containers) ||=0A=
        this.isContained(element, drop)) &&=0A=
      ((!drop.accept) ||=0A=
        (Element.classNames(element).detect( =0A=
          function(v) { return drop.accept.include(v) } ) )) &&=0A=
      Position.within(drop.element, point[0], point[1]) );=0A=
  },=0A=
=0A=
  deactivate: function(drop) {=0A=
    if(drop.hoverclass)=0A=
      Element.removeClassName(drop.element, drop.hoverclass);=0A=
    this.last_active =3D null;=0A=
  },=0A=
=0A=
  activate: function(drop) {=0A=
    if(drop.hoverclass)=0A=
      Element.addClassName(drop.element, drop.hoverclass);=0A=
    this.last_active =3D drop;=0A=
  },=0A=
=0A=
  show: function(point, element) {=0A=
    if(!this.drops.length) return;=0A=
    var drop, affected =3D [];=0A=
    =0A=
    this.drops.each( function(drop) {=0A=
      if(Droppables.isAffected(point, element, drop))=0A=
        affected.push(drop);=0A=
    });=0A=
        =0A=
    if(affected.length>0)=0A=
      drop =3D Droppables.findDeepestChild(affected);=0A=
=0A=
    if(this.last_active && this.last_active !=3D drop) =
this.deactivate(this.last_active);=0A=
    if (drop) {=0A=
      Position.within(drop.element, point[0], point[1]);=0A=
      if(drop.onHover)=0A=
        drop.onHover(element, drop.element, =
Position.overlap(drop.overlap, drop.element));=0A=
      =0A=
      if (drop !=3D this.last_active) Droppables.activate(drop);=0A=
    }=0A=
  },=0A=
=0A=
  fire: function(event, element) {=0A=
    if(!this.last_active) return;=0A=
    Position.prepare();=0A=
=0A=
    if (this.isAffected([Event.pointerX(event), Event.pointerY(event)], =
element, this.last_active))=0A=
      if (this.last_active.onDrop) {=0A=
        this.last_active.onDrop(element, this.last_active.element, =
event); =0A=
        return true; =0A=
      }=0A=
  },=0A=
=0A=
  reset: function() {=0A=
    if(this.last_active)=0A=
      this.deactivate(this.last_active);=0A=
  }=0A=
}=0A=
=0A=
var Draggables =3D {=0A=
  drags: [],=0A=
  observers: [],=0A=
  =0A=
  register: function(draggable) {=0A=
    if(this.drags.length =3D=3D 0) {=0A=
      this.eventMouseUp   =3D this.endDrag.bindAsEventListener(this);=0A=
      this.eventMouseMove =3D this.updateDrag.bindAsEventListener(this);=0A=
      this.eventKeypress  =3D this.keyPress.bindAsEventListener(this);=0A=
      =0A=
      Event.observe(document, "mouseup", this.eventMouseUp);=0A=
      Event.observe(document, "mousemove", this.eventMouseMove);=0A=
      Event.observe(document, "keypress", this.eventKeypress);=0A=
    }=0A=
    this.drags.push(draggable);=0A=
  },=0A=
  =0A=
  unregister: function(draggable) {=0A=
    this.drags =3D this.drags.reject(function(d) { return =
d=3D=3Ddraggable });=0A=
    if(this.drags.length =3D=3D 0) {=0A=
      Event.stopObserving(document, "mouseup", this.eventMouseUp);=0A=
      Event.stopObserving(document, "mousemove", this.eventMouseMove);=0A=
      Event.stopObserving(document, "keypress", this.eventKeypress);=0A=
    }=0A=
  },=0A=
  =0A=
  activate: function(draggable) {=0A=
    if(draggable.options.delay) { =0A=
      this._timeout =3D setTimeout(function() { =0A=
        Draggables._timeout =3D null; =0A=
        window.focus(); =0A=
        Draggables.activeDraggable =3D draggable; =0A=
      }.bind(this), draggable.options.delay); =0A=
    } else {=0A=
      window.focus(); // allows keypress events if window isn't =
currently focused, fails for Safari=0A=
      this.activeDraggable =3D draggable;=0A=
    }=0A=
  },=0A=
  =0A=
  deactivate: function() {=0A=
    this.activeDraggable =3D null;=0A=
  },=0A=
  =0A=
  updateDrag: function(event) {=0A=
    if(!this.activeDraggable) return;=0A=
    var pointer =3D [Event.pointerX(event), Event.pointerY(event)];=0A=
    // Mozilla-based browsers fire successive mousemove events with=0A=
    // the same coordinates, prevent needless redrawing (moz bug?)=0A=
    if(this._lastPointer && (this._lastPointer.inspect() =3D=3D =
pointer.inspect())) return;=0A=
    this._lastPointer =3D pointer;=0A=
    =0A=
    this.activeDraggable.updateDrag(event, pointer);=0A=
  },=0A=
  =0A=
  endDrag: function(event) {=0A=
    if(this._timeout) { =0A=
      clearTimeout(this._timeout); =0A=
      this._timeout =3D null; =0A=
    }=0A=
    if(!this.activeDraggable) return;=0A=
    this._lastPointer =3D null;=0A=
    this.activeDraggable.endDrag(event);=0A=
    this.activeDraggable =3D null;=0A=
  },=0A=
  =0A=
  keyPress: function(event) {=0A=
    if(this.activeDraggable)=0A=
      this.activeDraggable.keyPress(event);=0A=
  },=0A=
  =0A=
  addObserver: function(observer) {=0A=
    this.observers.push(observer);=0A=
    this._cacheObserverCallbacks();=0A=
  },=0A=
  =0A=
  removeObserver: function(element) {  // element instead of observer =
fixes mem leaks=0A=
    this.observers =3D this.observers.reject( function(o) { return =
o.element=3D=3Delement });=0A=
    this._cacheObserverCallbacks();=0A=
  },=0A=
  =0A=
  notify: function(eventName, draggable, event) {  // 'onStart', =
'onEnd', 'onDrag'=0A=
    if(this[eventName+'Count'] > 0)=0A=
      this.observers.each( function(o) {=0A=
        if(o[eventName]) o[eventName](eventName, draggable, event);=0A=
      });=0A=
    if(draggable.options[eventName]) =
draggable.options[eventName](draggable, event);=0A=
  },=0A=
  =0A=
  _cacheObserverCallbacks: function() {=0A=
    ['onStart','onEnd','onDrag'].each( function(eventName) {=0A=
      Draggables[eventName+'Count'] =3D Draggables.observers.select(=0A=
        function(o) { return o[eventName]; }=0A=
      ).length;=0A=
    });=0A=
  }=0A=
}=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Draggable =3D Class.create({=0A=
  initialize: function(element) {=0A=
    var defaults =3D {=0A=
      handle: false,=0A=
      reverteffect: function(element, top_offset, left_offset) {=0A=
        var dur =3D =
Math.sqrt(Math.abs(top_offset^2)+Math.abs(left_offset^2))*0.02;=0A=
        new Effect.Move(element, { x: -left_offset, y: -top_offset, =
duration: dur,=0A=
          queue: {scope:'_draggable', position:'end'}=0A=
        });=0A=
      },=0A=
      endeffect: function(element) {=0A=
        var toOpacity =3D Object.isNumber(element._opacity) ? =
element._opacity : 1.0;=0A=
        new Effect.Opacity(element, {duration:0.2, from:0.7, =
to:toOpacity, =0A=
          queue: {scope:'_draggable', position:'end'},=0A=
          afterFinish: function(){ =0A=
            Draggable._dragging[element] =3D false =0A=
          }=0A=
        }); =0A=
      },=0A=
      zindex: 1000,=0A=
      revert: false,=0A=
      quiet: false,=0A=
      scroll: false,=0A=
      scrollSensitivity: 20,=0A=
      scrollSpeed: 15,=0A=
      snap: false,  // false, or xy or [x,y] or function(x,y){ return =
[x,y] }=0A=
      delay: 0=0A=
    };=0A=
    =0A=
    if(!arguments[1] || Object.isUndefined(arguments[1].endeffect))=0A=
      Object.extend(defaults, {=0A=
        starteffect: function(element) {=0A=
          element._opacity =3D Element.getOpacity(element);=0A=
          Draggable._dragging[element] =3D true;=0A=
          new Effect.Opacity(element, {duration:0.2, =
from:element._opacity, to:0.7}); =0A=
        }=0A=
      });=0A=
    =0A=
    var options =3D Object.extend(defaults, arguments[1] || { });=0A=
=0A=
    this.element =3D $(element);=0A=
    =0A=
    if(options.handle && Object.isString(options.handle))=0A=
      this.handle =3D this.element.down('.'+options.handle, 0);=0A=
    =0A=
    if(!this.handle) this.handle =3D $(options.handle);=0A=
    if(!this.handle) this.handle =3D this.element;=0A=
    =0A=
    if(options.scroll && !options.scroll.scrollTo && =
!options.scroll.outerHTML) {=0A=
      options.scroll =3D $(options.scroll);=0A=
      this._isScrollChild =3D Element.childOf(this.element, =
options.scroll);=0A=
    }=0A=
=0A=
    Element.makePositioned(this.element); // fix IE    =0A=
=0A=
    this.options  =3D options;=0A=
    this.dragging =3D false;   =0A=
=0A=
    this.eventMouseDown =3D this.initDrag.bindAsEventListener(this);=0A=
    Event.observe(this.handle, "mousedown", this.eventMouseDown);=0A=
    =0A=
    Draggables.register(this);=0A=
  },=0A=
  =0A=
  destroy: function() {=0A=
    Event.stopObserving(this.handle, "mousedown", this.eventMouseDown);=0A=
    Draggables.unregister(this);=0A=
  },=0A=
  =0A=
  currentDelta: function() {=0A=
    return([=0A=
      parseInt(Element.getStyle(this.element,'left') || '0'),=0A=
      parseInt(Element.getStyle(this.element,'top') || '0')]);=0A=
  },=0A=
  =0A=
  initDrag: function(event) {=0A=
    if(!Object.isUndefined(Draggable._dragging[this.element]) &&=0A=
      Draggable._dragging[this.element]) return;=0A=
    if(Event.isLeftClick(event)) {    =0A=
      // abort on form elements, fixes a Firefox issue=0A=
      var src =3D Event.element(event);=0A=
      if((tag_name =3D src.tagName.toUpperCase()) && (=0A=
        tag_name=3D=3D'INPUT' ||=0A=
        tag_name=3D=3D'SELECT' ||=0A=
        tag_name=3D=3D'OPTION' ||=0A=
        tag_name=3D=3D'BUTTON' ||=0A=
        tag_name=3D=3D'TEXTAREA')) return;=0A=
        =0A=
      var pointer =3D [Event.pointerX(event), Event.pointerY(event)];=0A=
      var pos     =3D Position.cumulativeOffset(this.element);=0A=
      this.offset =3D [0,1].map( function(i) { return (pointer[i] - =
pos[i]) });=0A=
      =0A=
      Draggables.activate(this);=0A=
      Event.stop(event);=0A=
    }=0A=
  },=0A=
  =0A=
  startDrag: function(event) {=0A=
    this.dragging =3D true;=0A=
    if(!this.delta)=0A=
      this.delta =3D this.currentDelta();=0A=
    =0A=
    if(this.options.zindex) {=0A=
      this.originalZ =3D =
parseInt(Element.getStyle(this.element,'z-index') || 0);=0A=
      this.element.style.zIndex =3D this.options.zindex;=0A=
    }=0A=
    =0A=
    if(this.options.ghosting) {=0A=
      this._clone =3D this.element.cloneNode(true);=0A=
      this.element._originallyAbsolute =3D =
(this.element.getStyle('position') =3D=3D 'absolute');=0A=
      if (!this.element._originallyAbsolute)=0A=
        Position.absolutize(this.element);=0A=
      this.element.parentNode.insertBefore(this._clone, this.element);=0A=
    }=0A=
    =0A=
    if(this.options.scroll) {=0A=
      if (this.options.scroll =3D=3D window) {=0A=
        var where =3D this._getWindowScroll(this.options.scroll);=0A=
        this.originalScrollLeft =3D where.left;=0A=
        this.originalScrollTop =3D where.top;=0A=
      } else {=0A=
        this.originalScrollLeft =3D this.options.scroll.scrollLeft;=0A=
        this.originalScrollTop =3D this.options.scroll.scrollTop;=0A=
      }=0A=
    }=0A=
    =0A=
    Draggables.notify('onStart', this, event);=0A=
        =0A=
    if(this.options.starteffect) this.options.starteffect(this.element);=0A=
  },=0A=
  =0A=
  updateDrag: function(event, pointer) {=0A=
    if(!this.dragging) this.startDrag(event);=0A=
    =0A=
    if(!this.options.quiet){=0A=
      Position.prepare();=0A=
      Droppables.show(pointer, this.element);=0A=
    }=0A=
    =0A=
    Draggables.notify('onDrag', this, event);=0A=
    =0A=
    this.draw(pointer);=0A=
    if(this.options.change) this.options.change(this);=0A=
    =0A=
    if(this.options.scroll) {=0A=
      this.stopScrolling();=0A=
      =0A=
      var p;=0A=
      if (this.options.scroll =3D=3D window) {=0A=
        with(this._getWindowScroll(this.options.scroll)) { p =3D [ left, =
top, left+width, top+height ]; }=0A=
      } else {=0A=
        p =3D Position.page(this.options.scroll);=0A=
        p[0] +=3D this.options.scroll.scrollLeft + Position.deltaX;=0A=
        p[1] +=3D this.options.scroll.scrollTop + Position.deltaY;=0A=
        p.push(p[0]+this.options.scroll.offsetWidth);=0A=
        p.push(p[1]+this.options.scroll.offsetHeight);=0A=
      }=0A=
      var speed =3D [0,0];=0A=
      if(pointer[0] < (p[0]+this.options.scrollSensitivity)) speed[0] =
=3D pointer[0]-(p[0]+this.options.scrollSensitivity);=0A=
      if(pointer[1] < (p[1]+this.options.scrollSensitivity)) speed[1] =
=3D pointer[1]-(p[1]+this.options.scrollSensitivity);=0A=
      if(pointer[0] > (p[2]-this.options.scrollSensitivity)) speed[0] =
=3D pointer[0]-(p[2]-this.options.scrollSensitivity);=0A=
      if(pointer[1] > (p[3]-this.options.scrollSensitivity)) speed[1] =
=3D pointer[1]-(p[3]-this.options.scrollSensitivity);=0A=
      this.startScrolling(speed);=0A=
    }=0A=
    =0A=
    // fix AppleWebKit rendering=0A=
    if(Prototype.Browser.WebKit) window.scrollBy(0,0);=0A=
    =0A=
    Event.stop(event);=0A=
  },=0A=
  =0A=
  finishDrag: function(event, success) {=0A=
    this.dragging =3D false;=0A=
    =0A=
    if(this.options.quiet){=0A=
      Position.prepare();=0A=
      var pointer =3D [Event.pointerX(event), Event.pointerY(event)];=0A=
      Droppables.show(pointer, this.element);=0A=
    }=0A=
=0A=
    if(this.options.ghosting) {=0A=
      if (!this.element._originallyAbsolute)=0A=
        Position.relativize(this.element);=0A=
      delete this.element._originallyAbsolute;=0A=
      Element.remove(this._clone);=0A=
      this._clone =3D null;=0A=
    }=0A=
=0A=
    var dropped =3D false; =0A=
    if(success) { =0A=
      dropped =3D Droppables.fire(event, this.element); =0A=
      if (!dropped) dropped =3D false; =0A=
    }=0A=
    if(dropped && this.options.onDropped) =
this.options.onDropped(this.element);=0A=
    Draggables.notify('onEnd', this, event);=0A=
=0A=
    var revert =3D this.options.revert;=0A=
    if(revert && Object.isFunction(revert)) revert =3D =
revert(this.element);=0A=
    =0A=
    var d =3D this.currentDelta();=0A=
    if(revert && this.options.reverteffect) {=0A=
      if (dropped =3D=3D 0 || revert !=3D 'failure')=0A=
        this.options.reverteffect(this.element,=0A=
          d[1]-this.delta[1], d[0]-this.delta[0]);=0A=
    } else {=0A=
      this.delta =3D d;=0A=
    }=0A=
=0A=
    if(this.options.zindex)=0A=
      this.element.style.zIndex =3D this.originalZ;=0A=
=0A=
    if(this.options.endeffect) =0A=
      this.options.endeffect(this.element);=0A=
      =0A=
    Draggables.deactivate(this);=0A=
    Droppables.reset();=0A=
  },=0A=
  =0A=
  keyPress: function(event) {=0A=
    if(event.keyCode!=3DEvent.KEY_ESC) return;=0A=
    this.finishDrag(event, false);=0A=
    Event.stop(event);=0A=
  },=0A=
  =0A=
  endDrag: function(event) {=0A=
    if(!this.dragging) return;=0A=
    this.stopScrolling();=0A=
    this.finishDrag(event, true);=0A=
    Event.stop(event);=0A=
  },=0A=
  =0A=
  draw: function(point) {=0A=
    var pos =3D Position.cumulativeOffset(this.element);=0A=
    if(this.options.ghosting) {=0A=
      var r   =3D Position.realOffset(this.element);=0A=
      pos[0] +=3D r[0] - Position.deltaX; pos[1] +=3D r[1] - =
Position.deltaY;=0A=
    }=0A=
    =0A=
    var d =3D this.currentDelta();=0A=
    pos[0] -=3D d[0]; pos[1] -=3D d[1];=0A=
    =0A=
    if(this.options.scroll && (this.options.scroll !=3D window && =
this._isScrollChild)) {=0A=
      pos[0] -=3D this.options.scroll.scrollLeft-this.originalScrollLeft;=0A=
      pos[1] -=3D this.options.scroll.scrollTop-this.originalScrollTop;=0A=
    }=0A=
    =0A=
    var p =3D [0,1].map(function(i){ =0A=
      return (point[i]-pos[i]-this.offset[i]) =0A=
    }.bind(this));=0A=
    =0A=
    if(this.options.snap) {=0A=
      if(Object.isFunction(this.options.snap)) {=0A=
        p =3D this.options.snap(p[0],p[1],this);=0A=
      } else {=0A=
      if(Object.isArray(this.options.snap)) {=0A=
        p =3D p.map( function(v, i) {=0A=
          return (v/this.options.snap[i]).round()*this.options.snap[i] =
}.bind(this))=0A=
      } else {=0A=
        p =3D p.map( function(v) {=0A=
          return (v/this.options.snap).round()*this.options.snap =
}.bind(this))=0A=
      }=0A=
    }}=0A=
    =0A=
    var style =3D this.element.style;=0A=
    if((!this.options.constraint) || =
(this.options.constraint=3D=3D'horizontal'))=0A=
      style.left =3D p[0] + "px";=0A=
    if((!this.options.constraint) || =
(this.options.constraint=3D=3D'vertical'))=0A=
      style.top  =3D p[1] + "px";=0A=
    =0A=
    if(style.visibility=3D=3D"hidden") style.visibility =3D ""; // fix =
gecko rendering=0A=
  },=0A=
  =0A=
  stopScrolling: function() {=0A=
    if(this.scrollInterval) {=0A=
      clearInterval(this.scrollInterval);=0A=
      this.scrollInterval =3D null;=0A=
      Draggables._lastScrollPointer =3D null;=0A=
    }=0A=
  },=0A=
  =0A=
  startScrolling: function(speed) {=0A=
    if(!(speed[0] || speed[1])) return;=0A=
    this.scrollSpeed =3D =
[speed[0]*this.options.scrollSpeed,speed[1]*this.options.scrollSpeed];=0A=
    this.lastScrolled =3D new Date();=0A=
    this.scrollInterval =3D setInterval(this.scroll.bind(this), 10);=0A=
  },=0A=
  =0A=
  scroll: function() {=0A=
    var current =3D new Date();=0A=
    var delta =3D current - this.lastScrolled;=0A=
    this.lastScrolled =3D current;=0A=
    if(this.options.scroll =3D=3D window) {=0A=
      with (this._getWindowScroll(this.options.scroll)) {=0A=
        if (this.scrollSpeed[0] || this.scrollSpeed[1]) {=0A=
          var d =3D delta / 1000;=0A=
          this.options.scroll.scrollTo( left + d*this.scrollSpeed[0], =
top + d*this.scrollSpeed[1] );=0A=
        }=0A=
      }=0A=
    } else {=0A=
      this.options.scroll.scrollLeft +=3D this.scrollSpeed[0] * delta / =
1000;=0A=
      this.options.scroll.scrollTop  +=3D this.scrollSpeed[1] * delta / =
1000;=0A=
    }=0A=
    =0A=
    Position.prepare();=0A=
    Droppables.show(Draggables._lastPointer, this.element);=0A=
    Draggables.notify('onDrag', this);=0A=
    if (this._isScrollChild) {=0A=
      Draggables._lastScrollPointer =3D Draggables._lastScrollPointer || =
$A(Draggables._lastPointer);=0A=
      Draggables._lastScrollPointer[0] +=3D this.scrollSpeed[0] * delta =
/ 1000;=0A=
      Draggables._lastScrollPointer[1] +=3D this.scrollSpeed[1] * delta =
/ 1000;=0A=
      if (Draggables._lastScrollPointer[0] < 0)=0A=
        Draggables._lastScrollPointer[0] =3D 0;=0A=
      if (Draggables._lastScrollPointer[1] < 0)=0A=
        Draggables._lastScrollPointer[1] =3D 0;=0A=
      this.draw(Draggables._lastScrollPointer);=0A=
    }=0A=
    =0A=
    if(this.options.change) this.options.change(this);=0A=
  },=0A=
  =0A=
  _getWindowScroll: function(w) {=0A=
    var T, L, W, H;=0A=
    with (w.document) {=0A=
      if (w.document.documentElement && documentElement.scrollTop) {=0A=
        T =3D documentElement.scrollTop;=0A=
        L =3D documentElement.scrollLeft;=0A=
      } else if (w.document.body) {=0A=
        T =3D body.scrollTop;=0A=
        L =3D body.scrollLeft;=0A=
      }=0A=
      if (w.innerWidth) {=0A=
        W =3D w.innerWidth;=0A=
        H =3D w.innerHeight;=0A=
      } else if (w.document.documentElement && =
documentElement.clientWidth) {=0A=
        W =3D documentElement.clientWidth;=0A=
        H =3D documentElement.clientHeight;=0A=
      } else {=0A=
        W =3D body.offsetWidth;=0A=
        H =3D body.offsetHeight=0A=
      }=0A=
    }=0A=
    return { top: T, left: L, width: W, height: H };=0A=
  }=0A=
});=0A=
=0A=
Draggable._dragging =3D { };=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var SortableObserver =3D Class.create({=0A=
  initialize: function(element, observer) {=0A=
    this.element   =3D $(element);=0A=
    this.observer  =3D observer;=0A=
    this.lastValue =3D Sortable.serialize(this.element);=0A=
  },=0A=
  =0A=
  onStart: function() {=0A=
    this.lastValue =3D Sortable.serialize(this.element);=0A=
  },=0A=
  =0A=
  onEnd: function() {=0A=
    Sortable.unmark();=0A=
    if(this.lastValue !=3D Sortable.serialize(this.element))=0A=
      this.observer(this.element)=0A=
  }=0A=
});=0A=
=0A=
var Sortable =3D {=0A=
  SERIALIZE_RULE: /^[^_\-](?:[A-Za-z0-9\-\_]*)[_](.*)$/,=0A=
  =0A=
  sortables: { },=0A=
  =0A=
  _findRootElement: function(element) {=0A=
    while (element.tagName.toUpperCase() !=3D "BODY") {  =0A=
      if(element.id && Sortable.sortables[element.id]) return element;=0A=
      element =3D element.parentNode;=0A=
    }=0A=
  },=0A=
=0A=
  options: function(element) {=0A=
    element =3D Sortable._findRootElement($(element));=0A=
    if(!element) return;=0A=
    return Sortable.sortables[element.id];=0A=
  },=0A=
  =0A=
  destroy: function(element){=0A=
    var s =3D Sortable.options(element);=0A=
    =0A=
    if(s) {=0A=
      Draggables.removeObserver(s.element);=0A=
      s.droppables.each(function(d){ Droppables.remove(d) });=0A=
      s.draggables.invoke('destroy');=0A=
      =0A=
      delete Sortable.sortables[s.element.id];=0A=
    }=0A=
  },=0A=
=0A=
  create: function(element) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend({ =0A=
      element:     element,=0A=
      tag:         'li',       // assumes li children, override with =
tag: 'tagname'=0A=
      dropOnEmpty: false,=0A=
      tree:        false,=0A=
      treeTag:     'ul',=0A=
      overlap:     'vertical', // one of 'vertical', 'horizontal'=0A=
      constraint:  'vertical', // one of 'vertical', 'horizontal', false=0A=
      containment: element,    // also takes array of elements (or =
id's); or false=0A=
      handle:      false,      // or a CSS class=0A=
      only:        false,=0A=
      delay:       0,=0A=
      hoverclass:  null,=0A=
      ghosting:    false,=0A=
      quiet:       false, =0A=
      scroll:      false,=0A=
      scrollSensitivity: 20,=0A=
      scrollSpeed: 15,=0A=
      format:      this.SERIALIZE_RULE,=0A=
      =0A=
      // these take arrays of elements or ids and can be =0A=
      // used for better initialization performance=0A=
      elements:    false,=0A=
      handles:     false,=0A=
      =0A=
      onChange:    Prototype.emptyFunction,=0A=
      onUpdate:    Prototype.emptyFunction=0A=
    }, arguments[1] || { });=0A=
=0A=
    // clear any old sortable with same element=0A=
    this.destroy(element);=0A=
=0A=
    // build options for the draggables=0A=
    var options_for_draggable =3D {=0A=
      revert:      true,=0A=
      quiet:       options.quiet,=0A=
      scroll:      options.scroll,=0A=
      scrollSpeed: options.scrollSpeed,=0A=
      scrollSensitivity: options.scrollSensitivity,=0A=
      delay:       options.delay,=0A=
      ghosting:    options.ghosting,=0A=
      constraint:  options.constraint,=0A=
      handle:      options.handle };=0A=
=0A=
    if(options.starteffect)=0A=
      options_for_draggable.starteffect =3D options.starteffect;=0A=
=0A=
    if(options.reverteffect)=0A=
      options_for_draggable.reverteffect =3D options.reverteffect;=0A=
    else=0A=
      if(options.ghosting) options_for_draggable.reverteffect =3D =
function(element) {=0A=
        element.style.top  =3D 0;=0A=
        element.style.left =3D 0;=0A=
      };=0A=
=0A=
    if(options.endeffect)=0A=
      options_for_draggable.endeffect =3D options.endeffect;=0A=
=0A=
    if(options.zindex)=0A=
      options_for_draggable.zindex =3D options.zindex;=0A=
=0A=
    // build options for the droppables  =0A=
    var options_for_droppable =3D {=0A=
      overlap:     options.overlap,=0A=
      containment: options.containment,=0A=
      tree:        options.tree,=0A=
      hoverclass:  options.hoverclass,=0A=
      onHover:     Sortable.onHover=0A=
    }=0A=
    =0A=
    var options_for_tree =3D {=0A=
      onHover:      Sortable.onEmptyHover,=0A=
      overlap:      options.overlap,=0A=
      containment:  options.containment,=0A=
      hoverclass:   options.hoverclass=0A=
    }=0A=
=0A=
    // fix for gecko engine=0A=
    Element.cleanWhitespace(element); =0A=
=0A=
    options.draggables =3D [];=0A=
    options.droppables =3D [];=0A=
=0A=
    // drop on empty handling=0A=
    if(options.dropOnEmpty || options.tree) {=0A=
      Droppables.add(element, options_for_tree);=0A=
      options.droppables.push(element);=0A=
    }=0A=
=0A=
    (options.elements || this.findElements(element, options) || =
[]).each( function(e,i) {=0A=
      var handle =3D options.handles ? $(options.handles[i]) :=0A=
        (options.handle ? $(e).select('.' + options.handle)[0] : e); =0A=
      options.draggables.push(=0A=
        new Draggable(e, Object.extend(options_for_draggable, { handle: =
handle })));=0A=
      Droppables.add(e, options_for_droppable);=0A=
      if(options.tree) e.treeNode =3D element;=0A=
      options.droppables.push(e);      =0A=
    });=0A=
    =0A=
    if(options.tree) {=0A=
      (Sortable.findTreeElements(element, options) || []).each( =
function(e) {=0A=
        Droppables.add(e, options_for_tree);=0A=
        e.treeNode =3D element;=0A=
        options.droppables.push(e);=0A=
      });=0A=
    }=0A=
=0A=
    // keep reference=0A=
    this.sortables[element.id] =3D options;=0A=
=0A=
    // for onupdate=0A=
    Draggables.addObserver(new SortableObserver(element, =
options.onUpdate));=0A=
=0A=
  },=0A=
=0A=
  // return all suitable-for-sortable elements in a guaranteed order=0A=
  findElements: function(element, options) {=0A=
    return Element.findChildren(=0A=
      element, options.only, options.tree ? true : false, options.tag);=0A=
  },=0A=
  =0A=
  findTreeElements: function(element, options) {=0A=
    return Element.findChildren(=0A=
      element, options.only, options.tree ? true : false, =
options.treeTag);=0A=
  },=0A=
=0A=
  onHover: function(element, dropon, overlap) {=0A=
    if(Element.isParent(dropon, element)) return;=0A=
=0A=
    if(overlap > .33 && overlap < .66 && Sortable.options(dropon).tree) {=0A=
      return;=0A=
    } else if(overlap>0.5) {=0A=
      Sortable.mark(dropon, 'before');=0A=
      if(dropon.previousSibling !=3D element) {=0A=
        var oldParentNode =3D element.parentNode;=0A=
        element.style.visibility =3D "hidden"; // fix gecko rendering=0A=
        dropon.parentNode.insertBefore(element, dropon);=0A=
        if(dropon.parentNode!=3DoldParentNode) =0A=
          Sortable.options(oldParentNode).onChange(element);=0A=
        Sortable.options(dropon.parentNode).onChange(element);=0A=
      }=0A=
    } else {=0A=
      Sortable.mark(dropon, 'after');=0A=
      var nextElement =3D dropon.nextSibling || null;=0A=
      if(nextElement !=3D element) {=0A=
        var oldParentNode =3D element.parentNode;=0A=
        element.style.visibility =3D "hidden"; // fix gecko rendering=0A=
        dropon.parentNode.insertBefore(element, nextElement);=0A=
        if(dropon.parentNode!=3DoldParentNode) =0A=
          Sortable.options(oldParentNode).onChange(element);=0A=
        Sortable.options(dropon.parentNode).onChange(element);=0A=
      }=0A=
    }=0A=
  },=0A=
  =0A=
  onEmptyHover: function(element, dropon, overlap) {=0A=
    var oldParentNode =3D element.parentNode;=0A=
    var droponOptions =3D Sortable.options(dropon);=0A=
        =0A=
    if(!Element.isParent(dropon, element)) {=0A=
      var index;=0A=
      =0A=
      var children =3D Sortable.findElements(dropon, {tag: =
droponOptions.tag, only: droponOptions.only});=0A=
      var child =3D null;=0A=
            =0A=
      if(children) {=0A=
        var offset =3D Element.offsetSize(dropon, droponOptions.overlap) =
* (1.0 - overlap);=0A=
        =0A=
        for (index =3D 0; index < children.length; index +=3D 1) {=0A=
          if (offset - Element.offsetSize (children[index], =
droponOptions.overlap) >=3D 0) {=0A=
            offset -=3D Element.offsetSize (children[index], =
droponOptions.overlap);=0A=
          } else if (offset - (Element.offsetSize (children[index], =
droponOptions.overlap) / 2) >=3D 0) {=0A=
            child =3D index + 1 < children.length ? children[index + 1] =
: null;=0A=
            break;=0A=
          } else {=0A=
            child =3D children[index];=0A=
            break;=0A=
          }=0A=
        }=0A=
      }=0A=
      =0A=
      dropon.insertBefore(element, child);=0A=
      =0A=
      Sortable.options(oldParentNode).onChange(element);=0A=
      droponOptions.onChange(element);=0A=
    }=0A=
  },=0A=
=0A=
  unmark: function() {=0A=
    if(Sortable._marker) Sortable._marker.hide();=0A=
  },=0A=
=0A=
  mark: function(dropon, position) {=0A=
    // mark on ghosting only=0A=
    var sortable =3D Sortable.options(dropon.parentNode);=0A=
    if(sortable && !sortable.ghosting) return; =0A=
=0A=
    if(!Sortable._marker) {=0A=
      Sortable._marker =3D =0A=
        ($('dropmarker') || =
Element.extend(document.createElement('DIV'))).=0A=
          =
hide().addClassName('dropmarker').setStyle({position:'absolute'});=0A=
      =
document.getElementsByTagName("body").item(0).appendChild(Sortable._marke=
r);=0A=
    }    =0A=
    var offsets =3D Position.cumulativeOffset(dropon);=0A=
    Sortable._marker.setStyle({left: offsets[0]+'px', top: offsets[1] + =
'px'});=0A=
    =0A=
    if(position=3D=3D'after')=0A=
      if(sortable.overlap =3D=3D 'horizontal') =0A=
        Sortable._marker.setStyle({left: (offsets[0]+dropon.clientWidth) =
+ 'px'});=0A=
      else=0A=
        Sortable._marker.setStyle({top: (offsets[1]+dropon.clientHeight) =
+ 'px'});=0A=
    =0A=
    Sortable._marker.show();=0A=
  },=0A=
  =0A=
  _tree: function(element, options, parent) {=0A=
    var children =3D Sortable.findElements(element, options) || [];=0A=
  =0A=
    for (var i =3D 0; i < children.length; ++i) {=0A=
      var match =3D children[i].id.match(options.format);=0A=
=0A=
      if (!match) continue;=0A=
      =0A=
      var child =3D {=0A=
        id: encodeURIComponent(match ? match[1] : null),=0A=
        element: element,=0A=
        parent: parent,=0A=
        children: [],=0A=
        position: parent.children.length,=0A=
        container: $(children[i]).down(options.treeTag)=0A=
      }=0A=
      =0A=
      /* Get the element containing the children and recurse over it */=0A=
      if (child.container)=0A=
        this._tree(child.container, options, child)=0A=
      =0A=
      parent.children.push (child);=0A=
    }=0A=
=0A=
    return parent; =0A=
  },=0A=
=0A=
  tree: function(element) {=0A=
    element =3D $(element);=0A=
    var sortableOptions =3D this.options(element);=0A=
    var options =3D Object.extend({=0A=
      tag: sortableOptions.tag,=0A=
      treeTag: sortableOptions.treeTag,=0A=
      only: sortableOptions.only,=0A=
      name: element.id,=0A=
      format: sortableOptions.format=0A=
    }, arguments[1] || { });=0A=
    =0A=
    var root =3D {=0A=
      id: null,=0A=
      parent: null,=0A=
      children: [],=0A=
      container: element,=0A=
      position: 0=0A=
    }=0A=
    =0A=
    return Sortable._tree(element, options, root);=0A=
  },=0A=
=0A=
  /* Construct a [i] index for a particular node */=0A=
  _constructIndex: function(node) {=0A=
    var index =3D '';=0A=
    do {=0A=
      if (node.id) index =3D '[' + node.position + ']' + index;=0A=
    } while ((node =3D node.parent) !=3D null);=0A=
    return index;=0A=
  },=0A=
=0A=
  sequence: function(element) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend(this.options(element), arguments[1] || =
{ });=0A=
    =0A=
    return $(this.findElements(element, options) || []).map( =
function(item) {=0A=
      return item.id.match(options.format) ? =
item.id.match(options.format)[1] : '';=0A=
    });=0A=
  },=0A=
=0A=
  setSequence: function(element, new_sequence) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend(this.options(element), arguments[2] || =
{ });=0A=
    =0A=
    var nodeMap =3D { };=0A=
    this.findElements(element, options).each( function(n) {=0A=
        if (n.id.match(options.format))=0A=
            nodeMap[n.id.match(options.format)[1]] =3D [n, n.parentNode];=0A=
        n.parentNode.removeChild(n);=0A=
    });=0A=
   =0A=
    new_sequence.each(function(ident) {=0A=
      var n =3D nodeMap[ident];=0A=
      if (n) {=0A=
        n[1].appendChild(n[0]);=0A=
        delete nodeMap[ident];=0A=
      }=0A=
    });=0A=
  },=0A=
  =0A=
  serialize: function(element) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend(Sortable.options(element), =
arguments[1] || { });=0A=
    var name =3D encodeURIComponent(=0A=
      (arguments[1] && arguments[1].name) ? arguments[1].name : =
element.id);=0A=
    =0A=
    if (options.tree) {=0A=
      return Sortable.tree(element, arguments[1]).children.map( function =
(item) {=0A=
        return [name + Sortable._constructIndex(item) + "[id]=3D" + =0A=
                =
encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));=0A=
      }).flatten().join('&');=0A=
    } else {=0A=
      return Sortable.sequence(element, arguments[1]).map( =
function(item) {=0A=
        return name + "[]=3D" + encodeURIComponent(item);=0A=
      }).join('&');=0A=
    }=0A=
  }=0A=
}=0A=
=0A=
// Returns true if child is contained within element=0A=
Element.isParent =3D function(child, element) {=0A=
  if (!child.parentNode || child =3D=3D element) return false;=0A=
  if (child.parentNode =3D=3D element) return true;=0A=
  return Element.isParent(child.parentNode, element);=0A=
}=0A=
=0A=
Element.findChildren =3D function(element, only, recursive, tagName) {   =0A=
  if(!element.hasChildNodes()) return null;=0A=
  tagName =3D tagName.toUpperCase();=0A=
  if(only) only =3D [only].flatten();=0A=
  var elements =3D [];=0A=
  $A(element.childNodes).each( function(e) {=0A=
    if(e.tagName && e.tagName.toUpperCase()=3D=3DtagName &&=0A=
      (!only || (Element.classNames(e).detect(function(v) { return =
only.include(v) }))))=0A=
        elements.push(e);=0A=
    if(recursive) {=0A=
      var grandchildren =3D Element.findChildren(e, only, recursive, =
tagName);=0A=
      if(grandchildren) elements.push(grandchildren);=0A=
    }=0A=
  });=0A=
=0A=
  return (elements.length>0 ? elements.flatten() : []);=0A=
}=0A=
=0A=
Element.offsetSize =3D function (element, type) {=0A=
  return element['offset' + ((type=3D=3D'vertical' || =
type=3D=3D'height') ? 'Height' : 'Width')];=0A=
}=0A=

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://devimages.apple.com/global/scripts/browserdetect.js

/**=0A=
 * Same logic as before. Have removed some detection capabilities in an =
effort=0A=
 * to reduce reliance on browser detection in general.=0A=
 * =0A=
 * If there is a particualr detection you feel you need please file a =
ticket=0A=
 * with the request or add the detection yourself with the exact reason =
you=0A=
 * need said detection. Hopefully we'll be able to keep the number of=0A=
 * detection utility functions to a minimum in favor of behavioral =
testing.=0A=
 * =0A=
 * This may also be the place for very common behavioral functions.=0A=
 * =0A=
 */=0A=
=0A=
if (typeof(AC) =3D=3D=3D "undefined") { =0A=
	AC =3D {}; =0A=
}=0A=
=0A=
AC.Detector =3D {=0A=
=0A=
	getAgent: function() {=0A=
		return navigator.userAgent.toLowerCase();=0A=
	},=0A=
	=0A=
	// detect platform=0A=
	isMac: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return !!agent.match(/mac/i);=0A=
	},=0A=
	=0A=
	isWin: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return !!agent.match(/win/i);=0A=
	},=0A=
	=0A=
	isWin2k: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return this.isWin(agent) && (agent.match(/nt\s*5/i));=0A=
	},=0A=
	=0A=
	isWinVista: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return this.isWin(agent) && (agent.match(/nt\s*6/i));=0A=
	},=0A=
	=0A=
	// detect browser=0A=
	isWebKit: function(userAgent) {=0A=
        if(this._isWebKit =3D=3D=3D undefined) {=0A=
            var agent =3D userAgent || this.getAgent();=0A=
            this._isWebKit =3D  !!agent.match(/AppleWebKit/i);=0A=
            this.isWebKit =3D function() {return this._isWebKit};=0A=
        }=0A=
        return this._isWebKit;=0A=
	},=0A=
    =0A=
	isSafari2: function(userAgent) {=0A=
        if(this._isSafari2 =3D=3D=3D undefined) {=0A=
            if(!this.isWebKit()) this._isSafari2 =3D false;=0A=
            else {=0A=
                var ua =3D navigator.userAgent.toLowerCase(); =0A=
               var version=3D parseInt(parseFloat( ua.substring( =
ua.lastIndexOf('safari/') + 7 ) ));=0A=
                this._isSafari2 =3D (version >=3D 419);=0A=
            }=0A=
            this.isSafari2 =3D function() {return this._isSafari2};=0A=
        }=0A=
        return this._isSafari2;=0A=
	},=0A=
	=0A=
	isOpera: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return !!agent.match(/opera/i);=0A=
	},=0A=
	=0A=
	isIE: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return !!agent.match(/msie/i);=0A=
	},=0A=
	=0A=
	isIEStrict: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return agent.match(/msie/i) && !this.isOpera(agent);=0A=
	},=0A=
	=0A=
	isFirefox: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return !!agent.match(/firefox/i);=0A=
	},=0A=
=0A=
	//deprecated, use isMobile=0A=
	isiPhone: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return this.isMobile(agent);=0A=
	},=0A=
	=0A=
	isMobile: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return this.isWebKit(agent) && agent.match(/Mobile/i);=0A=
	},=0A=
	=0A=
	// itunes compabibility=0A=
	isiTunesOK: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return this.isMac(agent) || this.isWin2k(agent);=0A=
	},=0A=
	=0A=
	isQTInstalled: function() {=0A=
		=0A=
		var qtInstalled =3D false;=0A=
		=0A=
		if(navigator.plugins && navigator.plugins.length) {=0A=
			=0A=
			for(var i=3D0; i < navigator.plugins.length; i++ ) {=0A=
				=0A=
				var plugin =3D navigator.plugins[i];=0A=
				=0A=
				if(plugin.name.indexOf("QuickTime") > -1) { =0A=
					qtInstalled =3D true; =0A=
				}=0A=
			}=0A=
		} else if (typeof(execScript) !=3D 'undefined') {=0A=
			qtObj =3D false; //global variable written to by vbscript for ie=0A=
			execScript('on error resume next: qtObj =3D =
IsObject(CreateObject("QuickTimeCheckObject.QuickTimeCheck.1"))','VBScrip=
t');=0A=
			qtInstalled =3D qtObj;=0A=
		}=0A=
		=0A=
		return qtInstalled;=0A=
	},=0A=
	=0A=
	getQTVersion: function() {=0A=
		=0A=
		var version =3D "0";=0A=
		=0A=
		if (navigator.plugins && navigator.plugins.length) {=0A=
			for (var i =3D 0; i < navigator.plugins.length; i++) {=0A=
				=0A=
				var plugin =3D navigator.plugins[i];=0A=
				=0A=
				//Match: QuickTime Plugin X.Y.Z=0A=
				var match =3D plugin.name.match(/quicktime\D*([\.\d]*)/i);=0A=
				if (match && match[1]) {=0A=
					version =3D match[1];=0A=
				}=0A=
			}=0A=
		} else if (typeof(execScript) !=3D 'undefined') {=0A=
			ieQTVersion=3Dnull;=0A=
=0A=
			execScript('on error resume next: ieQTVersion =3D =
CreateObject("QuickTimeCheckObject.QuickTimeCheck.1").QuickTimeVersion','=
VBScript');=0A=
=0A=
			if(ieQTVersion){=0A=
			    version =3D (ieQTVersion >> 24).toString(16);=0A=
			}=0A=
		}=0A=
		=0A=
		return version;=0A=
	},=0A=
	=0A=
	isQTCompatible: function(required, actual) {=0A=
		=0A=
		function areCompatible(required, actual) {=0A=
			=0A=
			var requiredValue =3D parseInt(required[0], 10);=0A=
			if (isNaN(requiredValue)) {=0A=
				requiredValue =3D 0;=0A=
			}=0A=
			=0A=
			var actualValue =3D parseInt(actual[0], 10);=0A=
			if (isNaN(actualValue)) {=0A=
				actualValue =3D 0;=0A=
			}=0A=
			=0A=
			if (requiredValue =3D=3D=3D actualValue) {=0A=
				if (required.length > 1) {=0A=
					return areCompatible(required.slice(1), actual.slice(1));=0A=
				} else {=0A=
					return true;=0A=
				}=0A=
			} else if (requiredValue < actualValue) {=0A=
				return true;=0A=
			} else {=0A=
				return false;=0A=
			}=0A=
		}=0A=
=0A=
		var expectedVersion =3D required.split(/\./);=0A=
		var actualVersion =3D actual ? actual.split(/\./) : =
this.getQTVersion().split(/\./);=0A=
		=0A=
		return areCompatible(expectedVersion, actualVersion);=0A=
		=0A=
	},=0A=
	=0A=
	isValidQTAvailable: function(required) {=0A=
		return this.isQTInstalled() && this.isQTCompatible(required);=0A=
	}=0A=
	=0A=
};
------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://devimages.apple.com/global/scripts/apple_core.js

=0A=
//TODO load dependencies: browserdetect=0A=
=0A=
//onDOMReady Event Extension=0A=
//http://clientside.cnet.com/code-snippets/event-scripting/a-dom-ready-ex=
tension-for-prototype/=0A=
Object.extend(Event, {=0A=
  _domReady : function() {=0A=
    if (arguments.callee.done) return;=0A=
    arguments.callee.done =3D true;=0A=
=0A=
    if (this._timer)  clearInterval(this._timer);=0A=
    AC.isDomReady =3D true;=0A=
    if(this._readyCallbacks) this._readyCallbacks.each(function(f) { f() =
});=0A=
    this._readyCallbacks =3D null;=0A=
},=0A=
  onDOMReady : function(f) {=0A=
	if(AC.isDomReady) {=0A=
		f();=0A=
	}=0A=
    else {=0A=
		if (!this._readyCallbacks) {=0A=
			  var domReady =3D this._domReady.bind(this);=0A=
			  =0A=
			  if (document.addEventListener)=0A=
				document.addEventListener("DOMContentLoaded", domReady, false);=0A=
				=0A=
				/*@cc_on @*/=0A=
				/*@if (@_win32)=0A=
					document.write("<script id=3D__ie_onload defer =
src=3Djavascript:void(0)><\/script>");=0A=
					document.getElementById("__ie_onload").onreadystatechange =3D =
function() {=0A=
						if (this.readyState =3D=3D "complete") domReady(); =0A=
					};=0A=
				/*@end @*/=0A=
				=0A=
				if (/WebKit/i.test(navigator.userAgent)) { =0A=
				  this._timer =3D setInterval(function() {=0A=
					if (/loaded|complete/.test(document.readyState)) domReady(); =0A=
				  }, 10);=0A=
				}=0A=
				=0A=
				Event.observe(window, 'load', domReady);=0A=
				Event._readyCallbacks =3D  [];=0A=
			}=0A=
			Event._readyCallbacks.push(f);=0A=
	  }=0A=
  }=0A=
});=0A=
=0A=
=0A=
if (typeof(AC) =3D=3D "undefined") AC =3D {};=0A=
=0A=
AC.decorateSearchInput =3D function(field, options) {=0A=
	=0A=
	var searchField =3D $(field);=0A=
	var standIn =3D null;=0A=
=0A=
	var results =3D 0;=0A=
	var placeholder =3D '';=0A=
	var autosave =3D '';=0A=
=0A=
	if(options) {=0A=
		=0A=
		if(options.results) { results =3D options.results; }=0A=
		if(options.placeholder) { placeholder =3D options.placeholder; }=0A=
		if(options.autosave) { autosave =3D options.autosave; }=0A=
		=0A=
	}=0A=
	=0A=
	if(AC.Detector.isWebKit()) {=0A=
		=0A=
		searchField.setAttribute('type', 'search');=0A=
		if(!searchField.getAttribute('results')) {=0A=
			searchField.setAttribute('results', results);=0A=
		}=0A=
		=0A=
		if(null !=3D placeholder) {=0A=
			searchField.setAttribute('placeholder', placeholder);=0A=
			searchField.setAttribute('autosave', autosave);=0A=
		}=0A=
		=0A=
	} else {=0A=
		=0A=
		//prevent browser from doing its own autocomplete, threw odd xul =0A=
		//error on reset sometimes, although this feels a little=0A=
		//heavy handed=0A=
		searchField.setAttribute('autocomplete', 'off');=0A=
		=0A=
		//replace the field with a standin while we create the wrapper=0A=
		//we can't lose the reference to this field as other objects may=0A=
		//have already registered listeners on this field=0A=
		=0A=
		standIn =3D document.createElement('input');=0A=
		searchField.parentNode.replaceChild(standIn, searchField)=0A=
=0A=
		var left =3D document.createElement('span');=0A=
		Element.addClassName(left, 'left');=0A=
	=0A=
		var right =3D document.createElement('span');=0A=
		Element.addClassName(right, 'right');=0A=
		=0A=
		var reset =3D document.createElement('div');=0A=
		Element.addClassName(reset, 'reset');=0A=
		=0A=
		var wrapper =3D document.createElement('div');=0A=
		Element.addClassName(wrapper, 'search-wrapper');=0A=
		=0A=
		var alreadyHasPlaceholder =3D field.value =3D=3D placeholder;=0A=
		var isEmpty =3D field.value.length =3D=3D 0;=0A=
		=0A=
		if (alreadyHasPlaceholder || isEmpty) {=0A=
			searchField.value =3D placeholder;=0A=
			Element.addClassName(wrapper, 'blurred');=0A=
			Element.addClassName(wrapper, 'empty');=0A=
		}=0A=
	=0A=
		wrapper.appendChild(left);=0A=
		wrapper.appendChild(searchField);=0A=
		wrapper.appendChild(right);=0A=
		wrapper.appendChild(reset);=0A=
	=0A=
		var focus =3D function() {=0A=
			=0A=
			var blurred =3D Element.hasClassName(wrapper, 'blurred');=0A=
=0A=
			//need to check for flag AND placeholder lest somebody need to =0A=
			//search for the placeholder text itself=0A=
			if(searchField.value =3D=3D placeholder && blurred) {=0A=
				searchField.value =3D '';=0A=
			}=0A=
			=0A=
			Element.removeClassName(wrapper, 'blurred');=0A=
		}=0A=
		Event.observe(searchField, 'focus', focus);=0A=
		=0A=
		var blur =3D function() {=0A=
			=0A=
			if(searchField.value =3D=3D '') {=0A=
				Element.addClassName(wrapper, 'empty');=0A=
				searchField.value =3D placeholder;=0A=
			}=0A=
			=0A=
			Element.addClassName(wrapper, 'blurred');=0A=
		}=0A=
		Event.observe(searchField, 'blur', blur);=0A=
		=0A=
		=0A=
		var toggleReset =3D function() {=0A=
			=0A=
			if(searchField.value.length >=3D 0) {=0A=
				Element.removeClassName(wrapper, 'empty');=0A=
			}=0A=
		}=0A=
		Event.observe(searchField, 'keydown', toggleReset);=0A=
	=0A=
	=0A=
		var resetField =3D function() {=0A=
			return( function(evt) {=0A=
				=0A=
				var escaped =3D false;=0A=
				=0A=
				if(evt.type =3D=3D 'keydown') {=0A=
					if(evt.keyCode !=3D 27) {=0A=
						return; //if it's not escape ignore it=0A=
					} else {=0A=
						escaped =3D true;=0A=
					}=0A=
				}=0A=
				=0A=
				searchField.blur(); //can't change value while in field=0A=
				searchField.value =3D '';=0A=
				Element.addClassName(wrapper, 'empty');=0A=
				searchField.focus();=0A=
=0A=
			})=0A=
		}=0A=
		Event.observe(reset, 'mousedown', resetField());=0A=
		Event.observe(searchField, 'keydown', resetField());=0A=
	=0A=
		if (standIn) {=0A=
			standIn.parentNode.replaceChild(wrapper, standIn);=0A=
		}=0A=
		=0A=
	}=0A=
}=0A=
=0A=
// this is called Element2 because=0A=
// adding methods to Element BLOWS UP IE7 =0A=
// for a reason I still haven't got to the bottom=0A=
// of.  It appears to be fine though, as long=0A=
// as you don't try to add additional methods=0A=
// to Element itself.=0A=
var Element2 =3D {};=0A=
Element2.Methods =3D {=0A=
	=0A=
	getInnerDimensions: function(element) {=0A=
    	=0A=
		element =3D $(element);=0A=
		var d =3D Element.getDimensions(element);=0A=
		=0A=
		var innerHeight =3D d.height;=0A=
		var styleOf =3D Element.getStyle;=0A=
		innerHeight -=3D styleOf(element, 'border-top-width') && =
styleOf(element, 'border-top-width') !=3D 'medium' ? =
parseInt(styleOf(element, 'border-top-width'), 10) : 0;=0A=
		innerHeight -=3D styleOf(element, 'border-bottom-width') && =
styleOf(element, 'border-bottom-width') !=3D 'medium' ? =
parseInt(styleOf(element, 'border-bottom-width'), 10) : 0;=0A=
		innerHeight -=3D styleOf(element, 'padding-top') ? =
parseInt(styleOf(element, 'padding-top'), 10) : 0;=0A=
		innerHeight -=3D styleOf(element, 'padding-bottom') ? =
parseInt(styleOf(element, 'padding-bottom'), 10) : 0;=0A=
=0A=
		var innerWidth =3D d.width;=0A=
		innerWidth -=3D styleOf(element, 'border-left-width') && =
styleOf(element, 'border-left-width') !=3D 'medium' ? =
parseInt(styleOf(element, 'border-left-width'), 10) : 0;=0A=
		innerWidth -=3D styleOf(element, 'border-right-width') && =
styleOf(element, 'border-right-width') !=3D 'medium' ? =
parseInt(styleOf(element, 'border-right-width'), 10) : 0;=0A=
		innerWidth -=3D styleOf(element, 'padding-left') ? =
parseInt(styleOf(element, 'padding-left'), 10) : 0;=0A=
		innerWidth -=3D styleOf(element, 'padding-right') ? =
parseInt(styleOf(element, 'padding-right'), 10) : 0;=0A=
=0A=
	    return {width: innerWidth, height: innerHeight};=0A=
	},=0A=
	=0A=
	/*=0A=
		Yes, we understand this is a hack. Safari is calculating margins for =
unpositioned elements=0A=
		as the total remaining viewport width=0A=
	*/=0A=
	getOuterDimensions: function(element) {=0A=
		element =3D $(element);=0A=
		var clone =3D element.cloneNode(true);=0A=
		=0A=
		document.body.appendChild(clone);=0A=
		Element.setStyle(clone, { position: "absolute", visibility: "hidden" =
});=0A=
		var d =3D Element.getDimensions(clone);=0A=
		=0A=
		var outerHeight =3D d.height;=0A=
		var styleOf =3D Element.getStyle;=0A=
		outerHeight +=3D styleOf(clone, 'margin-top') ? =
parseInt(styleOf(clone, 'margin-top'), 10) : 0;=0A=
		outerHeight +=3D styleOf(clone, 'margin-bottom') ? =
parseInt(styleOf(clone, 'margin-bottom'), 10) : 0;=0A=
=0A=
		var outerWidth =3D d.width;=0A=
		outerWidth +=3D styleOf(clone, 'margin-left') ? =
parseInt(styleOf(clone, 'margin-left'), 10) : 0;=0A=
		outerWidth +=3D styleOf(clone, 'margin-right') ? =
parseInt(styleOf(clone, 'margin-right'), 10) : 0;=0A=
=0A=
		Element.remove(clone);=0A=
		=0A=
		return {width: outerWidth, height: outerHeight};=0A=
	},=0A=
	=0A=
	removeAllChildNodes: function(element) {=0A=
		element =3D $(element);=0A=
		if(! element) { return; }=0A=
		=0A=
		while (element.hasChildNodes()) {=0A=
	  		element.removeChild(element.lastChild);=0A=
		}=0A=
	}=0A=
	=0A=
};=0A=
=0A=
Object.extend(Element, Element2.Methods);=0A=
=0A=
=0A=
=0A=
=0A=
/**=0A=
* Omniture Tracking library=0A=
*/=0A=
if (typeof(AC.Tracking) =3D=3D "undefined") {AC.Tracking =3D {};}=0A=
=0A=
AC.Tracking.getLinkClicked =3D function(target) {=0A=
	=0A=
	if (!target) {=0A=
		return null;=0A=
	}=0A=
	=0A=
	while (target.nodeName !=3D 'A' && target.nodeName !=3D 'BODY') {=0A=
		target =3D target.parentNode;=0A=
	}=0A=
	=0A=
	if (!target.href) {=0A=
		target =3D null;=0A=
	}=0A=
	=0A=
	return target;=0A=
};=0A=
=0A=
AC.Tracking.trackLinksWithin =3D function(container, test, title, =
properties, options) {=0A=
	=0A=
	$(container).observe('mousedown', function(evt) {=0A=
		=0A=
		var target =3D AC.Tracking.getLinkClicked(Event.element(evt));=0A=
		=0A=
		if (target && test(target)) {=0A=
			=0A=
			if (options && options.beforeTrack) {=0A=
				// provides a way to alter the properties or the title in some way =
for the mousedown=0A=
				// most felixble way to capture what link was actually clicked or =
whatever else=0A=
				// you want at the time of the event=0A=
				var altered =3D options.beforeTrack(target, title, properties);=0A=
				if (altered) {=0A=
					title =3D altered.title;=0A=
					properties =3D altered.properties;=0A=
				}=0A=
			}=0A=
			=0A=
			AC.Tracking.trackClick(properties, this, 'o', title);=0A=
		}=0A=
		=0A=
	});=0A=
	=0A=
}=0A=
=0A=
/**=0A=
 * Effectively tags all links within a container conforming to the =
supplied =0A=
 * test function reference with the specified key and value.=0A=
 * =0A=
 * The test argument should be a function reference expecting the link =
as =0A=
 * its first and only parameter. It should simply return true or false =0A=
 * indicating whether the link should be tagged or not.=0A=
 */=0A=
AC.Tracking.tagLinksWithin =3D function(container, key, value, test) {=0A=
	=0A=
	$(container).observe('mousedown', function(evt) {=0A=
		=0A=
		var link =3D Event.element(evt);=0A=
=0A=
		if (!link) {=0A=
			return;=0A=
		}=0A=
=0A=
		while (link.nodeName !=3D 'A' && link.nodeName !=3D 'BODY') {=0A=
			link =3D link.parentNode;=0A=
		}=0A=
		=0A=
		if (link.href && test(link)) {=0A=
			AC.Tracking.tagLink(link, key, value);=0A=
		}=0A=
		=0A=
		link =3D null;=0A=
	})=0A=
	=0A=
};=0A=
=0A=
/**=0A=
 * Appends the specified key and value to the querystring of the =
supplied =0A=
 * anchor's href attribute.=0A=
 */=0A=
AC.Tracking.tagLink =3D function(link, key, value) {=0A=
	=0A=
	var href =3D link.getAttribute('href');=0A=
	=0A=
	if (href.match(/\?/)) {=0A=
		var params =3D href.toQueryParams();=0A=
		params[key] =3D value;=0A=
		href =3D href.split(/\?/)[0] + '?' + $H(params).toQueryString();=0A=
	} else {=0A=
		href +=3D '?' + key + '=3D' + value;=0A=
	}=0A=
	=0A=
	link.setAttribute('href', href);=0A=
};=0A=
=0A=
/**=0A=
 * Makes a tracking request=0A=
 * =0A=
 * Note: Typically you won't need to call this directly, instead you =
should=0A=
 * track events using either TrackClick or TrackPage whihc provide more=0A=
 * friendly interfaces to this method =0A=
 * =0A=
 * @trackingMethod the method of Omniture tracking to use=0A=
 * @properties associative array of property names and their associated =
values to track=0A=
 * @options associate array of options to use in this tracking context, =0A=
 * 	some of these are required depending upon the trackingMethod you =
have chose=0A=
 */=0A=
AC.Tracking.track =3D function(trackingMethod, properties, options) {=0A=
=0A=
	if (typeof(s_gi) =3D=3D 'undefined' || !s_gi) {=0A=
		return;=0A=
	}=0A=
=0A=
	options =3D options || {};=0A=
=0A=
	//use existing tracking account if available, or use one from the =
options=0A=
	if (typeof(s_account) !=3D 'undefined') {=0A=
		s =3D s_gi(s_account)=0A=
	} else if (options.s_account){=0A=
		s =3D s_gi(options.s_account);=0A=
	} else {=0A=
		return;=0A=
	}=0A=
=0A=
	if (trackingMethod =3D=3D s.tl) {=0A=
		=0A=
		var linkTrackVars =3D ''=0A=
		=0A=
		for (var key in properties) {=0A=
			linkTrackVars +=3D key + ',';=0A=
		}=0A=
		linkTrackVars =3D linkTrackVars.replace(/,$/, '');=0A=
		=0A=
		s.linkTrackVars =3D linkTrackVars;=0A=
	} else {=0A=
		s.linkTrackVars =3D '';=0A=
	}=0A=
=0A=
	//clear properties set by default within a page=0A=
	s.prop4 =3D "";=0A=
	s.g_prop4 =3D "";=0A=
	s.prop6 =3D "";=0A=
	s.g_prop6 =3D "";=0A=
	s.pageName =3D "";=0A=
	s.g_pageName =3D "";=0A=
	s.pageURL =3D "";=0A=
	s.g_pageURL =3D "";=0A=
	s.g_channel =3D "";=0A=
	=0A=
	var sanitize =3D function(value) {=0A=
	    if (typeof(value) =3D=3D "string") {=0A=
	        return =
value.replace(/[\'\"\=C3=A2=E2=82=AC=C5=93\=C3=A2=E2=82=AC=C2=9D\=C3=A2=E2=
=82=AC=CB=9C\=C3=A2=E2=82=AC=E2=84=A2]/g, '');=0A=
	    } else {=0A=
	        return value;=0A=
	    }=0A=
	}=0A=
=0A=
	for (var key in properties) {=0A=
=0A=
		s[key] =3D sanitize(properties[key]);=0A=
=0A=
		if (key =3D=3D 'events') {=0A=
			s.linkTrackEvents =3D sanitize(properties[key]);=0A=
		}=0A=
	}=0A=
=0A=
	if (trackingMethod =3D=3D s.t) {=0A=
		void(s.t());=0A=
	} else {=0A=
		s.tl(options.obj, options.linkType, sanitize(options.title));=0A=
	}=0A=
	=0A=
	for (var key in properties) {=0A=
		s[key] =3D '';=0A=
		=0A=
		if (key =3D=3D 'events') {=0A=
			s.linkTrackEvents =3D 'None';=0A=
		}=0A=
	}=0A=
=0A=
};=0A=
=0A=
/**=0A=
 * Uses the Omniture s.tl Tracking method to track a "click"=0A=
 * =0A=
 * @properties associative array of params and associated values=0A=
 * @obj object for context, usually "this"=0A=
 * @linkType type of link for Omniture usually 'o'=0A=
 * @title human readable title for this link that shows up in reports=0A=
 * @options associative array of options to apply to this tracking =
context (currently no valid options are available)=0A=
 */=0A=
AC.Tracking.trackClick =3D function(properties, obj, linkType, title, =
options) {=0A=
	=0A=
	var options =3D {=0A=
		obj: obj,=0A=
		linkType: linkType,=0A=
		title: title=0A=
	};=0A=
	=0A=
	AC.Tracking.track(s.tl, properties, options);=0A=
}=0A=
=0A=
/**=0A=
 * Uses the Omniture s.t Tracking method to track a "page load"=0A=
 * =0A=
 * @properties associative array of params and associated values=0A=
 * @options associative array of options to apply to this tracking =
context=0A=
 */=0A=
AC.Tracking.trackPage =3D function(properties, options) {=0A=
	AC.Tracking.track(s.t, properties, options);=0A=
}=0A=
=0A=
=0A=
Element.Methods.childNodeWithNodeTypeAtIndex =3D function(element, =
nodeType,index) {=0A=
	var node =3D element.firstChild;=0A=
    if (!node) return null;=0A=
	var i=3D0;=0A=
    while (node) {=0A=
		if(node.nodeType =3D=3D=3D nodeType) {=0A=
			if(index =3D=3D=3D i) {=0A=
				return node;=0A=
			}=0A=
			i++;=0A=
		}=0A=
		node =3D node.nextSibling;=0A=
	}=0A=
    return null;=0A=
};=0A=
=0A=
=0A=
=0A=
/* String Extensions Begin */=0A=
String.prototype.lastPathComponent =3D function() {=0A=
	var index =3D this.lastIndexOf("/");=0A=
	if(index !=3D -1) {=0A=
		return this.substring(index+1,this.length-1);=0A=
	}=0A=
	else return null;=0A=
}=0A=
=0A=
String.prototype.stringByDeletingLastPathComponent =3D function() {=0A=
	var index =3D this.lastIndexOf("/");=0A=
	if(index !=3D -1) {=0A=
		return this.slice(0,index);=0A=
	}=0A=
	else return null;=0A=
}=0A=
=0A=
String.prototype.stringByAppendingPathComponent =3D function(value) {=0A=
 	return (this.lastIndexOf("/") !=3D=3D (this.length-1)) ? =
(this+"/"+value) : (this+value);=0A=
}=0A=
=0A=
String.prototype.stringByRemovingPrefix =3D function(value) {=0A=
	var index =3D this.indexOf(value);=0A=
	if(index > -1) {=0A=
		var result =3D this.substring(index+value.length,this.length);=0A=
		return result;=0A=
	}=0A=
	else {=0A=
		return this;=0A=
	}=0A=
}=0A=
String.prototype.pathExtension =3D function() {=0A=
	var lastPathComponent =3D this.lastPathComponent();=0A=
	var index =3D lastPathComponent.lastIndexOf(".");=0A=
	if(index !=3D -1) {=0A=
		return lastPathComponent.slice(index,lastPathComponent.length);=0A=
	}=0A=
	else return "";=0A=
}=0A=
=0A=
=0A=
/* String Extensions End */=0A=
=0A=
/* Array Extensions Begin */=0A=
=0A=
Array.prototype.addObjectsFromArray =3D function(array) {=0A=
	if(array.constructor =3D=3D=3D Array) {=0A=
		this.push.apply(this,array);=0A=
	}=0A=
	else {=0A=
		for(var i=3D0,item;(item =3D array[i]);i++) {=0A=
			this[this.length] =3D item;=0A=
		}=0A=
	}=0A=
}=0A=
=0A=
//To let an array behave like a node list=0A=
Array.prototype.item =3D function(index) {=0A=
	return this[index];=0A=
}=0A=
 =0A=
/* Array Extensions End */=0A=
=0A=
=0A=
document._importNode =3D function(node, allChildren) {=0A=
	/* find the node type to import */=0A=
	if (node.nodeType =3D=3D=3D Node.ELEMENT_NODE) {=0A=
			/* create a new element */=0A=
			var newNode =3D document.createElement(node.nodeName);=0A=
			var i, il;=0A=
			/* does the node have any attributes to add? */=0A=
			if (node.attributes && node.attributes.length > 0)=0A=
				/* add all of the attributes */=0A=
				var nodeAttributes =3D node.attributes;=0A=
				var iNodeName, iNodeValue;=0A=
				for (i =3D 0, il =3D node.attributes.length; i < il;) {=0A=
					iNodeName =3D nodeAttributes[i].nodeName;=0A=
					iNodeValue =3D node.getAttribute(nodeAttributes[i++].nodeName);=0A=
					if(iNodeName =3D=3D=3D "class") {=0A=
						//iNodeName =3D "className";=0A=
						newNode.setAttribute("className", iNodeValue);=0A=
					}=0A=
					newNode.setAttribute(iNodeName, iNodeValue);=0A=
				}=0A=
			/* are we going after children too, and does the node have any? */=0A=
			if (allChildren && node.childNodes && node.childNodes.length > 0){=0A=
				/* recursively get all of the child nodes */=0A=
				for (i =3D 0, il =3D node.childNodes.length; i < il;)=0A=
					newNode.appendChild(document._importNode(node.childNodes[i++], =
allChildren));=0A=
			}=0A=
			return newNode;=0A=
	}=0A=
		else if (node.nodeType =3D=3D=3D Node.TEXT_NODE) {=0A=
			return document.createTextNode(node.nodeValue);=0A=
		}=0A=
		else if(node.nodeType =3D=3D=3D Node.COMMENT_NODE) {=0A=
			return document.createComment(node.nodeValue);=0A=
		}=0A=
		else if(node.nodeType =3D=3D=3D Node.CDATA_SECTION_NODE) {=0A=
			return document.createCDATASection(node.nodeValue);=0A=
		}=0A=
		else return null;=0A=
};=0A=
if(!document.importNode) {=0A=
	document.importNode =3D document._importNode;=0A=
}=0A=
=0A=
if(AC.Detector.isIEStrict()) {=0A=
=0A=
	Element.Methods.hasAttribute =3D function(element, attributeName ) {=0A=
		if ( attributeName =3D=3D "class") attributeName =3D "className";=0A=
		else if(attributeName =3D=3D "for") attributeName =3D "htmlFor";=0A=
		var result =3D element.getAttribute(attributeName);=0A=
		return ((result !=3D null) && (result !=3D=3D ""));=0A=
		=0A=
	};=0A=
=0A=
	document._getElementsByName =3D document.getElementsByName;=0A=
	document._HTMLElementsWithName =3D =
["a","apple","button","form","frame","iframe","img","input","object","map=
","meta","param","textarea","select"];=0A=
=0A=
	document.getElementsByName =3D function(name) {=0A=
		var _HTMLElementsWithName =3D this._HTMLElementsWithName;=0A=
		var result =3D [], ieResult, i, iNode;=0A=
		for(var e=3D0, element;(element =3D _HTMLElementsWithName[e]);e++) {=0A=
			ieResult =3D document.getElementsByTagName(element);=0A=
			for(i =3D 0;(iNode=3DieResult[i]); i++) {=0A=
				if(iNode.name =3D=3D=3D name) {=0A=
					 result[result.length] =3D iNode;=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return result;=0A=
	}=0A=
}=0A=

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://devimages.apple.com/global/scripts/search_decorator.js

Event.onDOMReady(function() {=0A=
	=0A=
	var inputs =3D document.getElementsByTagName('input');=0A=
	=0A=
	for (var i =3D 0; i < inputs.length; i++) {=0A=
		var input =3D $(inputs[i])=0A=
		if(input.hasClassName('prettysearch')) {=0A=
			=0A=
			var options =3D {};=0A=
			=0A=
			//these are unique autosave names for globally used=0A=
			//autosave collections=0A=
			=0A=
			//after decoration you can simply:=0A=
			//	field.setAttribute('autosave', 'autosaveName');=0A=
			=0A=
			if(input.hasClassName('applesearch')) {=0A=
				options.autosave =3D 'Apple.com';=0A=
			} else if (input.hasClassName('reseller')) {=0A=
				options.autosave =3D 'Apple.com Reseller';=0A=
			}=0A=
			=0A=
			if(input.parentNode.tagName =3D=3D 'LABEL') {=0A=
				=0A=
				var placeholderText =3D "";=0A=
				=0A=
				var labelElement =3D =
input.up().getElementsByClassName('prettyplaceholder')[0];=0A=
				=0A=
				//either grab text in a classed element=0A=
				if(labelElement) {=0A=
					placeholderText =3D labelElement.innerHTML;=0A=
				=0A=
				//or grab text from right inside the label=0A=
				} else {=0A=
					placeholderText =3D input.parentNode.firstChild.nodeValue;=0A=
					input.parentNode.firstChild.nodeValue =3D '';=0A=
				}=0A=
				=0A=
				placeholderText =3D placeholderText.split('\n')[0];=0A=
				options.placeholder =3D placeholderText;=0A=
=0A=
			}=0A=
			=0A=
			AC.decorateSearchInput(input, options);=0A=
		}=0A=
	}	=0A=
});=0A=

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://devimages.apple.com/global/scripts/adc_core.js

Event.onDOMReady(function() {=0A=
	var container =3D $(document.body);=0A=
	container.addClassName('hasjs');=0A=
});=0A=
=0A=
Event.onDOMReady(function() {=0A=
	var tables =3D $$('table.stroke');=0A=
	tables.each(function(table) {=0A=
		var select =3D function(selector1, selector2) {=0A=
			var cells =3D table.select(selector1);=0A=
			cells =3D cells.concat(table.select(selector2));=0A=
			return cells;=0A=
		}.bind(table);=0A=
=0A=
		var cells =3D select('tr:first-child th', 'tr:first-child td');=0A=
		cells.each(function(cell) { cell.style.borderTop =3D 'none' });=0A=
=0A=
		var cells =3D select('tr:last-child th', 'tr:last-child td');=0A=
		cells.each(function(cell) { cell.style.borderBottom =3D 'none' });=0A=
=0A=
		var cells =3D select('tr th:first-child', 'tr td:first-child');=0A=
		cells.each(function(cell) { cell.style.borderLeft =3D 'none' });=0A=
=0A=
		var cells =3D select('tr th:last-child', 'tr td:last-child');=0A=
		cells.each(function(cell) { cell.style.borderRight =3D 'none' });=0A=
	});=0A=
});=0A=
=0A=
=0A=
=0A=
// =0A=
// ADC Core=0A=
// =0A=
=0A=
if (typeof(ADC) =3D=3D "undefined") ADC =3D {};=0A=
=0A=
ADC.cancelEvent =3D function(evt) {=0A=
	if (evt) {=0A=
		var link =3D evt.findElement('a');=0A=
		if (link) {=0A=
			if (!link.href.match('#')) {=0A=
				evt.stop();=0A=
			} else if (!AC.Detector.isWebKit() || (AC.Detector.isWebKit() && =
parseInt(AC.Detector.getAgent().match(/version\/(\d)/)[1])>2)) {=0A=
				evt.stop();=0A=
				document.location.hash =3D link.href.replace(/.*#/, '');=0A=
			}=0A=
		}=0A=
	}=0A=
}=0A=
=0A=
ADC.Menus =3D Class.create({=0A=
	menus: [],=0A=
=0A=
	initialize: function(menus, event) {=0A=
		this.setMenus(menus, event);=0A=
	},=0A=
=0A=
	setMenus: function(menus, event) {=0A=
		if (!event) var event =3D 'click';=0A=
=0A=
		menus.each(function(menu) {=0A=
			var menu =3D new ADC.Menu(menu, event);=0A=
			this.setEvent(menu, event);=0A=
			this.menus.push(menu);=0A=
		}.bind(this));=0A=
	},=0A=
=0A=
	setEvent: function(menu, event) {=0A=
		Event.observe(menu.menu, event, function(evt) {=0A=
			ADC.cancelEvent(evt);=0A=
			var menus =3D this.menus.without(menu);=0A=
			menus.each(function(menu) {=0A=
				menu.close();=0A=
			});=0A=
		}.bind(this), false);=0A=
	}=0A=
});=0A=
=0A=
ADC.Menu =3D Class.create({=0A=
	initialize: function(menu, event) {=0A=
		this.menu =3D menu;=0A=
		this.setEvents(event);=0A=
	},=0A=
=0A=
	setEvents: function(event) {=0A=
		if (!event) var event =3D 'click';=0A=
		=0A=
		if (event =3D=3D 'click') this.setHovers();=0A=
=0A=
		Event.observe(this.menu, event, this.toggleMenu.bind(this), false);=0A=
	},=0A=
=0A=
	setHovers: function(event) {=0A=
		Event.observe(this.menu, 'mouseover', function() {=0A=
			Element.addClassName(this.menu, 'hover');=0A=
		}.bind(this), false);=0A=
=0A=
		Event.observe(this.menu, 'mouseout', function() {=0A=
			Element.removeClassName(this.menu, 'hover');=0A=
		}.bind(this), false);=0A=
	},=0A=
	=0A=
	linkWithin: function(evt) {=0A=
		var link =3D evt.findElement('a');=0A=
		if (link.up().up().up() =3D=3D this.menu) {=0A=
			document.location =3D link.href;=0A=
			return true;=0A=
		}=0A=
		=0A=
		return false;=0A=
	},=0A=
=0A=
	toggleMenu: function(evt) {=0A=
		if (!this.linkWithin(evt)) ADC.cancelEvent(evt);=0A=
=0A=
		if (!this.menu.hasClassName('active')) {=0A=
			this.open();=0A=
		} else {=0A=
			this.close();=0A=
		}=0A=
	},=0A=
=0A=
	open: function() {=0A=
		this.menu.addClassName('active');=0A=
	},=0A=
=0A=
	close: function() {=0A=
		this.menu.removeClassName('active');=0A=
	}=0A=
=0A=
});=0A=

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://images.apple.com/global/metrics/js/cid_check.js

if (typeof(AC) =3D=3D "undefined") {AC =3D {};}=0A=
AC.AosCheck =3D function() {	=0A=
	if (document.location.search && s_account) {=0A=
		var dls =3D document.location.search;=0A=
		if (dls.indexOf("?cid=3DAOS-") > -1 || dls.indexOf("&cid=3DAOS-") > -1)=0A=
			s_account +=3D ",applestoreWW";=0A=
	}=0A=
}=0A=
AC.AosCheck();=0A=

------=_NextPart_000_003E_01C8FC9E.8072D220
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://images.apple.com/global/metrics/js/s_code_h.js

/* SiteCatalyst code version: H.8. Copyright 1997-2007 Omniture, Inc. =
More info available at http://www.omniture.com */=0A=
// 2007-01-26: Added Relative Link Patch=0A=
// 2007-01-30: Fixed Relative Link Patch=0A=
// 2007-07-24: ClickMap Image Map Patch=0A=
// 2008-04-03: Genesis DFA integration plugin, doPlugins function call, =
s.variableProvider=0A=
/************************ ADDITIONAL FEATURES ************************=0A=
     Dynamic Report Suite Selection=0A=
*/=0A=
/* Specify the Report Suite ID(s) to track here */=0A=
//var s_account=3D"appleglobal"=0A=
var s=3Ds_gi(s_account)=0A=
/************************** CONFIG SECTION **************************/=0A=
/* You may add or alter any code config here. */=0A=
=0A=
/* E-commerce Config */=0A=
s.currencyCode=3D"USD"=0A=
/* Link Tracking Config */=0A=
s.trackDownloadLinks=3Dtrue=0A=
s.trackExternalLinks=3Dtrue=0A=
s.trackInlineStats=3Dtrue=0A=
s.linkDownloadFileTypes=3D"zip,wav,mp3,mp4,doc,pdf,xls,rss,dmg,sit,pkg,ex=
e,xml,mov"=0A=
s.linkInternalFilters=3D"javascript:,apple.com"=0A=
s.linkLeaveQueryString=3Dfalse=0A=
s.linkTrackVars=3D"campaign"=0A=
s.linkTrackEvents=3D"None"=0A=
s.variableProvider =
=3D'DFA#1513429:v46=3D[["DFA-"+lis+"-"+lip+"-"+lastimp+"-"+lastimptime+"-=
"+lcs+"-"+lcp+"-"+lastclk+"-"+lastclktime]]';=0A=
=0A=
function getZipCode() {=0A=
	var cookies =3D document.cookie.split(/;/g);=0A=
	=0A=
	for (var i =3D cookies.length - 1; i >=3D 0; i--){=0A=
		var cookie =3D cookies[i];=0A=
		zipCode =3D cookie.match(/PostalCode=3D(\d{5})/i);=0A=
		if(zipCode) {=0A=
			zipCode =3D zipCode[1];=0A=
			break;=0A=
		}=0A=
	}=0A=
	=0A=
	if(!zipCode) {=0A=
		zipCode =3D "No Zip";=0A=
	}=0A=
	=0A=
	return zipCode;=0A=
}=0A=
=0A=
function QTCheck() {=0A=
	if (typeof(AC) !=3D "undefined" && typeof(AC.Detector) !=3D "undefined" =
&& typeof(AC.Detector.getQTVersion) !=3D "undefined") {=0A=
		=0A=
		if (AC.Detector.isMobile()) {=0A=
			return "Mobile"=0A=
		}=0A=
		=0A=
		var version =3D AC.Detector.getQTVersion();=0A=
		if ("0" =3D=3D version) {=0A=
			return "No QuickTime"=0A=
		} else {=0A=
			return version;=0A=
		}=0A=
	} else {=0A=
		return "Not detected"=0A=
	}=0A=
}=0A=
=0A=
if (typeof(iTunesDetected) =3D=3D=3D 'function') {=0A=
    =0A=
    var activeX =3D document.createElement('object');=0A=
    activeX.setAttribute('width', 1);=0A=
    activeX.setAttribute('height', 1);=0A=
    activeX.id =3D 'iTunesDetectorIE';=0A=
    activeX.setAttribute('classid', =
"clsid:D719897A-B07A-4C0C-AEA9-9B663A28DFCB");=0A=
    document.getElementsByTagName('head')[0].appendChild(activeX);=0A=
    =0A=
    s.prop12 =3D iTunesDetected() ? "iTunes" : "No iTunes";=0A=
}=0A=
=0A=
=0A=
var isIE  =3D (navigator.appVersion.indexOf("MSIE") !=3D -1) ? true : =
false;=0A=
var isWin =3D (navigator.appVersion.toLowerCase().indexOf("win") !=3D =
-1) ? true : false;=0A=
var isOpera =3D (navigator.userAgent.indexOf("Opera") !=3D -1) ? true : =
false;=0A=
=0A=
=0A=
// Flash Player Version Detection - Rev 1.6=0A=
// Detect Client Browser type=0A=
// Copyright(c) 2005-2006 Adobe Macromedia Software, LLC. All rights =
reserved.=0A=
function ControlVersion()=0A=
{=0A=
	var version;=0A=
	var axo;=0A=
	var e;=0A=
=0A=
=0A=
	try {=0A=
		// version will be set for 7.X or greater players=0A=
		axo =3D new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7");=0A=
		version =3D axo.GetVariable("$version");=0A=
	} catch (e) {=0A=
	}=0A=
=0A=
	if (!version)=0A=
	{=0A=
		try {=0A=
			// version will be set for 6.X players only=0A=
			axo =3D new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6");=0A=
			=0A=
			// installed player is some revision of 6.0=0A=
			// GetVariable("$version") crashes for versions 6.0.22 through 6.0.29,=0A=
			// so we have to be careful. =0A=
			=0A=
			// default to the first public version=0A=
			version =3D "WIN 6,0,21,0";=0A=
=0A=
			// throws if AllowScripAccess does not exist (introduced in 6.0r47)		=0A=
			axo.AllowScriptAccess =3D "always";=0A=
=0A=
			// safe to call for 6.0r47 or greater=0A=
			version =3D axo.GetVariable("$version");=0A=
=0A=
		} catch (e) {=0A=
		}=0A=
	}=0A=
=0A=
	if (!version)=0A=
	{=0A=
		try {=0A=
			// version will be set for 4.X or 5.X player=0A=
			axo =3D new ActiveXObject("ShockwaveFlash.ShockwaveFlash.3");=0A=
			version =3D axo.GetVariable("$version");=0A=
		} catch (e) {=0A=
		}=0A=
	}=0A=
=0A=
	if (!version)=0A=
	{=0A=
		try {=0A=
			// version will be set for 3.X player=0A=
			axo =3D new ActiveXObject("ShockwaveFlash.ShockwaveFlash.3");=0A=
			version =3D "WIN 3,0,18,0";=0A=
		} catch (e) {=0A=
		}=0A=
	}=0A=
=0A=
	if (!version)=0A=
	{=0A=
		try {=0A=
			// version will be set for 2.X player=0A=
			axo =3D new ActiveXObject("ShockwaveFlash.ShockwaveFlash");=0A=
			version =3D "WIN 2,0,0,11";=0A=
		} catch (e) {=0A=
			version =3D "No Flash";=0A=
		}=0A=
	}=0A=
	=0A=
	return version;=0A=
}=0A=
=0A=
// JavaScript helper required to detect Flash Player PlugIn version =
information=0A=
function GetSwfVer(){=0A=
	// NS/Opera version >=3D 3 check for Flash plugin in plugin array=0A=
	var flashVer =3D 'No Flash';=0A=
	=0A=
	if (navigator.plugins !=3D null && navigator.plugins.length > 0) {=0A=
		if (navigator.plugins["Shockwave Flash 2.0"] || =
navigator.plugins["Shockwave Flash"]) {=0A=
			var swVer2 =3D navigator.plugins["Shockwave Flash 2.0"] ? " 2.0" : "";=0A=
			var flashDescription =3D navigator.plugins["Shockwave Flash" + =
swVer2].description;=0A=
			var descArray =3D flashDescription.split(" ");=0A=
			var tempArrayMajor =3D descArray[2].split(".");=0A=
			var versionMajor =3D tempArrayMajor[0];=0A=
			var versionMinor =3D tempArrayMajor[1];=0A=
			var versionRevision =3D descArray[3];=0A=
			if (versionRevision =3D=3D "") {=0A=
				versionRevision =3D descArray[4];=0A=
			}=0A=
			if (versionRevision[0] =3D=3D "d") {=0A=
				versionRevision =3D versionRevision.substring(1);=0A=
			} else if (versionRevision[0] =3D=3D "r") {=0A=
				versionRevision =3D versionRevision.substring(1);=0A=
				if (versionRevision.indexOf("d") > 0) {=0A=
					versionRevision =3D versionRevision.substring(0, =
versionRevision.indexOf("d"));=0A=
				}=0A=
			}=0A=
			var flashVer =3D versionMajor + "." + versionMinor + "." + =
versionRevision;=0A=
		}=0A=
	}=0A=
	=0A=
	else if ( isIE && isWin && !isOpera ) {=0A=
		flashVer =3D ControlVersion();=0A=
	}=0A=
	=0A=
	return flashVer;=0A=
}=0A=
=0A=
function FormatFlashVersion(reported) {=0A=
	=0A=
	var matched =3D reported.match(/^(?:win[\D0]*)?(\d)/i);=0A=
	if (matched && matched[1]) {=0A=
		reported =3D matched[1];=0A=
	}=0A=
	=0A=
	return reported;=0A=
}=0A=
=0A=
/* Plugin Config */=0A=
s.usePlugins=3Dtrue=0A=
function s_doPlugins(s) {=0A=
	/* Add calls to plugins here */=0A=
	=0A=
	/* Plugin Example: Genesis DFA 0.6 */=0A=
	s.partnerDFACheck("dfa_cookie","dfa","prop44");=0A=
	//Cookie stored as 'dfa_cookie'=0A=
	//Looks for 'dfa' in query string for mid visit click throughs=0A=
	=0A=
	// Processor Platform: 2007-06-08=0A=
	s.prop5=3Dnavigator.platform;=0A=
	=0A=
	// Redirect Referrer=0A=
	tempVar1=3Ds.getQueryParam('ref');=0A=
	if(tempVar1)s.referrer=3DtempVar1;=0A=
	=0A=
	// Redirect Alias=0A=
	tempVar2=3Ds.getQueryParam('alias');=0A=
	if(tempVar2)s.server=3DtempVar2;=0A=
	=0A=
	// External Campaigns=0A=
	if(!s.campaign){=0A=
		s.campaign=3Ds.getQueryParam('cid');=0A=
		s.campaign=3Ds.getValOnce(s.campaign,"s_campaign",0)=0A=
		=0A=
	// Email ClickMap=0A=
		s.setClickMapEmail('Email_PageName,Email_OID','Email_OT');=0A=
	}=0A=
	=0A=
	// Internal Campaigns - Session=0A=
	s.eVar7=3Ds.getQueryParam('aid');=0A=
	s.eVar7=3Ds.getValOnce(s.eVar7,'s_var_7',0)=0A=
	=0A=
	// Internal Campaigns - 30 Days=0A=
	s.eVar8=3Ds.getValOnce(s.eVar8,'s_var_8',30)=0A=
	=0A=
	// Campaign Pathing=0A=
	s.prop6=3Ds.getQueryParam('cp')+": "+s.pageName;=0A=
	=0A=
	// Campaign Channel=0A=
	s.prop11=3Ds.getQueryParam('sr');=0A=
	=0A=
	// Zip code=0A=
	s.prop15=3DgetZipCode();=0A=
	=0A=
	/* getNewRepeat 1.0 */=0A=
	s.prop16=3Ds.getNewRepeat();=0A=
	=0A=
	// Mac OS X Versions: 2007-06-08 : Start=0A=
	// Added Leopard: 2007-11-06=0A=
	// Updated Leopard Webkit lookup: 2007-12-20=0A=
	if (typeof(AC) =3D=3D "undefined") {AC =3D {};}=0A=
	=0A=
		AC.AosCheck =3D function() {=0A=
			if (typeof(s) !=3D "undefined") {=0A=
				=0A=
				if (navigator.userAgent.match(/windows/i)) {=0A=
					s.prop9 =3D "windows"=0A=
					return;=0A=
				}=0A=
				=0A=
				var mv =3D AC.getWebkitVersion().major;=0A=
				=0A=
				if (mv > 522) s.prop9 =3D "10.5.x";=0A=
				else if (mv > 400) s.prop9 =3D "10.4.x";=0A=
				else if (mv > 99) s.prop9 =3D "10.3.x";=0A=
				else if (mv > 80) s.prop9 =3D "10.2.x";=0A=
				else s.prop9 =3D "mac unknown or non-safari";=0A=
			}=0A=
		}=0A=
		=0A=
		AC.parseWebkitVersion =3D function(version) {=0A=
		 var bits =3D version.split(".");=0A=
		 var is_nightly =3D (version[version.length - 1] =3D=3D "+");=0A=
		 if (is_nightly) {=0A=
			var minor =3D "+";=0A=
		 } else {=0A=
			var minor =3D parseInt(bits[1]);=0A=
			// If minor is Not a Number (NaN) return an empty string=0A=
			if (isNaN(minor)) {=0A=
			 minor =3D "";=0A=
			}=0A=
		 }=0A=
		 return {major: parseInt(bits[0]), minor: minor, is_nightly: =
is_nightly};=0A=
		}=0A=
		=0A=
		AC.getWebkitVersion =3D function() {=0A=
		 var regex =3D new RegExp("\\(.*\\) AppleWebKit/(.*) \\((.*)");=0A=
		 var matches =3D regex.exec(navigator.userAgent);=0A=
		 if (matches) {=0A=
			var webkit_version =3D AC.parseWebkitVersion(matches[1]);=0A=
		 }=0A=
		 if (webkit_version)=0A=
				return {major: webkit_version['major'], minor: =
webkit_version['minor'], is_nightly: webkit_version['is_nightly']};=0A=
			else // can't resolve version, we're not webkit=0A=
				return {major: 0, minor: 'not webkit', is_nightly: 0};=0A=
		}=0A=
		AC.AosCheck();=0A=
	// Mac OS X Versions: 2007-06-08 : En=0A=
=0A=
=0A=
=0A=
=0A=
	/* Plugin Example: getQueryParam v2.0=0A=
	s.campaign=3Ds.getQueryParam('cid')=0A=
	*/=0A=
=0A=
	/* Plugin Example: getValOnce v0.2=0A=
	s.campaign=3Ds.getValOnce(s.campaign,"s_campaign",0)=0A=
	*/=0A=
	=0A=
	/* Plugin Example: =0A=
		s.setClickMapEmail('Email_PageName,Email_OID,Email_OT');=0A=
	*/=0A=
=0A=
	/* Plugin Example: getAndPersistValue 0.3 */=0A=
	/* param1 - variable to persist */=0A=
	/* param2 - cookie name */=0A=
	/* param1 - Number of days to expiration - 0 for session */=0A=
	/* returns value of persisted variable */=0A=
	/* s.prop1=3Ds.getAndPersistValue(s.campaign,'s_cp_pers',0); */=0A=
=0A=
	/* Plugin Example: getDaysSinceLastVisit 1.0 */=0A=
	/* s.prop1=3Ds.getDaysSinceLastVisit(); */=0A=
	=0A=
	/* Plugin Example: getTimeToComplete 0.4 */=0A=
	/* if(s.events.indexOf('event1')>-1)=0A=
	/* 	s.prop1=3D'start';=0A=
	/* if(s.events.indexOf('event2')>-1)=0A=
	/* 	s.prop1=3D'stop';=0A=
	/* s.prop1=3Ds.getTimeToComplete(s.prop1,'ttc',0); */=0A=
=0A=
	/* Plugin Example: getNewRepeat 1.0 */=0A=
	/* s.prop5=3Ds.getNewRepeat(); */=0A=
	=0A=
	/* Plugin Example: getVisitStart */=0A=
	/* param1 - cookie name */=0A=
	/* returns 1 on first page of visit, otherwise 0  */=0A=
	/* s.prop50=3Ds.getVisitStart("s_visit"); */=0A=
	=0A=
	/* Plugin Example: formAnalysis 2.0	*/=0A=
	/* s.setupFormAnalysis();		*/=0A=
=0A=
	/* Plugin Examples: getPreviousValue =0A=
	// get previous value for s.pageName variable, set to prop5 on every =
page	=0A=
	/*	s.prop5=3Ds.getPreviousValue(s.pageName,'gpv_p5','');=0A=
	// get previous value for s.prop1, set to prop6 only when event1 is in =
the events variable=0A=
	/*	s.prop6=3Ds.getPreviousValue(s.prop1,'gpv_p6','event1');=0A=
	// get previous value for s.prop1, set to prop6 when either event1 or =
event10 is in the events variable=0A=
	/*	s.prop7=3Ds.getPreviousValue(s.channel,'gpv_p4','event1,event10');*/=0A=
=0A=
}=0A=
s.doPlugins=3Ds_doPlugins=0A=
=0A=
/************************** PLUGINS SECTION *************************/=0A=
/*=0A=
* Plugin: getTimeParting 1.4 - Set timeparting values based on time zone =
(15 min)=0A=
*/=0A=
=0A=
s.getTimeParting=3Dnew Function("t","z","y",""=0A=
+"dc=3Dnew Date('1/1/2000');var f=3D15;var ne=3D8;if(dc.getDay()!=3D6||"=0A=
+"dc.getMonth()!=3D0){return'Data Not Available'}else{;z=3DparseInt(z);"=0A=
+"if(y=3D=3D'2009'){f=3D8;ne=3D1};gmar=3Dnew =
Date('3/1/'+y);dsts=3Df-gmar.getDay("=0A=
+");gnov=3Dnew Date('11/1/'+y);dste=3Dne-gnov.getDay();spr=3Dnew =
Date('3/'"=0A=
+"+dsts+'/'+y);fl=3Dnew Date('11/'+dste+'/'+y);cd=3Dnew Date();"=0A=
+"if(cd>spr&&cd<fl){z=3Dz+1}else{z=3Dz};utc=3Dcd.getTime()+(cd.getTimezon=
eO"=0A=
+"ffset()*60000);tz=3Dnew Date(utc + =
(3600000*z));thisy=3Dtz.getFullYear("=0A=
+");var days=3D['Sunday','Monday','Tuesday','Wednesday','Thursday','Fr"=0A=
+"iday','Saturday'];if(thisy!=3Dy){return'Data Not Available'}else{;thi"=0A=
+"sh=3Dtz.getHours();thismin=3Dtz.getMinutes();thisd=3Dtz.getDay();var =
dow=3D"=0A=
+"days[thisd];var ap=3D'AM';var dt=3D'Weekday';var =
mint=3D'00';if(thismin>1"=0A=
+"5&&thismin<30){mint=3D'15'}if(thismin>30&&thismin<45){mint=3D'30'}if(th=
"=0A=
+"ismin>45&&thismin<60){mint=3D'45'}"=0A=
+"if(thish>=3D12){ap=3D'PM';thish=3Dthish-12};if (thish=3D=3D0){th"=0A=
+"ish=3D12};if(thisd=3D=3D6||thisd=3D=3D0){dt=3D'Weekend'};var =
timestring=3Dthish+'"=0A=
+":'+mint+ap;var daystring=3Ddow;var =
endstring=3Ddt;if(t=3D=3D'h'){return tim"=0A=
+"estring}if(t=3D=3D'd'){return daystring};if(t=3D=3D'w'){return en"=0A=
+"dstring}}};"=0A=
);=0A=
/*=0A=
 * Plugin: getQueryParam 2.0 - return query string parameter(s)=0A=
 */=0A=
s.getQueryParam=3Dnew Function("p","d","u",""=0A=
+"var =
s=3Dthis,v=3D'',i,t;d=3Dd?d:'';u=3Du?u:(s.pageURL?s.pageURL:''+s.wd.loc"=0A=
+"ation);u=3Du=3D=3D'f'?''+s.gtfs().location:u;while(p){i=3Dp.indexOf(','=
);i=3D"=0A=
+"i<0?p.length:i;t=3Ds.p_gpv(p.substring(0,i),u);if(t)v+=3Dv?d+t:t;p=3Dp.=
su"=0A=
+"bstring(i=3D=3Dp.length?i:i+1)}return v");=0A=
s.p_gpv=3Dnew Function("k","u",""=0A=
+"var =
s=3Dthis,v=3D'',i=3Du.indexOf('?'),q;if(k&&i>-1){q=3Du.substring(i+1);v"=0A=
+"=3Ds.pt(q,'&','p_gvf',k)}return v");=0A=
s.p_gvf=3Dnew Function("t","k",""=0A=
+"if(t){var =
s=3Dthis,i=3Dt.indexOf('=3D'),p=3Di<0?t:t.substring(0,i),v=3Di<0?'T"=0A=
+"rue':t.substring(i+1);if(p.toLowerCase()=3D=3Dk.toLowerCase())return =
s."=0A=
+"epa(v)}return ''");=0A=
/*=0A=
 * Plugin: getValOnce 0.2 - get a value once per session or number of =
days=0A=
 */=0A=
s.getValOnce=3Dnew Function("v","c","e",""=0A=
+"var s=3Dthis,k=3Ds.c_r(c),a=3Dnew =
Date;e=3De?e:0;if(v){a.setTime(a.getTime("=0A=
+")+e*86400000);s.c_w(c,v,e?a:0);}return v=3D=3Dk?'':v");=0A=
/*=0A=
 * Plugin: setClickMapEmail v1.3 - sets ClickMap variables w/ q-string =
values=0A=
 */=0A=
s.setClickMapEmail=3Dnew Function("qp","ot",""=0A=
+"var =
s=3Dthis,v=3Ds.getQueryParam(qp,'~'),d,pn,oid,ot=3Ds.getQueryParam(ot)"=0A=
+",ot=3Dot?ot:'A',cv;d=3Dv.indexOf('~');if(!v)return =
'';if(d>-1){pn=3Dv.subs"=0A=
+"tring(0,d);oid=3Dv.substring(d+1);}cv=3D'&pid=3D'+s.ape(s.fl(pn,255))+'=
&pi"=0A=
+"dt=3D1&oid=3D'+s.ape(s.fl(oid,100))+'&oidt=3D1&ot=3D'+ot+'&oi=3D1';s.sq=
(cv);");=0A=
/*=0A=
 * Plugin: Form Analysis 2.0 (Success, Error, Abandonment)=0A=
 */=0A=
s.setupFormAnalysis=3Dnew Function(""=0A=
+"var s=3Dthis;if(!s.fa){s.fa=3Dnew Object;var =
f=3Ds.fa;f.ol=3Ds.wd.onload;s."=0A=
+"wd.onload=3Ds.faol;f.uc=3Ds.useCommerce;f.vu=3Ds.varUsed;f.vl=3Df.uc?s.=
even"=0A=
+"tList:'';f.tfl=3Ds.trackFormList;f.fl=3Ds.formList;f.va=3Dnew =
Array('',''"=0A=
+",'','')}");=0A=
s.sendFormEvent=3Dnew Function("t","pn","fn","en",""=0A=
+"var =
s=3Dthis,f=3Ds.fa;t=3Dt=3D=3D's'?t:'e';f.va[0]=3Dpn;f.va[1]=3Dfn;f.va[3]=3D=
t=3D=3D'"=0A=
+"s'?'Success':en;s.fasl(t);f.va[1]=3D'';f.va[3]=3D'';");=0A=
s.faol=3Dnew Function("e",""=0A=
+"var =
s=3Ds_c_il["+s._in+"],f=3Ds.fa,r=3Dtrue,fo,fn,i,en,t,tf;if(!e)e=3Ds.wd."=0A=
+"event;f.os=3Dnew =
Array;if(f.ol)r=3Df.ol(e);if(s.d.forms&&s.d.forms.leng"=0A=
+"th>0){for(i=3Ds.d.forms.length-1;i>=3D0;i--){fo=3Ds.d.forms[i];fn=3Dfo.=
name"=0A=
+";tf=3Df.tfl&&s.pt(f.fl,',','ee',fn)||!f.tfl&&!s.pt(f.fl,',','ee',fn);"=0A=
+"if(tf){f.os[fn]=3Dfo.onsubmit;fo.onsubmit=3Ds.faos;f.va[1]=3Dfn;f.va[3]=
=3D'"=0A=
+"No Data =
Entered';for(en=3D0;en<fo.elements.length;en++){el=3Dfo.element"=0A=
+"s[en];t=3Del.type;if(t&&t.toUpperCase){t=3Dt.toUpperCase();var =
md=3Del.on"=0A=
+"mousedown,kd=3Del.onkeydown,omd=3Dmd?md.toString():'',okd=3Dkd?kd.toStr=
in"=0A=
+"g():'';if(omd.indexOf('.fam(')<0&&okd.indexOf('.fam(')<0){el.s_famd"=0A=
+"=3Dmd;el.s_fakd=3Dkd;el.onmousedown=3Ds.fam;el.onkeydown=3Ds.fam}}}}}f.=
ul=3Ds"=0A=
+".wd.onunload;s.wd.onunload=3Ds.fasl;}return r;");=0A=
s.faos=3Dnew Function("e",""=0A=
+"var =
s=3Ds_c_il["+s._in+"],f=3Ds.fa,su;if(!e)e=3Ds.wd.event;if(f.vu){s[f.v"=0A=
+"u]=3D'';f.va[1]=3D'';f.va[3]=3D'';}su=3Df.os[this.name];return =
su?su(e):tru"=0A=
+"e;");=0A=
s.fasl=3Dnew Function("e",""=0A=
+"var =
s=3Ds_c_il["+s._in+"],f=3Ds.fa,a=3Df.va,l=3Ds.wd.location,ip=3Ds.trackPag=
"=0A=
+"eName,p=3Ds.pageName;if(a[1]!=3D''&&a[3]!=3D''){a[0]=3D!p&&ip?l.host+l.=
path"=0A=
+"name:a[0]?a[0]:p;if(!f.uc&&a[3]!=3D'No Data =
Entered'){if(e=3D=3D'e')a[2]=3D"=0A=
+"'Error';else if(e=3D=3D's')a[2]=3D'Success';else a[2]=3D'Abandon'}else =
a[2]"=0A=
+"=3D'';var =
tp=3Dip?a[0]+':':'',t3=3De!=3D's'?':('+a[3]+')':'',ym=3D!f.uc&&a[3]"=0A=
+"!=3D'No Data =
Entered'?tp+a[1]+':'+a[2]+t3:tp+a[1]+t3,ltv=3Ds.linkTrackV"=0A=
+"ars,lte=3Ds.linkTrackEvents,up=3Ds.usePlugins;if(f.uc){s.linkTrackVars=3D=
"=0A=
+"ltv=3D=3D'None'?f.vu+',events':ltv+',events,'+f.vu;s.linkTrackEvents=3D=
lt"=0A=
+"e=3D=3D'None'?f.vl:lte+','+f.vl;f.cnt=3D-1;if(e=3D=3D'e')s.events=3Ds.p=
t(f.vl,'"=0A=
+",','fage',2);else =
if(e=3D=3D's')s.events=3Ds.pt(f.vl,',','fage',1);else s"=0A=
+".events=3Ds.pt(f.vl,',','fage',0)}else{s.linkTrackVars=3Dltv=3D=3D'None=
'?f."=0A=
+"vu:ltv+','+f.vu}s[f.vu]=3Dym;s.usePlugins=3Dfalse;s.tl(true,'o','Form =
A"=0A=
+"nalysis');s[f.vu]=3D'';s.usePlugins=3Dup}return =
f.ul&&e!=3D'e'&&e!=3D's'?f."=0A=
+"ul(e):true;");=0A=
s.fam=3Dnew Function("e",""=0A=
+"var s=3Ds_c_il["+s._in+"],f=3Ds.fa;if(!e) e=3Ds.wd.event;var =
o=3Ds.trackLas"=0A=
+"tChanged,et=3De.type.toUpperCase(),t=3Dthis.type.toUpperCase(),fn=3Dthi=
s."=0A=
+"form.name,en=3Dthis.name,sc=3Dfalse;if(document.layers){kp=3De.which;b=3D=
e."=0A=
+"which}else{kp=3De.keyCode;b=3De.button}et=3Det=3D=3D'MOUSEDOWN'?1:et=3D=
=3D'KEYDOW"=0A=
+"N'?2:et;if(f.ce!=3Den||f.cf!=3Dfn){if(et=3D=3D1&&b!=3D2&&'BUTTONSUBMITR=
ESETIM"=0A=
+"AGERADIOCHECKBOXSELECT-ONEFILE'.indexOf(t)>-1){f.va[1]=3Dfn;f.va[3]=3De=
"=0A=
+"n;sc=3Dtrue}else =
if(et=3D=3D1&&b=3D=3D2&&'TEXTAREAPASSWORDFILE'.indexOf(t)>-1"=0A=
+"){f.va[1]=3Dfn;f.va[3]=3Den;sc=3Dtrue}else =
if(et=3D=3D2&&kp!=3D9&&kp!=3D13){f.va["=0A=
+"1]=3Dfn;f.va[3]=3Den;sc=3Dtrue}if(sc){nface=3Den;nfacf=3Dfn}}if(et=3D=3D=
1&&this.s"=0A=
+"_famd)return this.s_famd(e);if(et=3D=3D2&&this.s_fakd)return =
this.s_fak"=0A=
+"d(e);");=0A=
s.ee=3Dnew Function("e","n",""=0A=
+"return n&&n.toLowerCase?e.toLowerCase()=3D=3Dn.toLowerCase():false;");=0A=
s.fage=3Dnew Function("e","a",""=0A=
+"var s=3Dthis,f=3Ds.fa,x=3Df.cnt;x=3Dx?x+1:1;f.cnt=3Dx;return =
x=3D=3Da?e:'';");=0A=
/*=0A=
 * Plugin: getAndPersistValue 0.3 - get a value on every page=0A=
 */=0A=
s.getAndPersistValue=3Dnew Function("v","c","e",""=0A=
+"var s=3Dthis,a=3Dnew =
Date;e=3De?e:0;a.setTime(a.getTime()+e*86400000);if("=0A=
+"v)s.c_w(c,v,e?a:0);return s.c_r(c);");=0A=
/*=0A=
 * Plugin: Days since last Visit 1.0.H - capture time from last visit=0A=
 */=0A=
s.getDaysSinceLastVisit=3Dnew Function(""=0A=
+"var s=3Dthis,e=3Dnew =
Date(),cval,ct=3De.getTime(),c=3D's_lastvisit',day=3D24*"=0A=
+"60*60*1000;e.setTime(ct+3*365*day);cval=3Ds.c_r(c);if(!cval){s.c_w(c,"=0A=
+"ct,e);return 'First page view or cookies not supported';}else{var d"=0A=
+"=3Dct-cval;if(d>30*60*1000){if(d>30*day){s.c_w(c,ct,e);return 'More t"=0A=
+"han 30 days';}if(d<30*day+1 && d>7*day){s.c_w(c,ct,e);return 'More "=0A=
+"than 7 days';}if(d<7*day+1 && d>day){s.c_w(c,ct,e);return 'Less tha"=0A=
+"n 7 days';}if(d<day+1){s.c_w(c,ct,e);return 'Less than 1 day';}}els"=0A=
+"e return '';}");=0A=
/*=0A=
 * Plugin: getTimeToComplete 0.4 - return the time from start to stop=0A=
 */=0A=
s.getTimeToComplete=3Dnew Function("v","cn","e",""=0A=
+"var s=3Dthis,d=3Dnew =
Date,x=3Dd,k;if(!s.ttcr){e=3De?e:0;if(v=3D=3D'start'||v=3D=3D'"=0A=
+"stop')s.ttcr=3D1;x.setTime(x.getTime()+e*86400000);if(v=3D=3D'start'){s=
.c"=0A=
+"_w(cn,d.getTime(),e?x:0);return =
'';}if(v=3D=3D'stop'){k=3Ds.c_r(cn);if(!s"=0A=
+".c_w(cn,'',d)||!k)return '';v=3D(d.getTime()-k)/1000;var =
td=3D86400,th=3D"=0A=
+"3600,tm=3D60,r=3D5,u,un;if(v>td){u=3Dtd;un=3D'days';}else =
if(v>th){u=3Dth;un=3D"=0A=
+"'hours';}else =
if(v>tm){r=3D2;u=3Dtm;un=3D'minutes';}else{r=3D.2;u=3D1;un=3D'sec"=0A=
+"onds';}v=3Dv*r/u;return (Math.round(v)/r)+' '+un;}}return '';");=0A=
/*=0A=
 * Plugin: getNewRepeat 1.0 - Return whether user is new or repeat=0A=
 */=0A=
s.getNewRepeat=3Dnew Function(""=0A=
+"var s=3Dthis,e=3Dnew =
Date(),cval,ct=3De.getTime(),y=3De.getYear();e.setTime"=0A=
+"(ct+30*24*60*60*1000);cval=3Ds.c_r('s_nr');if(cval.length=3D=3D0){s.c_w=
("=0A=
+"'s_nr',ct,e);return 'New';}if(cval.length!=3D0&&ct-cval<30*60*1000){s"=0A=
+".c_w('s_nr',ct,e);return 'New';}if(cval<1123916400001){e.setTime(cv"=0A=
+"al+30*24*60*60*1000);s.c_w('s_nr',ct,e);return 'Repeat';}else retur"=0A=
+"n 'Repeat';");=0A=
/*=0A=
 * Plugin: getVisitStart v2.0=0A=
 */=0A=
s.getVisitStart=3Dnew Function("c",""=0A=
+"var s=3Dthis,v=3D1,t=3Dnew =
Date;t.setTime(t.getTime()+1800000);if(s.c_r(c"=0A=
+")){v=3D0}if(!s.c_w(c,1,t)){s.c_w(c,1,0)}if(!s.c_r(c)){v=3D0}return =
v;"); =0A=
/*=0A=
 * Plugin: getPreviousValue_v1.0 - return previous value of designated=0A=
 *   variable (requires split utility)=0A=
 */=0A=
s.getPreviousValue=3Dnew Function("v","c","el",""=0A=
+"var s=3Dthis,t=3Dnew =
Date,i,j,r=3D'';t.setTime(t.getTime()+1800000);if(el"=0A=
+"){if(s.events){i=3Ds.split(el,',');j=3Ds.split(s.events,',');for(x in =
i"=0A=
+"){for(y in j){if(i[x]=3D=3Dj[y]){if(s.c_r(c)) =
r=3Ds.c_r(c);v?s.c_w(c,v,t)"=0A=
+":s.c_w(c,'no value',t);return r}}}}}else{if(s.c_r(c)) r=3Ds.c_r(c);v?"=0A=
+"s.c_w(c,v,t):s.c_w(c,'no value',t);return r}");=0A=
/*=0A=
 * Utility Function: split v1.5 - split a string (JS 1.0 compatible)=0A=
 */=0A=
s.split=3Dnew Function("l","d",""=0A=
+"var i,x=3D0,a=3Dnew =
Array;while(l){i=3Dl.indexOf(d);i=3Di>-1?i:l.length;a[x"=0A=
+"++]=3Dl.substring(0,i);l=3Dl.substring(i+d.length);}return a");=0A=
/*=0A=
 * Partner Plugin: DFA Check 0.6 - Restrict DFA calls to once a visit, =0A=
 * per report suite, per click through. Used in conjunction with VISTA=0A=
 */=0A=
s.partnerDFACheck=3Dnew Function("c","src","p",""=0A=
+"var s=3Dthis,dl=3D',',cr,nc,q,g,i,j,k,fnd,v=3D1,t=3Dnew =
Date,cn=3D0,ca=3Dnew Ar"=0A=
+"ray,aa=3Dnew Array,cs=3Dnew =
Array;t.setTime(t.getTime()+1800000);cr=3Ds.c"=0A=
+"_r(c);if(cr){v=3D0}ca=3Ds.split(cr,dl);aa=3Ds.split(s.un,dl);for(i=3D0;=
i<aa"=0A=
+".length;i++){fnd=3D0;for(j=3D0;j<ca.length;j++){if(aa[i]=3D=3Dca[j]){fn=
d=3D1}"=0A=
+"}if(!fnd){cs[cn]=3Daa[i];cn++}}if(cs.length){for(k=3D0;k<cs.length;k++)=
"=0A=
+"{nc=3D(nc?nc+dl:'')+cs[k]}cr=3D(cr?cr+dl:'')+nc;s.vpr(p,nc);v=3D1}q=3Ds=
.wd."=0A=
+"location.search.toLowerCase();g=3Dq.indexOf(src+'=3D');if(g>0){s.vpr(p,=
"=0A=
+"cr);v=3D1}if(!s.c_w(c,cr,t)){s.c_w(c,cr,0)}if(!s.c_r(c)){v=3D0}if(v<1)s=
"=0A=
+".vpr('variableProvider','')");=0A=
/*=0A=
 * Utility Function: vpr - set the variable vs with value v=0A=
 */=0A=
s.vpr=3Dnew Function("vs","v",=0A=
"if(typeof(v)!=3D'undefined'){var s=3Dthis; =
eval('s.'+vs+'=3D\"'+v+'\"')}");=0A=
=0A=
/************* DO NOT ALTER ANYTHING BELOW THIS LINE ! **************/=0A=
var s_objectID;function s_c2fe(f){var x=3D'',s=3D0,e,a,b,c;while(1){e=3D=0A=
f.indexOf('"',s);b=3Df.indexOf('\\',s);c=3Df.indexOf("\n",s);if(e<0||(b>=3D=0A=
0&&b<e))e=3Db;if(e<0||(c>=3D0&&c<e))e=3Dc;if(e>=3D0){x+=3D(e>s?f.substrin=
g(s,e):=0A=
'')+(e=3D=3Dc?'\\n':'\\'+f.substring(e,e+1));s=3De+1}else return x=0A=
+f.substring(s)}return f}function s_c2fa(f){var s=3Df.indexOf('(')+1,e=3D=0A=
f.indexOf(')'),a=3D'',c;while(s>=3D0&&s<e){c=3Df.substring(s,s+1);if(c=3D=
=3D',')=0A=
a+=3D'","';else if(("\n\r\t ").indexOf(c)<0)a+=3Dc;s++}return =
a?'"'+a+'"':=0A=
a}function s_c2f(cc){cc=3D''+cc;var fc=3D'var f=3Dnew Function(',s=3D=0A=
cc.indexOf(';',cc.indexOf('{')),e=3Dcc.lastIndexOf('}'),o,a,d,q,c,f,h,x=0A=
fc+=3Ds_c2fa(cc)+',"var s=3Dnew Object;';c=3Dcc.substring(s+1,e);s=3D=0A=
c.indexOf('function');while(s>=3D0){d=3D1;q=3D'';x=3D0;f=3Dc.substring(s)=
;a=3D=0A=
s_c2fa(f);e=3Do=3Dc.indexOf('{',s);e++;while(d>0){h=3Dc.substring(e,e+1);=
if(=0A=
q){if(h=3D=3Dq&&!x)q=3D'';if(h=3D=3D'\\')x=3Dx?0:1;else =
x=3D0}else{if(h=3D=3D'"'||h=3D=3D"'"=0A=
)q=3Dh;if(h=3D=3D'{')d++;if(h=3D=3D'}')d--}if(d>0)e++}c=3Dc.substring(0,s=
)=0A=
+'new Function('+(a?a+',':'')+'"'+s_c2fe(c.substring(o+1,e))+'")'=0A=
+c.substring(e+1);s=3Dc.indexOf('function')}fc+=3Ds_c2fe(c)+';return =
s");'=0A=
eval(fc);return f}function s_gi(un,pg,ss){var c=3D"function s_c(un,pg,s"=0A=
+"s){var s=3Dthis;s.wd=3Dwindow;if(!s.wd.s_c_in){s.wd.s_c_il=3Dnew =
Array;s."=0A=
+"wd.s_c_in=3D0;}s._il=3Ds.wd.s_c_il;s._in=3Ds.wd.s_c_in;s._il[s._in]=3Ds=
;s.w"=0A=
+"d.s_c_in++;s.m=3Dfunction(m){return =
(''+m).indexOf('{')<0};s.fl=3Dfunct"=0A=
+"ion(x,l){return x?(''+x).substring(0,l):x};s.co=3Dfunction(o){if(!o)r"=0A=
+"eturn o;var n=3Dnew Object,x;for(x in o)if(x.indexOf('select')<0&&x.i"=0A=
+"ndexOf('filter')<0)n[x]=3Do[x];return =
n};s.num=3Dfunction(x){x=3D''+x;for"=0A=
+"(var p=3D0;p<x.length;p++)if(('0123456789').indexOf(x.substring(p,p+1"=0A=
+"))<0)return 0;return 1};s.rep=3Dfunction(x,o,n){var =
i=3Dx.indexOf(o),l=3D"=0A=
+"n.length>0?n.length:1;while(x&&i>=3D0){x=3Dx.substring(0,i)+n+x.substri=
"=0A=
+"ng(i+o.length);i=3Dx.indexOf(o,i+l)}return x};s.ape=3Dfunction(x){var =
s"=0A=
+"=3Dthis,i;x=3Dx?s.rep(escape(''+x),'+','%2B'):x;if(x&&s.charSet&&s.em=3D=
=3D"=0A=
+"1&&x.indexOf('%u')<0&&x.indexOf('%U')<0){i=3Dx.indexOf('%');while(i>=3D=
"=0A=
+"0){i++;if(('89ABCDEFabcdef').indexOf(x.substring(i,i+1))>=3D0)return "=0A=
+"x.substring(0,i)+'u00'+x.substring(i);i=3Dx.indexOf('%',i)}}return x}"=0A=
+";s.epa=3Dfunction(x){var s=3Dthis;return x?unescape(s.rep(''+x,'+',' =
')"=0A=
+"):x};s.pt=3Dfunction(x,d,f,a){var =
s=3Dthis,t=3Dx,z=3D0,y,r;while(t){y=3Dt.ind"=0A=
+"exOf(d);y=3Dy<0?t.length:y;t=3Dt.substring(0,y);r=3Ds.m(f)?s[f](t,a):f(=
t,"=0A=
+"a);if(r)return =
r;z+=3Dy+d.length;t=3Dx.substring(z,x.length);t=3Dz<x.leng"=0A=
+"th?t:''}return ''};s.isf=3Dfunction(t,a){var =
c=3Da.indexOf(':');if(c>=3D0"=0A=
+")a=3Da.substring(0,c);if(t.substring(0,2)=3D=3D's_')t=3Dt.substring(2);=
retu"=0A=
+"rn (t!=3D''&&t=3D=3Da)};s.fsf=3Dfunction(t,a){var =
s=3Dthis;if(s.pt(a,',','isf"=0A=
+"',t))s.fsg+=3D(s.fsg!=3D''?',':'')+t;return =
0};s.fs=3Dfunction(x,f){var s"=0A=
+"=3Dthis;s.fsg=3D'';s.pt(x,',','fsf',f);return =
s.fsg};s.c_d=3D'';s.c_gdf=3Df"=0A=
+"unction(t,a){var s=3Dthis;if(!s.num(t))return 1;return =
0};s.c_gd=3Dfunc"=0A=
+"tion(){var =
s=3Dthis,d=3Ds.wd.location.hostname,n=3Ds.fpCookieDomainPeriod"=0A=
+"s,p;if(!n)n=3Ds.cookieDomainPeriods;if(d&&!s.c_d){n=3Dn?parseInt(n):2;n=
"=0A=
+"=3Dn>2?n:2;p=3Dd.lastIndexOf('.');if(p>=3D0){while(p>=3D0&&n>1){p=3Dd.l=
astInd"=0A=
+"exOf('.',p-1);n--}s.c_d=3Dp>0&&s.pt(d,'.','c_gdf',0)?d.substring(p):d"=0A=
+"}}return s.c_d};s.c_r=3Dfunction(k){var s=3Dthis;k=3Ds.ape(k);var =
c=3D' '+s"=0A=
+".d.cookie,i=3Dc.indexOf(' =
'+k+'=3D'),e=3Di<0?i:c.indexOf(';',i),v=3Di<0?'':"=0A=
+"s.epa(c.substring(i+2+k.length,e<0?c.length:e));return v!=3D'[[B]]'?v"=0A=
+":''};s.c_w=3Dfunction(k,v,e){var =
s=3Dthis,d=3Ds.c_gd(),l=3Ds.cookieLifetime"=0A=
+",t;v=3D''+v;l=3Dl?(''+l).toUpperCase():'';if(e&&l!=3D'SESSION'&&l!=3D'N=
ONE'"=0A=
+"){t=3D(v!=3D''?parseInt(l?l:0):-60);if(t){e=3Dnew =
Date;e.setTime(e.getTim"=0A=
+"e()+(t*1000))}}if(k&&l!=3D'NONE'){s.d.cookie=3Dk+'=3D'+s.ape(v!=3D''?v:=
'[[B"=0A=
+"]]')+'; path=3D/;'+(e&&l!=3D'SESSION'?' =
expires=3D'+e.toGMTString()+';':'"=0A=
+"')+(d?' domain=3D'+d+';':'');return s.c_r(k)=3D=3Dv}return =
0};s.eh=3Dfuncti"=0A=
+"on(o,e,r,f){var =
s=3Dthis,b=3D's_'+e+'_'+s._in,n=3D-1,l,i,x;if(!s.ehl)s.eh"=0A=
+"l=3Dnew =
Array;l=3Ds.ehl;for(i=3D0;i<l.length&&n<0;i++){if(l[i].o=3D=3Do&&l[i]"=0A=
+".e=3D=3De)n=3Di}if(n<0){n=3Di;l[n]=3Dnew =
Object}x=3Dl[n];x.o=3Do;x.e=3De;f=3Dr?x.b:f;"=0A=
+"if(r||f){x.b=3Dr?0:o[e];x.o[e]=3Df}if(x.b){x.o[b]=3Dx.b;return =
b}return 0"=0A=
+"};s.cet=3Dfunction(f,a,t,o,b){var =
s=3Dthis,r;if(s.apv>=3D5&&(!s.isopera||"=0A=
+"s.apv>=3D7))eval('try{r=3Ds.m(f)?s[f](a):f(a)}catch(e){r=3Ds.m(t)?s[t](=
e)"=0A=
+":t(e)}');else{if(s.ismac&&s.u.indexOf('MSIE =
4')>=3D0)r=3Ds.m(b)?s[b](a)"=0A=
+":b(a);else{s.eh(s.wd,'onerror',0,o);r=3Ds.m(f)?s[f](a):f(a);s.eh(s.wd"=0A=
+",'onerror',1)}}return r};s.gtfset=3Dfunction(e){var s=3Dthis;return =
s.t"=0A=
+"fs};s.gtfsoe=3Dnew Function('e','var =
s=3Ds_c_il['+s._in+'];s.eh(window,"=0A=
+"\"onerror\",1);s.etfs=3D1;var =
c=3Ds.t();if(c)s.d.write(c);s.etfs=3D0;retu"=0A=
+"rn true');s.gtfsfb=3Dfunction(a){return =
window};s.gtfsf=3Dfunction(w){v"=0A=
+"ar =
s=3Dthis,p=3Dw.parent,l=3Dw.location;s.tfs=3Dw;if(p&&p.location!=3Dl&&p.l=
o"=0A=
+"cation.host=3D=3Dl.host){s.tfs=3Dp;return s.gtfsf(s.tfs)}return =
s.tfs};s."=0A=
+"gtfs=3Dfunction(){var =
s=3Dthis;if(!s.tfs){s.tfs=3Ds.wd;if(!s.etfs)s.tfs=3Ds"=0A=
+".cet('gtfsf',s.tfs,'gtfset',s.gtfsoe,'gtfsfb')}return s.tfs};s.ca=3Df"=0A=
+"unction(){var =
s=3Dthis,imn=3D's_i_'+s.fun;if(s.d.images&&s.apv>=3D3&&(!s."=0A=
+"isopera||s.apv>=3D7)&&(s.ns6<0||s.apv>=3D6.1)){s.ios=3D1;if(!s.d.images=
[i"=0A=
+"mn]&&(!s.isns||(s.apv<4||s.apv>=3D5))){s.d.write('<im'+'g =
name=3D\"'+im"=0A=
+"n+'\" height=3D1 width=3D1 border=3D0 =
alt=3D\"\">');if(!s.d.images[imn])s.i"=0A=
+"os=3D0}}};s.mr=3Dfunction(sess,q,ta){var =
s=3Dthis,ns=3Ds.visitorNamespace,u"=0A=
+"nc=3Ds.rep(s.fun,'_','-'),imn=3D's_i_'+s.fun,im,b,e,rs=3D'http'+(s.ssl?=
's"=0A=
+"':'')+'://'+(s.ssl?'securemetrics':'metrics')+'.apple.com/b/ss/'+s.un+'=
/1"=0A=
+"/H.8-pdvu-2/'+sess+'?[AQB]&ndh=3D1'+(q?q:'')+(s.q?s.q:'')+'&[AQE]';if"=0A=
+"(s.isie&&!s.ismac){if(s.apv>5.5)rs=3Ds.fl(rs,4095);else =
rs=3Ds.fl(rs,20"=0A=
+"47)}if(s.ios||s.ss){if (!s.ss)s.ca();im=3Ds.wd[imn]?s.wd[imn]:s.d.ima"=0A=
+"ges[imn];if(!im)im=3Ds.wd[imn]=3Dnew =
Image;im.src=3Drs;if(rs.indexOf('&pe"=0A=
+"=3D')>=3D0&&(!ta||ta=3D=3D'_self'||ta=3D=3D'_top'||(s.wd.name&&ta=3D=3D=
s.wd.name)))"=0A=
+"{b=3De=3Dnew Date;while(e.getTime()-b.getTime()<500)e=3Dnew =
Date}return '"=0A=
+"'}return '<im'+'g sr'+'c=3D\"'+rs+'\" width=3D1 height=3D1 border=3D0 =
alt=3D"=0A=
+"\"\">'};s.gg=3Dfunction(v){var s=3Dthis;return =
s.wd['s_'+v]};s.glf=3Dfunc"=0A=
+"tion(t,a){if(t.substring(0,2)=3D=3D's_')t=3Dt.substring(2);var =
s=3Dthis,v=3Ds"=0A=
+".gg(t);if(v)s[t]=3Dv};s.gl=3Dfunction(v){var =
s=3Dthis;s.pt(v,',','glf',0)"=0A=
+"};s.gv=3Dfunction(v){var s=3Dthis;return =
s['vpm_'+v]?s['vpv_'+v]:(s[v]?"=0A=
+"s[v]:'')};s.havf=3Dfunction(t,a){var =
s=3Dthis,b=3Dt.substring(0,4),x=3Dt.su"=0A=
+"bstring(4),n=3DparseInt(x),k=3D'g_'+t,m=3D'vpm_'+t,q=3Dt,v=3Ds.linkTrac=
kVars,"=0A=
+"e=3Ds.linkTrackEvents;s[k]=3Ds.gv(t);if(s.lnk||s.eo){v=3Dv?v+','+s.vl_l=
:'"=0A=
+"';if(v&&!s.pt(v,',','isf',t))s[k]=3D'';if(t=3D=3D'events'&&e)s[k]=3Ds.f=
s(s["=0A=
+"k],e)}s[m]=3D0;if(t=3D=3D'pageURL')q=3D'g';else =
if(t=3D=3D'referrer')q=3D'r';else"=0A=
+" if(t=3D=3D'vmk')q=3D'vmt';else =
if(t=3D=3D'charSet'){q=3D'ce';if(s[k]&&s.em=3D=3D2)"=0A=
+"s[k]=3D'UTF-8'}else if(t=3D=3D'visitorNamespace')q=3D'ns';else =
if(t=3D=3D'cooki"=0A=
+"eDomainPeriods')q=3D'cdp';else =
if(t=3D=3D'cookieLifetime')q=3D'cl';else if("=0A=
+"t=3D=3D'variableProvider')q=3D'vvp';else =
if(t=3D=3D'currencyCode')q=3D'cc';else"=0A=
+" if(t=3D=3D'channel')q=3D'ch';else if(t=3D=3D'campaign')q=3D'v0';else =
if(s.num("=0A=
+"x)) {if(b=3D=3D'prop')q=3D'c'+n;else if(b=3D=3D'eVar')q=3D'v'+n;else =
if(b=3D=3D'hie"=0A=
+"r'){q=3D'h'+n;s[k]=3Ds.fl(s[k],255)}}if(s[k]&&t!=3D'linkName'&&t!=3D'li=
nkTy"=0A=
+"pe')s.qav+=3D'&'+q+'=3D'+s.ape(s[k]);return ''};s.hav=3Dfunction(){var =
s=3D"=0A=
+"this;s.qav=3D'';s.pt(s.vl_t,',','havf',0);return =
s.qav};s.lnf=3Dfunctio"=0A=
+"n(t,h){t=3Dt?t.toLowerCase():'';h=3Dh?h.toLowerCase():'';var =
te=3Dt.index"=0A=
+"Of('=3D');if(t&&te>0&&h.indexOf(t.substring(te+1))>=3D0)return =
t.substr"=0A=
+"ing(0,te);return ''};s.ln=3Dfunction(h){var =
s=3Dthis,n=3Ds.linkNames;if(n"=0A=
+")return s.pt(n,',','lnf',h);return =
''};s.ltdf=3Dfunction(t,h){t=3Dt?t.t"=0A=
+"oLowerCase():'';h=3Dh?h.toLowerCase():'';var =
qi=3Dh.indexOf('?');h=3Dqi>=3D"=0A=
+"0?h.substring(0,qi):h;if(t&&h.substring(h.length-(t.length+1))=3D=3D'.'=
"=0A=
+"+t)return 1;return =
0};s.ltef=3Dfunction(t,h){t=3Dt?t.toLowerCase():'';h"=0A=
+"=3Dh?h.toLowerCase():'';if(t&&h.indexOf(t)>=3D0)return 1;return =
0};s.lt"=0A=
+"=3Dfunction(h){var =
s=3Dthis,lft=3Ds.linkDownloadFileTypes,lef=3Ds.linkExter"=0A=
+"nalFilters,lif=3Ds.linkInternalFilters;lif=3Dlif?lif:s.wd.location.host=
"=0A=
+"name;h=3Dh.toLowerCase();if(s.trackDownloadLinks&&lft&&s.pt(lft,',','"=0A=
+"ltdf',h))return 'd';if(s.trackExternalLinks&&(lef||lif)&&(!lef||s.p"=0A=
+"t(lef,',','ltef',h))&&(!lif||!s.pt(lif,',','ltef',h)))return 'e';re"=0A=
+"turn ''};s.lc=3Dnew Function('e','var =
s=3Ds_c_il['+s._in+'],b=3Ds.eh(this"=0A=
+",\"onclick\");s.lnk=3Ds.co(this);s.t();s.lnk=3D0;if(b)return =
this[b](e)"=0A=
+";return true');s.bc=3Dnew Function('e','var =
s=3Ds_c_il['+s._in+'],f;if("=0A=
+"s.d&&s.d.all&&s.d.all.cppXYctnr)return;s.eo=3De.srcElement?e.srcEleme"=0A=
+"nt:e.target;eval(\"try{if(s.eo&&(s.eo.tagName||s.eo.parentElement||"=0A=
+"s.eo.parentNode))s.t()}catch(f){}\");s.eo=3D0');s.ot=3Dfunction(o){var =
"=0A=
+"a=3Do.type,b=3Do.tagName;return =
(a&&a.toUpperCase?a:b&&b.toUpperCase?b:"=0A=
+"o.href?'A':'').toUpperCase()};s.oid=3Dfunction(o){var =
s=3Dthis,t=3Ds.ot(o"=0A=
+"),p=3Do.protocol,c=3Do.onclick,n=3D'',x=3D0;if(!o.s_oid){if(o.href&&(t=3D=
=3D'A'"=0A=
+"||t=3D=3D'AREA')&&(!c||!p||p.toLowerCase().indexOf('javascript')<0))n=3D=
o"=0A=
+".href;else if(c){n=3Ds.rep(s.rep(s.rep(s.rep(''+c,\"\\r\",''),\"\\n\""=0A=
+",''),\"\\t\",''),' ','');x=3D2}else =
if(o.value&&(t=3D=3D'INPUT'||t=3D=3D'SUBM"=0A=
+"IT')){n=3Do.value;x=3D3}else =
if(o.src&&t=3D=3D'IMAGE')n=3Do.src;if(n){o.s_oid"=0A=
+"=3Ds.fl(n,100);o.s_oidt=3Dx}}return =
o.s_oid};s.rqf=3Dfunction(t,un){var s"=0A=
+"=3Dthis,e=3Dt.indexOf('=3D'),u=3De>=3D0?','+t.substring(0,e)+',':'';ret=
urn u&"=0A=
+"&u.indexOf(','+un+',')>=3D0?s.epa(t.substring(e+1)):''};s.rq=3Dfunction=
"=0A=
+"(un){var =
s=3Dthis,c=3Dun.indexOf(','),v=3Ds.c_r('s_sq'),q=3D'';if(c<0)retur"=0A=
+"n s.pt(v,'&','rqf',un);return s.pt(un,',','rq',0)};s.sqp=3Dfunction(t"=0A=
+",a){var =
s=3Dthis,e=3Dt.indexOf('=3D'),q=3De<0?'':s.epa(t.substring(e+1));s."=0A=
+"sqq[q]=3D'';if(e>=3D0)s.pt(t.substring(0,e),',','sqs',q);return =
0};s.sq"=0A=
+"s=3Dfunction(un,q){var s=3Dthis;s.squ[un]=3Dq;return =
0};s.sq=3Dfunction(q){"=0A=
+"var s=3Dthis,k=3D's_sq',v=3Ds.c_r(k),x,c=3D0;s.sqq=3Dnew =
Object;s.squ=3Dnew Obj"=0A=
+"ect;s.sqq[q]=3D'';s.pt(v,'&','sqp',0);s.pt(s.un,',','sqs',q);v=3D'';for=
"=0A=
+"(x in s.squ)s.sqq[s.squ[x]]+=3D(s.sqq[s.squ[x]]?',':'')+x;for(x in s."=0A=
+"sqq)if(x&&s.sqq[x]&&(x=3D=3Dq||c<2)){v+=3D(v?'&':'')+s.sqq[x]+'=3D'+s.a=
pe(x"=0A=
+");c++}return s.c_w(k,v,0)};s.wdl=3Dnew Function('e','var =
s=3Ds_c_il['+s"=0A=
+"._in+'],r=3Dtrue,b=3Ds.eh(s.wd,\"onload\"),i,o,oc;if(b)r=3Dthis[b](e);f=
or"=0A=
+"(i=3D0;i<s.d.links.length;i++){o=3Ds.d.links[i];oc=3Do.onclick?\"\"+o.o=
nc"=0A=
+"lick:\"\";if((oc.indexOf(\"s_gs(\")<0||oc.indexOf(\".s_oc(\")>=3D0)&&"=0A=
+"oc.indexOf(\".tl(\")<0)s.eh(o,\"onclick\",0,s.lc);}return r');s.wds"=0A=
+"=3Dfunction(){var =
s=3Dthis;if(s.apv>3&&(!s.isie||!s.ismac||s.apv>=3D5)){i"=0A=
+"f(s.b&&s.b.attachEvent)s.b.attachEvent('onclick',s.bc);else if(s.b&"=0A=
+"&s.b.addEventListener)s.b.addEventListener('click',s.bc,false);else"=0A=
+" s.eh(s.wd,'onload',0,s.wdl)}};s.vs=3Dfunction(x){var =
s=3Dthis,v=3Ds.visi"=0A=
+"torSampling,g=3Ds.visitorSamplingGroup,k=3D's_vsn_'+s.un+(g?'_'+g:''),n=
"=0A=
+"=3Ds.c_r(k),e=3Dnew =
Date,y=3De.getYear();e.setYear(y+10+(y<1900?1900:0));"=0A=
+"if(v){v*=3D100;if(!n){if(!s.c_w(k,x,e))return =
0;n=3Dx}if(n%10000>v)retu"=0A=
+"rn 0}return =
1};s.dyasmf=3Dfunction(t,m){if(t&&m&&m.indexOf(t)>=3D0)retu"=0A=
+"rn 1;return 0};s.dyasf=3Dfunction(t,m){var =
s=3Dthis,i=3Dt?t.indexOf('=3D'):"=0A=
+"-1,n,x;if(i>=3D0&&m){var =
n=3Dt.substring(0,i),x=3Dt.substring(i+1);if(s.p"=0A=
+"t(x,',','dyasmf',m))return n}return 0};s.uns=3Dfunction(){var =
s=3Dthis,"=0A=
+"x=3Ds.dynamicAccountSelection,l=3Ds.dynamicAccountList,m=3Ds.dynamicAcc=
ou"=0A=
+"ntMatch,n,i;s.un.toLowerCase();if(x&&l){if(!m)m=3Ds.wd.location.host;"=0A=
+"if(!m.toLowerCase)m=3D''+m;l=3Dl.toLowerCase();m=3Dm.toLowerCase();n=3D=
s.pt"=0A=
+"(l,';','dyasf',m);if(n)s.un=3Dn}i=3Ds.un.indexOf(',');s.fun=3Di<0?s.un:=
s."=0A=
+"un.substring(0,i)};s.t=3Dfunction(){var s=3Dthis,trk=3D1,tm=3Dnew =
Date,sed=3D"=0A=
+"Math&&Math.random?Math.floor(Math.random()*10000000000000):tm.getTi"=0A=
+"me(),sess=3D's'+Math.floor(tm.getTime()/10800000)%10+sed,yr=3Dtm.getYea=
"=0A=
+"r(),vt=3Dtm.getDate()+'/'+tm.getMonth()+'/'+(yr<1900?yr+1900:yr)+' '+"=0A=
+"tm.getHours()+':'+tm.getMinutes()+':'+tm.getSeconds()+' '+tm.getDay"=0A=
+"()+' =
'+tm.getTimezoneOffset(),tfs=3Ds.gtfs(),ta=3D'',q=3D'',qs=3D'';s.uns()"=0A=
+";if(!s.q){var =
tl=3Dtfs.location,x=3D'',c=3D'',v=3D'',p=3D'',bw=3D'',bh=3D'',j=3D'1."=0A=
+"0',k=3Ds.c_w('s_cc','true',0)?'Y':'N',hp=3D'',ct=3D'',pn=3D0,ps;if(s.ap=
v>=3D4"=0A=
+")x=3Dscreen.width+'x'+screen.height;if(s.isns||s.isopera){if(s.apv>=3D3=
"=0A=
+"){j=3D'1.1';v=3Ds.n.javaEnabled()?'Y':'N';if(s.apv>=3D4){j=3D'1.2';c=3D=
screen"=0A=
+".pixelDepth;bw=3Ds.wd.innerWidth;bh=3Ds.wd.innerHeight;if(s.apv>=3D4.06=
)j"=0A=
+"=3D'1.3'}}s.pl=3Ds.n.plugins}else =
if(s.isie){if(s.apv>=3D4){v=3Ds.n.javaEna"=0A=
+"bled()?'Y':'N';j=3D'1.2';c=3Dscreen.colorDepth;if(s.apv>=3D5){bw=3Ds.d.=
docu"=0A=
+"mentElement.offsetWidth;bh=3Ds.d.documentElement.offsetHeight;j=3D'1.3'=
"=0A=
+";if(!s.ismac&&s.b){s.b.addBehavior('#default#homePage');hp=3Ds.b.isHo"=0A=
+"mePage(tl)?\"Y\":\"N\";s.b.addBehavior('#default#clientCaps');ct=3Ds."=0A=
+"b.connectionType}}}else r=3D''}if(s.pl)while(pn<s.pl.length&&pn<30){p"=0A=
+"s=3Ds.fl(s.pl[pn].name,100)+';';if(p.indexOf(ps)<0)p+=3Dps;pn++}s.q=3D(=
x?"=0A=
+"'&s=3D'+s.ape(x):'')+(c?'&c=3D'+s.ape(c):'')+(j?'&j=3D'+j:'')+(v?'&v=3D=
'+v:"=0A=
+"'')+(k?'&k=3D'+k:'')+(bw?'&bw=3D'+bw:'')+(bh?'&bh=3D'+bh:'')+(ct?'&ct=3D=
'+s"=0A=
+".ape(ct):'')+(hp?'&hp=3D'+hp:'')+(p?'&p=3D'+s.ape(p):'')}if(s.usePlugin=
"=0A=
+"s)s.doPlugins(s);var =
l=3Ds.wd.location,r=3Dtfs.document.referrer;if(!s."=0A=
+"pageURL)s.pageURL=3Ds.fl(l?l:'',255);if(!s.referrer)s.referrer=3Ds.fl(r=
"=0A=
+"?r:'',255);if(s.lnk||s.eo){var o=3Ds.eo?s.eo:s.lnk;if(!o)return '';va"=0A=
+"r =
p=3Ds.gv('pageName'),w=3D1,t=3Ds.ot(o),n=3Ds.oid(o),x=3Do.s_oidt,h,l,i,oc=
;i"=0A=
+"f(s.eo&&o=3D=3Ds.eo){while(o&&!n&&t!=3D'BODY'){o=3Do.parentElement?o.pa=
rent"=0A=
+"Element:o.parentNode;if(!o)return =
'';t=3Ds.ot(o);n=3Ds.oid(o);x=3Do.s_oid"=0A=
+"t}oc=3Do.onclick?''+o.onclick:'';if((oc.indexOf(\"s_gs(\")>=3D0&&oc.ind=
"=0A=
+"exOf(\".s_oc(\")<0)||oc.indexOf(\".tl(\")>=3D0)return =
''}ta=3Dn?o.targe"=0A=
+"t:1;"=0A=
=0A=
/* Begin Modified Code for Relative Exit Links */=0A=
/*h=3Do.href?o.href:'';*/=0A=
+"var a_l=3Ds.wd.location;"=0A=
+"h=3Do.href?o.href.indexOf('http')=3D=3D-1&&o.href.indexOf('file')=3D=3D=
-1?((o.protocol?o.protocol:a_l.protocol)+'//'+(o.hostname?o.hostname:"=0A=
+"a_l.hostname)+(o.pathname?o.pathname:'')+(o.search?(o.search.substring(=
"=0A=
+"0,1)!=3D'?'?'?':'')+o.search:'')):o.href:'';"=0A=
/* End Modified Code for Relative Exit Links */=0A=
=0A=
+"i=3Dh.indexOf('?');h=3Ds.linkLeaveQueryString||i"=0A=
+"<0?h:h.substring(0,i);l=3Ds.linkName?s.linkName:s.ln(h);t=3Ds.linkType?=
"=0A=
+"s.linkType.toLowerCase():s.lt(h);if(t&&(h||l))q+=3D'&pe=3Dlnk_'+(t=3D=3D=
'd'"=0A=
+"||t=3D=3D'e'?s.ape(t):'o')+(h?'&pev1=3D'+s.ape(h):'')+(l?'&pev2=3D'+s.a=
pe(l"=0A=
+"):'');else =
trk=3D0;if(s.trackInlineStats){if(!p){p=3Ds.gv('pageURL');w=3D"=0A=
+"0}t=3Ds.ot(o);i=3Do.sourceIndex;if(s.gg('objectID')){n=3Ds.gg('objectID=
')"=0A=
+";x=3D1;i=3D1}if(p&&n&&t)qs=3D'&pid=3D'+s.ape(s.fl(p,255))+(w?'&pidt=3D'=
+w:'')"=0A=
+"+'&oid=3D'+s.ape(s.fl(n,100))+(x?'&oidt=3D'+x:'')+'&ot=3D'+s.ape(t)+(i?=
'&"=0A=
+"oi=3D'+i:'')}}if(!trk&&!qs)return '';if(s.p_r)s.p_r();var =
code=3D'';if("=0A=
+"trk&&s.vs(sed))code=3Ds.mr(sess,(vt?'&t=3D'+s.ape(vt):'')+s.hav()+q+(qs=
"=0A=
+"?qs:s.rq(s.un)),ta);s.sq(trk?'':qs);s.lnk=3Ds.eo=3Ds.linkName=3Ds.linkT=
yp"=0A=
+"e=3Ds.wd.s_objectID=3Ds.ppu=3D'';return =
code};s.tl=3Dfunction(o,t,n){var s=3D"=0A=
+"this;s.lnk=3Ds.co(o);s.linkType=3Dt;s.linkName=3Dn;s.t()};s.ssl=3D(s.wd=
.loc"=0A=
+"ation.protocol.toLowerCase().indexOf('https')>=3D0);s.d=3Ddocument;s.b=3D=
"=0A=
+"s.d.body;s.n=3Dnavigator;s.u=3Ds.n.userAgent;s.ns6=3Ds.u.indexOf('Netsc=
ap"=0A=
+"e6/');var apn=3Ds.n.appName,v=3Ds.n.appVersion,ie=3Dv.indexOf('MSIE =
'),o=3D"=0A=
+"s.u.indexOf('Opera =
'),i;if(v.indexOf('Opera')>=3D0||o>0)apn=3D'Opera';s"=0A=
+".isie=3D(apn=3D=3D'Microsoft Internet =
Explorer');s.isns=3D(apn=3D=3D'Netscape')"=0A=
+";s.isopera=3D(apn=3D=3D'Opera');s.ismac=3D(s.u.indexOf('Mac')>=3D0);if(=
o>0)s."=0A=
+"apv=3DparseFloat(s.u.substring(o+6));else =
if(ie>0){s.apv=3DparseInt(i=3Dv"=0A=
+".substring(ie+5));if(s.apv>3)s.apv=3DparseFloat(i)}else if(s.ns6>0)s."=0A=
+"apv=3DparseFloat(s.u.substring(s.ns6+10));else =
s.apv=3DparseFloat(v);s."=0A=
+"em=3D0;if(String.fromCharCode){i=3Descape(String.fromCharCode(256)).toU=
"=0A=
+"pperCase();s.em=3D(i=3D=3D'%C4%80'?2:(i=3D=3D'%U0100'?1:0))}s.un=3Dun;s=
.uns();s"=0A=
+".vl_l=3D'vmk,ppu,charSet,visitorNamespace,cookieDomainPeriods,cookieL"=0A=
+"ifetime,pageName,pageURL,referrer,currencyCode,purchaseID';s.vl_t=3Ds"=0A=
+".vl_l+',variableProvider,channel,server,pageType,campaign,state,zip"=0A=
+",events,products,linkName,linkType';for(var =
n=3D1;n<51;n++)s.vl_t+=3D',"=0A=
+"prop'+n+',eVar'+n+',hier'+n;s.vl_g=3Ds.vl_t+',trackDownloadLinks,trac"=0A=
+"kExternalLinks,trackInlineStats,linkLeaveQueryString,linkDownloadFi"=0A=
+"leTypes,linkExternalFilters,linkInternalFilters,linkNames';if(pg)s."=0A=
+"gl(s.vl_g);s.ss=3Dss;if(!ss){s.wds();s.ca()}}",=0A=
l=3Dwindow.s_c_il,n=3Dnavigator,u=3Dn.userAgent,v=3Dn.appVersion,e=3Dv.in=
dexOf(=0A=
'MSIE =
'),m=3Du.indexOf('Netscape6/'),a,i,s;if(l)for(i=3D0;i<l.length;i++){=0A=
s=3Dl[i];s.uns();if(s.un=3D=3Dun)return s;else =
if(s.pt(s.un,',','isf',un)){=0A=
s=3Ds.co(s);s.un=3Dun;s.uns();return =
s}}if(e>0){a=3DparseInt(i=3Dv.substring(e=0A=
+5));if(a>3)a=3DparseFloat(i)}else =
if(m>0)a=3DparseFloat(u.substring(m+10)=0A=
);else a=3DparseFloat(v);if(a>=3D5&&v.indexOf('Opera')<0&&u.indexOf(=0A=
'Opera')<0){eval(c);return new s_c(un,pg,ss)}else s=3Ds_c2f(c);return s(=0A=
un,pg,ss)}=0A=
=0A=

------=_NextPart_000_003E_01C8FC9E.8072D220--
