From: <Windows Internet Explorer 7로 저장>
Subject: Apple Developer Connection - iPhone Dev Center - Getting Started Docs
Date: Wed, 6 Aug 2008 15:36:46 +0900
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0021_01C8F7DA.3C475C60"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3198

This is a multi-part message in MIME format.

------=_NextPart_000_0021_01C8F7DA.3C475C60
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://developer.apple.com/iphone/gettingstarted/docs/iphonedevtools.action

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" =
"http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<HTML><HEAD><TITLE>Apple Developer Connection - iPhone Dev Center - =
Getting Started Docs</TITLE>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=euc-kr">
<META http-equiv=3Dpics-label=20
content=3D'(pics-1.1 "http://www.icra.org/ratingsv02.html" l gen true =
for "http://www.apple.com" r (cz 1 lz 1 nz 1 oz 1 vz 1) =
"http://www.rsac.org/ratingsv01.html" l gen true for =
"http://www.apple.com" r (n 0 s 0 v 0 l 0))'>
<META http-equiv=3DExpires content=3D"Fri, 26 Mar 1999 23:59:59 GMT">
<META content=3D"Apple Computer, Inc." name=3DAuthor>
<META content=3Dwidth=3D1024 name=3Dviewport><LINK=20
href=3D"http://devimages.apple.com/global/styles/adc.css" =
type=3Dtext/css=20
charset=UTF-8 rel=3Dstylesheet>
<SCRIPT =
src=3D"http://devimages.apple.com/global/scripts/lib/prototype.js"=20
type=3Dtext/javascript charset=UTF-8></SCRIPT>

<SCRIPT =
src=3D"http://devimages.apple.com/global/scripts/lib/scriptaculous.js"=20
type=3Dtext/javascript charset=UTF-8></SCRIPT>

<SCRIPT =
src=3D"http://devimages.apple.com/global/scripts/browserdetect.js"=20
type=3Dtext/javascript charset=UTF-8></SCRIPT>

<SCRIPT src=3D"http://devimages.apple.com/global/scripts/apple_core.js"=20
type=3Dtext/javascript charset=UTF-8></SCRIPT>

<SCRIPT =
src=3D"http://devimages.apple.com/global/scripts/search_decorator.js"=20
type=3Dtext/javascript charset=UTF-8></SCRIPT>

<SCRIPT src=3D"http://devimages.apple.com/global/scripts/adc_core.js"=20
type=3Dtext/javascript charset=UTF-8></SCRIPT>

<SCRIPT type=3Dtext/javascript charset=UTF-8>=0A=
		document.write('<link rel=3D"stylesheet" type=3D"text/css" =
href=3D"http://devimages.apple.com/global/styles/script.css" =
media=3D"screen">')=0A=
	</SCRIPT>
<LINK href=3D"http://developer.apple.com/iphone/styles/iphone.css" =
type=3Dtext/css=20
charset=UTF-8 rel=3Dstylesheet>
<STYLE type=3Dtext/css>#main #header {
	PADDING-LEFT: 135px
}
#main #header H1 {
	MARGIN-TOP: 0.4em
}
#main #header IMG.hero {
	LEFT: -14px
}
BODY#iphoneosoverview #sidebar #sbn-iphoneosoverview A {
	CURSOR: default; COLOR: #333; TEXT-DECORATION: none
}
BODY#iphonedevtools #sidebar #sbn-iphonedevtools A {
	CURSOR: default; COLOR: #333; TEXT-DECORATION: none
}
BODY#objectivecprimer #sidebar #sbn-objectivecprimer A {
	CURSOR: default; COLOR: #333; TEXT-DECORATION: none
}
BODY#creatingiphoneapps #sidebar #sbn-creatingiphoneapps A {
	CURSOR: default; COLOR: #333; TEXT-DECORATION: none
}
BODY#iphoneosforcocoadevelopers #sidebar #sbn-iphoneosforcocoadevelopers =
A {
	CURSOR: default; COLOR: #333; TEXT-DECORATION: none
}
BODY#gettingstartedfaq #sidebar #sbn-gettingstartedfaq A {
	CURSOR: default; COLOR: #333; TEXT-DECORATION: none
}
BODY#signingcodeforiphonedev #sidebar #sbn-signingcodeforiphonedev A {
	CURSOR: default; COLOR: #333; TEXT-DECORATION: none
}
</STYLE>

<META content=3D"MSHTML 6.00.6000.16674" name=3DGENERATOR></HEAD>
<BODY class=3D"iphone gettingstarted docs" id=3Diphonedevtools>
<DIV id=3Dglobalheader>
<H2><A href=3D"http://developer.apple.com/">Apple Developer =
Connection</A></H2>
<UL id=3Dgh-links style=3D"RIGHT: 0px">
  <LI id=3Dgh-links-apple><A href=3D"http://www.apple.com/">Apple</A> =
</LI>
  <LI id=3Dgh-links-account><A=20
  =
href=3D"https://connect.apple.com/cgi-bin/WebObjects/MemberSite.woa/wa/pr=
omo?source=3DADCLOG&amp;code=3DADCLOG-NEX">ADC=20
  Member Site</A> </LI>
  <LI id=3Dgh-links-contact><A =
href=3D"http://developer.apple.com/contact/">Contact=20
  Us</A> </LI></UL>
<UL id=3Dgh-nav>
  <LI class=3Dmenu id=3Dgh-nav-devcenters><A=20
  href=3D"http://developer.apple.com/"><SPAN>Dev=20
  Centers</SPAN><B><B>&gt;</B></B></A>=20
  <UL>
    <LI><A href=3D"http://developer.apple.com/iphone/">iPhone Dev =
Center</A> </LI>
    <LI><A href=3D"http://developer.apple.com/mac/">Mac Dev Center</A> =
</LI>
    <LI><A href=3D"http://developer.apple.com/webapps/">Web Apps Dev =
Center</A>=20
    </LI>
    <LI class=3Dmenubottom></LI></UL></LI>
  <LI id=3Dgh-nav-adconitunes><A=20
  href=3D"http://developer.apple.com/adconitunes/overview.html">ADC on =
iTunes</A>=20
  </LI>
  <LI id=3Dgh-nav-resources><A=20
  href=3D"http://developer.apple.com/information/">Information</A> =
</LI></UL>
<SCRIPT type=3Dtext/javascript charset=UTF-8>=0A=
		var menus =3D $$('#globalheader ul#gh-nav li.menu');=0A=
		var menu =3D new ADC.Menus(menus);=0A=
	</SCRIPT>
</DIV><!-- SiteCatalyst code version: H.8. Copyright 1997-2006 Omniture, =
Inc. -->
<SCRIPT language=3DJavaScript><!--=0A=
/* RSID: */=0A=
var s_account=3D"appleglobal,appleusdeveloper"=0A=
//--></SCRIPT>

<SCRIPT language=3DJavaScript=20
src=3D"http://images.apple.com/global/metrics/js/cid_check.js"=20
type=3Dtext/javascript></SCRIPT>

<SCRIPT language=3DJavaScript=20
src=3D"http://images.apple.com/global/metrics/js/s_code_h.js"=20
type=3Dtext/javascript></SCRIPT>

<SCRIPT language=3DJavaScript><!--=0A=
s.pageName=3Ddocument.title+" (US)";=0A=
s.server=3D""=0A=
s.channel=3D"www.us.developer"=0A=
s.pageType=3D""=0A=
s.prop1=3D"ADR: iPhone Dev Center"=0A=
s.prop2=3D""=0A=
s.prop3=3D""=0A=
s.prop4=3Ddocument.location;=0A=
=0A=
=0A=
/* E-commerce Variables */=0A=
s.campaign=3D""=0A=
s.state=3D""=0A=
s.zip=3D""=0A=
s.events=3D""=0A=
s.products=3D""=0A=
s.purchaseID=3D""=0A=
s.eVar1=3D""=0A=
s.eVar2=3D""=0A=
s.eVar3=3D""=0A=
s.eVar4=3D""=0A=
s.eVar5=3D""=0A=
=0A=
/************* DO NOT ALTER ANYTHING BELOW THIS LINE ! **************/=0A=
var s_code=3Ds.t();if(s_code)document.write(s_code)//--></SCRIPT>
<!-- End SiteCatalyst code version: H.8. -->
<DIV id=3Dcontainer>
<DIV id=3Dmainheader>
<H1><A href=3D"http://developer.apple.com/iphone/index.action">iPhone =
Dev=20
Center</A></H1>
<P><STRONG>Welcome, Sa&nbsp;sin</STRONG> <B>|</B> <A=20
href=3D"http://developer.apple.com/iphone/urlRedirect.action?mode=3Dupdat=
e_profile&amp;userAction=3DupdateAccount&amp;cancelPath=3D/iphone/index.a=
ction&amp;successPath=3D/iphone/index.action">Edit=20
Profile</A> <B>|</B> <A=20
href=3D"http://developer.apple.com/iphone/logout.action">Log out</A> =
</P></DIV><!--/header-->
<DIV id=3Dmain>
<DIV id=3Dcontent><A title=3D"Tools for iPhone OS Development"=20
name=3D//apple_ref/doc/uid/TP40007593-SW2 turn_anchor=3D"no"></A>
<H2>Tools for iPhone OS Development</H2>
<P> iPhone OS를 위한 어플리케이션을 개발하기위해서 당신은 Xcode tools가 돌아갈 수 있는 Mac OS X 컴퓨터가 필요하다. Xcode는 애플용 개발 툴 프로그램으로 프로젝트관리, 코드에디팅, 실행파일빌드, 소스레벨디버깅, 소스코드저장소관리, 퍼포먼스튜닝 등 많은 것들을 위해 지원배포된다. Xcode의 가장 중요한 부분은 기본적인 소스코드 개발환경을 지원하는 Xcode자체이다. Xcode가 당신이 사용하는 유일한 툴은 아니다. 이어지는 섹션에서는 iPhone 어플리케이션을 만드는데 쓰이는 어플리케이션들의 소개가 제공된다.
<P>To develop applications for iPhone OS, you need a Mac OS X computer =
running=20
the Xcode tools. Xcode is Apple's suite of development tools that =
provide=20
support for project management, code editing, building executables, =
source-level=20
debugging, source-code repository management, performance tuning, and =
much more.=20
At the center of this suite is the Xcode application itself, which =
provides the=20
basic source-code development environment. Xcode is not the only tool =
you use=20
though, and the following sections provide an introduction to the =
applications=20
you use to create iPhone applications. </P><A title=3DXcode=20
name=3D//apple_ref/doc/uid/TP40007593-SW3 turn_anchor=3D"yes"></A>
<H3>Xcode</H3>
<P>당신의 개발 경험은 Xcode에 맞추어야한다. Xcode는 통합개발환경(IDE)이다. 이것은 iPhone 프로젝트와 소스파일을 만들고 관리하며, 코드를 실행할 수 있게 빌드해주며, iPhone 시뮬레이터와 실제장치에서 실행과 디버깅을 할 수 있게 해주는 모든 툴을 제공한다.</P>
<P>The focus of your development experiences is the Xcode application. =
Xcode is=20
an integrated development environment (IDE) that provides all of the =
tools you=20
need to create and manage your iPhone projects and source files, build =
your code=20
into an executable, and run and debug your code either in iPhone =
simulator or on=20
a device. </P>
<P>새로운 iPhone프로젝트를 만들기는 Xcode의 새로운 프로젝트를 만드는 것으로 시작한다. 프로젝트는 소스코드와, 빌드 셋팅, 그리고 모든 조각이 필요한 곳에 놓여야할 규칙등 당신의 어플리케이션의 모든 정보를 조합하고 관리한다. 모든 Xcode 프로젝트의 가장 중요한 부분은 프로젝트 윈도우이다.  Figure1을 보라. 이 윈도우는 당신의 어플리케이션의 모든 중요한 요소들에 빠른 접근을 제공한다. Group & Files 는 소스파일과 그에 따라 만들어진 빌드타겟을 포함하여 프로젝트의 모든 파일을 관리하는 곳이다. Toolbar는  일반적으로 사용하는 툴과 명령어들을 제공하며, 당신이 프로젝트 작업을 하면서 자세한 사항을 설정할 수 있는 공간이다.(번역이 맞나?) 프로젝트 윈도우의 다른 모양(?) 당신의 프로젝트의 상황정보를 보여준다.(이거뭐...)</P>
<P>To create a new iPhone application, you start by creating a new =
project in=20
Xcode. A project manages all of the information associated with your=20
application, including the source files, build settings, and rules =
needed to put=20
all of the pieces together. The heart of every Xcode project is the =
project=20
window, shown in <SPAN class=3Dcontent_text><B>Figure 1&nbsp;&nbsp;</B></SPAN>. This =
window=20
provides quick access to all of the key elements of your application. =
The Groups=20
and Files list is where you manage the files in your project, including =
your=20
source files and the build targets that are created from those source =
files. The=20
toolbar provides access to commonly used tools and commands while the =
details=20
pane provides a configurable space for working on your project. Other =
aspects of=20
the project window provide you with contextual information about your =
project.=20
</P><BR><A title=3D"Figure 1An Xcode project window"=20
name=3D//apple_ref/doc/uid/TP40007593-SW1 turn_anchor=3D"yes"></A>
<P><B>Figure 1&nbsp;&nbsp;</B>An Xcode project window </P><IMG =
height=3D400=20
alt=3D"The Xcode project window"=20
src=3D"http://devimages.apple.com/iphone/gettingstarted/docs/images/proje=
ct_window.png"=20
width=3D721> <BR>
<P>Xcode는 코드 컴플리션, 문법 컬러링, 코드폴딩(코드 블럭을 접어서 안보이게 하는 것) 그리고 에러나 경고, 노트 등의 인라인 어노테이션등 개선된 텍스트 에디터를 가지고 있다. Xcode의 빌드 시스템은 적당한 기본설정과 당신의 컨텐츠를 위한 환경설정을 동시에 지원한다. 그리고 당신이 문서가 필요하다면, Research Asssistant가 Xcode 문서중 정보에 맞는 문서에서 정보를 찾아 볼 수 있게 제공해준다.</P>
<P>Xcode comes with an advanced text editor, which supports features =
such as=20
code completion, syntax coloring, code folding (to hide code blocks=20
temporarily), and inline annotations for errors, warnings, and notes. =
The build=20
system in Xcode provides both appropriate default settings and the =
ability to=20
configure the environment to your heart's content. And if you need=20
documentation, the Research Assistant provides context-sensitive =
documentation=20
while the Xcode documentation window lets you browse and search for =
information.=20
</P>
<P>Xcode에서 당신의 어플리케이션을 빌드할 때, 당신은 iPhone 시뮬레이터와 실제 디바이스 중에 하나를 선택할 수 있다. 시뮬레이터는 당신의 어플리케이션이 당신이 원하는 형태로 확실하게 움직이는지 테스트할 수 있는 환경을 제공한다. 당신의 어플리케이션의 기본적인 움직임이 만족스럽다면, 당신은 컴퓨터에 연결된 iPhone이나 iPod touch에 빌드하고 실행하게 Xcode에게 시킬 수 있다. 디바이스에서 실행하는 것은 최종적인 테스트 환경을 제공한다. 그리고 Xcode는 장치에서 돌아가는 코드에 대해서 디버거를 붙여서 만들어 준다.</P>
<P>When you build your application in Xcode, you have a choice of =
building it=20
for iPhone simulator or for a device. The simulator provides a local =
environment=20
for testing your applications to make sure they behave essentially the =
way you=20
want. After you are satisfied with your application's basic behavior, =
you can=20
tell Xcode to build it and run it on an iPhone or iPod touch connected =
to your=20
computer. Running on a device provides the ultimate test environment, =
and Xcode=20
lets you attach the built-in debugger to the code running on the device. =

</P><BR><A title=3D"Figure 2Running a project from Xcode"=20
name=3D//apple_ref/doc/uid/TP40007593-SW4 turn_anchor=3D"yes"></A>
<P><B>Figure 2&nbsp;&nbsp;</B>Running a project from Xcode </P><IMG =
height=3D454=20
alt=3D"Running a project from Xcode"=20
src=3D"http://devimages.apple.com/iphone/gettingstarted/docs/images/simul=
ator.jpg"=20
width=3D573> <BR><BR>
<P>iPhone OS에서 빌드하고 실행하는 것에 대한 좀 더 자세한 정보는 iPhone OS Programming Guide의 "Development Enviroment"를 보기바란다.</P>
<P>For details on how to build and run your project on iPhone OS, see =
<SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/DevelopmentEnvironmentOverview/chapter_=
4_section_1.html"=20
target=3D_top>"Development Environment"</A></SPAN> in <SPAN =
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/index.html"=20
target=3D_top>iPhone OS Programming Guide</A></SPAN>. </P><A=20
title=3D"Interface Builder" name=3D//apple_ref/doc/uid/TP40007593-SW5=20
turn_anchor=3D"yes"></A>
<H3>Interface Builder</H3>
<P>Interface Builder는 당신의 어플리케이션의 모습을 assemble하게 해주는 툴이다. Interface Builder를 사용하면 내부에 미리 설정된 컴포넌트들을 드래그 앤 드롭으로 당신의 어플리케이션의 윈도우에 assemble할 수 있다. 컴포넌트들은 표준의 컨트롤인 스위치, 텍스트 필드, 버튼 그리고 당신이 제공할 프로그램에서 보여주기위해 만든 별도의 것들을 포함한다. 윈도우위에 컴포넌트를 올려놓은 다음, 드래그를 통해 원하는 곳으로 이동시킬 수 있다. 그리고 inspector를 attribute를 설정하고, 이러한 오브젝트들과 당신의 코드와의 관계를 정립할 수 있다. 당신이 원하는 방향의 인터페이스가 만들어졌다면, 별도의 리소스파일 포멧인 nib파일에 해당 정보를 저장한다.</P>
<P>Interface Builder is the tool you use to assemble your =
application's user=20
interface visually. Using Interface Builder, you assemble your =
application's=20
window by dragging and dropping preconfigured components onto it. The =
components=20
include standard system controls such as switches, text fields, and =
buttons, and=20
also custom views to represent the views your application provides. =
After you've=20
placed the components on the window's surface, you can position them =
by dragging=20
them around, configure their attributes using the inspector, and =
establish the=20
relationships between those objects and your code. When your interface =
looks the=20
way you want it, you save the contents to a nib file, which is a custom =
resource=20
file format. </P>
<P>Interface Builder에서 만든 nib파일은 당신의 어플리케이션이 실행될 때 똑같은 리소스를 UI Kit이 다시 만들어내기위한 모든 정보가 들어있다. nib파일을 로딩하는 것은 파일안의 런타임버젼의 모든 오브젝트를 만들어내고, Interface Builder에서 했던 것과 똑같이 설정한다. 그리고 당신이 특별이 수립해놓은 새로 만들어진 오브젝트와 기존 당신의 어플리케이션의 오브젝트간의 연결에 대한 정보를 쓸 수 있다. 이러한 연결들은 nib파일의 오브젝트의 포인터(?)와 당신의 코드 제공하며, 오브젝트들의 자체정보와 유저액션과의 연결에 필요한 정보를 당신의 코드에 제공한다.(번역이 좀...)</P>
<P>The nib files you create in Interface Builder contain all the =
information=20
that the UI Kit needs to recreate the same objects in your application =
at=20
runtime. Loading a nib file creates runtime versions of all the objects =
stored=20
in the file, configuring them exactly as they were in Interface Builder. =
It also=20
uses the connection information you specified to establish connections =
between=20
the newly created objects and any existing objects in your application. =
These=20
connections provide your code with pointers to the nib-file objects and =
also=20
provide the information the objects themselves need to communicate user =
actions=20
to your code. </P>
<P>전체적으로, Interface Builder를 사용하는 것은 당신의 어플리케이션을 제작하는 데 걸리는 터무니없는 양의 시간을 절약해준다. Interface Builder는 당신의 인터페이스를 만드는 오브젝트를 제작하고, 설정하고, 이동시키는 데 필요한 커스텀코드를 제거한다. Interface Builder는 비주얼에디터이기 때문에, 실행중에 보이는 당신의 인터페이스를 정확하게 볼 수 있다.</P>
<P>Overall, using Interface Builder saves a tremendous amount of time =
when it=20
comes to creating your application's user interface. Interface Builder =

eliminates the custom code needed to create, configure, and position the =
objects=20
that make up your interface. Because it is a visual editor, you get to =
see=20
exactly what your interface will look like at runtime. </P><A =
title=3DInstruments=20
name=3D//apple_ref/doc/uid/TP40007593-SW7 turn_anchor=3D"yes"></A>
<H3>Instruments</H3>
<P>유저가 당신의 어플리케이션을 가장 잘 사용할 수 있게 만드는 것을 보장하기 위해서, Instruments환경에서는 당신의 iPhone 어플리케이션이 시뮬레이터와 본 장비에서 성능을 분석한다. Instruments는 당신의 어플리케이션이 작동하는 동안 의 데이터를 취합해서. 데이터를 timeline이라고 불리는 그래픽으로 제공한다. 당신은 어플리케이션의 메모리 사용량, 디스크 사용, 네트워크 사용, 그래픽 성능등에 관한 데이터를 얻을 수 있다. timeline은 모든 정보의 종류에 따라 나란히 늘어놓아서 보여줌으로서 당신의 어플리케이션의 동작의 하나의 특별한 일부만이 아니라 전체적인 상호관계를 입증할 수 있게 해준다. 좀 더 자세한 정보를 얻기 위해서 Instruments가 수집한 좀 더 자세한 샘플을 얻을 수도 있다.</P>
<P>To ensure that you deliver the best user experience for your =
software, the=20
Instruments environment lets you analyze the performance of your iPhone=20
applications while running in the simulator or on a device. Instruments =
gathers=20
data from your running application and presents that data in a graphical =
display=20
called the timeline. You can gather data about your application's =
memory usage,=20
disk activity, network activity, and graphics performance. The timeline =
view can=20
display all of the different types of information side by side, letting =
you=20
correlate the overall behavior of your application, not just the =
behavior in one=20
specific area. To get even more detailed information, you can also view =
the=20
detailed samples that Instruments gathers. </P><BR><A=20
title=3D"Figure 3Using Instruments to tune your application"=20
name=3D//apple_ref/doc/uid/TP40007593-SW8 turn_anchor=3D"yes"></A>
<P><B>Figure 3&nbsp;&nbsp;</B>Using Instruments to tune your application =

</P><IMG height=3D438 alt=3D"Using Instruments to tune your application" =

src=3D"http://devimages.apple.com/iphone/gettingstarted/docs/images/Instr=
uments.jpg"=20
width=3D568> <BR><BR>
<P>추가적으로 timeline 정보를 제공하기 위해서 Instruments는 당신의 어플리케이션의 시간을 넘은 동작(?)을 분석에 도움을 줄 수 있는 툴을 제공합니다. 에를 들어 Instruments 창은 여러번의 실행에 대한 데이터를 비축하게 합니다. 그래서 확실히 개선되었는지, 아니면 아직도 작업이 필요한지 볼 수 있게 해 줍니다. 당신은 이러한 실행에 관한 데이터를 Instruments문서에 저장해서 언제든지 열어 볼 수 있습니다.</P>
<P>In addition to providing the timeline view, Instruments provides =
tools to=20
help you analyze your application's behavior over time. For example, =
the=20
Instruments window lets you store data from multiple runs so that you =
can see=20
whether your application's behavior is actually improving or whether =
it still=20
needs work. You can save the data from these runs in an Instruments =
document and=20
open them at any time. </P>
<P>Instruments를 iPhone 어플리케이션과 어떻게 쓰는지에 대한 좀 더 자세한 정보는 iPhone OS Programing Guide의 "Development Environment"를 보기 바란다. Instruments의 좀 더 일반적인 사용법을 위해서는 " Instruments User Guide"를 보기 바란다.</P>
<P>For details on how to use Instruments with iPhone applications, see =
<SPAN=20
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/DevelopmentEnvironmentOverview/chapter_=
4_section_1.html"=20
target=3D_top>"Development Environment"</A></SPAN> in <SPAN =
class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/iPhone/Co=
nceptual/iPhoneOSProgrammingGuide/index.html"=20
target=3D_top>iPhone OS Programming Guide</A></SPAN>. For general =
information on=20
how to use Instruments, see <SPAN class=3Dcontent_text><A=20
href=3D"http://developer.apple.com/iphone/library/documentation/Developer=
Tools/Conceptual/InstrumentsUserGuide/index.html"=20
target=3D_top>Instruments User Guide</A></SPAN>. =
</P></DIV><!--/content-->
<DIV id=3Dsidebar>
<DIV class=3Dsidebox>
<H3>Browse Getting Started Documents</H3>
<DIV class=3Dsb>
<UL class=3Dnav>
  <LI id=3Dsbn-iphoneosoverview><A=20
  =
href=3D"http://developer.apple.com/iphone/gettingstarted/docs/iphoneosove=
rview.action">iPhone=20
  OS Overview</A>=20
  <LI id=3Dsbn-iphonedevtools><A=20
  =
href=3D"http://developer.apple.com/iphone/gettingstarted/docs/iphonedevto=
ols.action">Tools=20
  for iPhone OS Development</A>=20
  <LI id=3Dsbn-objectivecprimer><A=20
  =
href=3D"http://developer.apple.com/iphone/gettingstarted/docs/objectivecp=
rimer.action">Learning=20
  Objective-C: A Primer</A>=20
  <LI id=3Dsbn-creatingiphoneapps><A=20
  =
href=3D"http://developer.apple.com/iphone/gettingstarted/docs/creatingiph=
oneapps.action">Creating=20
  an iPhone Application</A>=20
  <LI id=3Dsbn-iphoneosforcocoadevelopers><A=20
  =
href=3D"http://developer.apple.com/iphone/gettingstarted/docs/iphoneosfor=
cocoadevelopers.action">iPhone=20
  OS for Cocoa Developers</A>=20
  <LI id=3Dsbn-gettingstartedfaq><A=20
  =
href=3D"http://developer.apple.com/iphone/gettingstarted/docs/gettingstar=
tedfaq.action">Frequently=20
  Asked Questions</A>=20
  <LI id=3Dsbn-signingcodeforiphonedev><A=20
  =
href=3D"http://developer.apple.com/iphone/gettingstarted/docs/signingcode=
foriphonedev.action">Signing=20
  Code For iPhone Development</A>=20
</LI></UL></DIV></DIV></DIV><!--/sidebar--></DIV><!--/main--></DIV>
<DIV class=3Dgf-980 id=3Dglobalfooter>
<P class=3Dgf-buy>Visit the Apple Store <A id=3Dgf-buy-online=20
href=3D"http://www.apple.com/store/">online</A> (1-800-MY-APPLE), find a =
<A=20
id=3Dgf-buy-retail href=3D"http://www.apple.com/retail/">retail</A> =
location or find=20
a <A id=3Dgf-buy-reseller=20
href=3D"http://www.apple.com/buy/locator/">reseller</A>.</P>
<P class=3Dgf-links><A id=3Dgf-links-contact=20
href=3D"http://developer.apple.com/contact/">Contact Us</A> | <A=20
id=3Dgf-links-hotnews href=3D"http://www.apple.com/hotnews/">News &amp;=20
Feeds</A></P>
<P class=3Dgf-sosumi>Copyright =A9 2008 Apple Inc. All rights reserved. =
<A=20
id=3Dgf-sosumi-legal href=3D"http://www.apple.com/legal/">Terms of =
Use</A> | <A=20
id=3Dgf-sosumi-privacy =
href=3D"http://www.apple.com/legal/privacy/">Privacy=20
Policy</A></P></DIV><!--/globalfooter--></BODY></HTML>

------=_NextPart_000_0021_01C8F7DA.3C475C60
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://devimages.apple.com/iphone/gettingstarted/docs/images/project_window.png

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
u9ojUxMTM6WqYibaW7I+pQpjhdzI6bIHerKjtVHDrJCfViLpuKVWSnmXmdl0xKuVxsdzPtMiEVMz
rGw2ie6d3lzHxMREoTAbPYcQymQyTU1Ns8ahxSJ2hUAR5zbQHCI2U9M0Sum+ffsMw3jnnXcopalU
KpfLJRIJcZm8/vrr//7v/16tVgEglUo9++yzL774onCFLHqs28OyrIMHDw4ODsbj8YaGhsByEI/H
9+7de+HChbfeemvr1q1vvPHGzh072js6VjVDUnyddDr9+OOPX79+va2tzTAM0SRKSSod2/PA9rPn
TmKd6arxxq9+deDAwUw2s4KxtMs0jFEK822EQa6KMEDDYs/9nHPKGKd0dgy/FQjlw1MQiyV93+ez
ObkcKWhTm/GZA6nN7ZFyjVwdLV8asnV1dpRFnDMFKXpiePxK7+Zmurz5kbJSqVSpVAFhAGboBoiK
kwAAwJioK0gIoYRQDly0H2HgHIDPCxe7QzjniqK0t7dHIpFf/vKX4+Pjv/3bv/3AAw8oijIwMPCd
73znZz/72f79+7u7uxfbmBbzY2dPnZqpQTye3Lxzb3NCtR0ajUU0ddY0y4hTmB4Zytk7du+2sAiF
ZRyhoIZK2LgolviufeXi6cvXKw8+erg9E61V8udPHa/qDQcP7IsoYn2EMWaU1CoVrhpRy8QYAXDG
GHBenBk/e/J8155HNrQnEULAWCk/NTZR2NC7I6oCBwSMcfjYDiJ2iNCKeQwRQiL1PZ/PDwwMEELC
Dwx1wmKZ+0n4o/Bj5MLld5EbxJByzr/+9a+fPn1aWDK+853vfOUrX/nyl78MAMePH8cYf+1rX/vz
P//zb33rW7/3e78nNikWi1/96ld/53d+BwD++Z//+aWXXvrLv/zLN9988+DBg4ZhPP300+H9+77/
iapXU/fb33A0WqhhAzuH67pi+ETAGIKGbFNbe0dnZ1tLVjn/h3/2/gcXm1D8u//wylC+Ss3MS5//
0t4W4lWLv/rpP/mTuSmS/s3/+B8P9aZe/+5/jx76zad7Gz84+sPz7s6XP9f77k++/5M3P1Sj3THN
MZsf+F/+5xeQ591zokPcj44ePfrDH/4wl8uJJ+/f+I3feOGFF3zfh1CAxcJzK3wrQnMoinLlypV/
+Zd/qVarTU1NTz/9dCQSGRsbO3v27Guvvea67mOPPeb7Psa4t7f32LFjb775pqIoL730Um9vb7Va
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
SUVORK5CYII=

------=_NextPart_000_0021_01C8F7DA.3C475C60
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://devimages.apple.com/iphone/gettingstarted/docs/images/simulator.jpg

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
mkor4nl7K/QiODbyWZr0nLnuHyFSbqR7d/qjW8sVq6lZKRl1jbBmI9T1VVo+HexK0kgQrnuSTVUb
v0O1AyhySRl0zMVUJQa5njFr18Kfdj78Eoz+Fqjr9bTy9GHpxyOXXta671YJJKAjIk9hDksjcLU6
a/rHINBcvHj5c8sRiUXEwZJ6qRAgFTM4MYpFVR4FUOd6h6l2jpaxpdTvFzy46vXabRW3i3K9qJ+X
bjTvdXJ9ibadKGdo9DqNwnO1pYc0rdudxpUwjBVfs4cezMxXv/fEVpBojs/YrVZHTtPUYsLLOoQ6
Uk5q0xcJSLiGexnqxnRVGNLqDAy7KQXQTM8SPKCYEzIlOYOgpTDiYVeJkU9nZPyHVYP2b9EpypnV
Yu27xIipkUXRUjKN1VSEUM1cpqAURA3pqFNx2mARnAN8SDPkBqeh7WeWVxuZONa1IJfWEtDvmk89
b2dSw6rnlbFQndfathIMTLMX0m9bAZExl3oPzh6Yh6fbwW09JazQ9Zbj1TrL8bumvwpp7aVJW1NR
d7nbSTbduCt0bwTrRs5/SbVfsb1qN01F2MrFxJWoUpyVpzuT44qPL3VqX7S7sDmacVSuVdKGpEJG
LigdGPko0IOQVNEumUCqVZNSMfOpBGScvjCgsQyCBkQMQ5jKHJ3zj4edtYvDHHDuph7a14cXvlik
+1J+ppP0d31suKLp36zyLqWgYZKZSRfOWjmUkSx0LQ64+Iq5eOzSkkiyOL1+KrwROiglKuyrmSUM
2Q5+YDcbRsG7b5cjY22zKSb+LKKw4v1cE2aneN/2nZ4O/uN6MGorw5yfq4etpekvFnBwazxFmk3d
7RnyJ+geDYNVYvXrGUE5QTeqoJqpSlhSbmKYhW75f7sWSEQWjVB47fcen/k7pNHCOu6nvLlony1o
sMWqUq+zP2M8M6i+cmo1Mp6Lpq03LFc2fcm5VSVO73kn9FeP+4LTvrXuz5mVknUHRDMY9XXFVaso
+uRhvvdpIml5SQUUjo9kszaFIkRsicq3pKGMRup/B2nWW69MbR0/rNq2/ltu/o5Wop5ybaacUquu
DVWlFY1lWhquitu6o3vqLR7vr1O5ZsatXJTWEIpQlGjk6c2LToqutMKJm5uF1VERsi8kk4uDrK8w
qxJKt6a2BgrLoRMe6YxpZea+WavnKjRo7USKZAjU4EAod3HJc+Yan096TKTJhHxLb0GTZBk3JyYw
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
7ltfrantFYtNauimynmg4ipMomQ1PHvYqwSki5X9V4UODFCiMf8AlX5teSlJ3N5Ov1PLjZOu/MfR
+zPCKoeCH06Y3U9do1K86NebXh9Sr3e5WXV1tpts2pPu9xTdlsyS6UZZEV9ZrxpmThZdw2LwIojD
O9vIC2bm8wNHwu7fMC/pb719/pKPjlqJP6dC1YprLXOqfGfXe+mDDSu1GCTWkpXwJKfhXrRwFwUs
KkLZizYoJszrJpuExJKr6efn159bb+ofrGvbS8pIGI2NbvJPyW135L/T6udlRfOtbahozy4sqUy1
9oWp+KQXzUMvRIthETZblPbJfw9pYKgC65DnXREDukYAwBgDAGAMAYAwBgDAGAMAYAwBgDAGAMAY
AwBgDAGAMAYAwBgDAGAMAYAwBgDAGAMAYAwBgDAGAMAYAwBgDAGAMAYAwBgDAGAMAYAwBgDAGAMA
YAwBgDAGAMAYAwCgTf6revB/rJ9wfM/fDf8AVr77+7vX+/8AsU+V+4/n/wA598en3+n8v+e7eeOn
OAHv6rfrBC/eH3B+tXy8j+rvzv3d+sHyvpE+9/uX1/8AfH5f0e35n0Ph7eO/pxgH3a/cH3zL/I/c
/wCsHy8V9/fK/JffPyva9+5Pvf0f7t+X7fmPlfW+Hj1PT/hYB8G/6rfrHI/KfcH63fd7P72+X+7v
1j+6u83yH3j6f++f3f38+j6v5vnntwCv4AwBgDAGAMAYAwBgDAGAMAYAwBgDAGAMAYAwBgDAP//Z

------=_NextPart_000_0021_01C8F7DA.3C475C60
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://devimages.apple.com/iphone/gettingstarted/docs/images/Instruments.jpg

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
TCL/2Q==

------=_NextPart_000_0021_01C8F7DA.3C475C60
Content-Type: text/css;
	charset="ks_c_5601-1987"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://developer.apple.com/global/styles/nav.css

#globalheader {
	Z-INDEX: 9998; MARGIN: 18px auto; WIDTH: 982px; POSITION: relative; =
HEIGHT: 38px
}
#globalheader #globalnav {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
#globalheader #globalnav LI {
	DISPLAY: inline
}
#globalheader #globalnav LI A {
	FLOAT: left; OVERFLOW: hidden; WIDTH: 117px; PADDING-TOP: 38px; HEIGHT: =
0px
}
#globalheader #globalnav LI A {
	BACKGROUND-IMAGE: url(/global/nav/images/globalnavbg.png); =
BACKGROUND-REPEAT: no-repeat; _background-image: =
url(/global/nav/images/globalnavbg.gif)
}
#globalheader #globalsearch {
	BACKGROUND-IMAGE: url(/global/nav/images/globalnavbg.png); =
BACKGROUND-REPEAT: no-repeat; _background-image: =
url(/global/nav/images/globalnavbg.gif)
}
#globalheader #globalnav LI#gn-store A {
	BACKGROUND-POSITION: 0px 0px
}
#globalheader #globalnav LI#gn-store A {
	BACKGROUND-POSITION: -117px 0px
}
#globalheader #globalnav LI#gn-mac A {
	BACKGROUND-POSITION: -234px 0px
}
#globalheader #globalnav LI#gn-ipoditunes A {
	BACKGROUND-POSITION: -351px 0px
}
#globalheader #globalnav LI#gn-iphone A {
	BACKGROUND-POSITION: -468px 0px
}
#globalheader #globalnav LI#gn-downloads A {
	BACKGROUND-POSITION: -585px 0px
}
#globalheader #globalnav LI#gn-support A {
	BACKGROUND-POSITION: -702px 0px
}
#globalheader #globalnav LI#gn-apple A:hover {
	BACKGROUND-POSITION: 0px -38px
}
#globalheader #globalnav LI#gn-store A:hover {
	BACKGROUND-POSITION: -117px -38px
}
#globalheader #globalnav LI#gn-mac A:hover {
	BACKGROUND-POSITION: -234px -38px
}
#globalheader #globalnav LI#gn-ipoditunes A:hover {
	BACKGROUND-POSITION: -351px -38px
}
#globalheader #globalnav LI#gn-iphone A:hover {
	BACKGROUND-POSITION: -468px -38px
}
#globalheader #globalnav LI#gn-downloads A:hover {
	BACKGROUND-POSITION: -585px -38px
}
#globalheader #globalnav LI#gn-support A:hover {
	BACKGROUND-POSITION: -702px -38px
}
#globalheader #globalnav LI#gn-apple A:active {
	BACKGROUND-POSITION: 0px -76px
}
#globalheader #globalnav LI#gn-store A:active {
	BACKGROUND-POSITION: -117px -76px
}
#globalheader #globalnav LI#gn-mac A:active {
	BACKGROUND-POSITION: -234px -76px
}
#globalheader #globalnav LI#gn-ipoditunes A:active {
	BACKGROUND-POSITION: -351px -76px
}
#globalheader #globalnav LI#gn-iphone A:active {
	BACKGROUND-POSITION: -468px -76px
}
#globalheader #globalnav LI#gn-downloads A:active {
	BACKGROUND-POSITION: -585px -76px
}
#globalheader #globalnav LI#gn-support A:active {
	BACKGROUND-POSITION: -702px -76px
}
.home#globalheader #globalnav LI#gn-apple A:hover {
	BACKGROUND-POSITION: 0px 0px; CURSOR: default
}
.store#globalheader #globalnav LI#gn-store A {
	BACKGROUND-POSITION: -117px -114px
}
.mac#globalheader #globalnav LI#gn-mac A {
	BACKGROUND-POSITION: -234px -114px
}
.ipoditunes#globalheader #globalnav LI#gn-ipoditunes A {
	BACKGROUND-POSITION: -351px -114px
}
.iphone#globalheader #globalnav LI#gn-iphone A {
	BACKGROUND-POSITION: -468px -114px
}
.downloads#globalheader #globalnav LI#gn-downloads A {
	BACKGROUND-POSITION: -585px -114px
}
.support#globalheader #globalnav LI#gn-support A {
	BACKGROUND-POSITION: -702px -114px
}
#globalsearch {
	BACKGROUND-POSITION: 100% 0px; RIGHT: 0px; WIDTH: 163px; =
BACKGROUND-REPEAT: no-repeat; POSITION: absolute; TOP: 0px; HEIGHT: 38px
}
.active#globalsearch {
	BACKGROUND-POSITION: 100% -38px
}
#globalsearch INPUT.g-prettysearch {
	MARGIN-TOP: 9px; BACKGROUND: =
url(/global/nav/images/searchfield_repeat.png) repeat-x center top; =
MARGIN-LEFT: 11px; WIDTH: 140px; HEIGHT: 16px
}
#globalsearch .search-wrapper {
	MARGIN-TOP: 9px; MARGIN-LEFT: 11px; WIDTH: 140px; POSITION: relative
}
#globalsearch .search-wrapper INPUT.g-prettysearch {
	MARGIN-TOP: -1px; MARGIN-LEFT: 10px; WIDTH: 110px; MARGIN-RIGHT: -2px
}
#globalsearch .search-wrapper .left {
	BEHAVIOR: url(/global/scripts/lib/iepngfix.htc)
}
#globalsearch .search-wrapper .right {
	BEHAVIOR: url(/global/scripts/lib/iepngfix.htc)
}
#globalsearch .search-wrapper .left {
	DISPLAY: block; BACKGROUND: =
url(/global/nav/images/searchfield_leftcap.png) no-repeat left top; =
LEFT: 0px; WIDTH: 20px; POSITION: absolute; TOP: 0px; HEIGHT: 19px
}
#globalsearch .search-wrapper .right {
	DISPLAY: block; RIGHT: 0px; BACKGROUND: =
url(/global/nav/images/searchfield_rightcap.png) no-repeat right top; =
WIDTH: 10px; POSITION: absolute; TOP: 0px; HEIGHT: 19px
}
#globalsearch .blurred.empty.search-wrapper INPUT {
	COLOR: #7e7e7e
}
#globalsearch .search-wrapper .reset {
	DISPLAY: block; Z-INDEX: 1; RIGHT: 4px; BACKGROUND: =
url(/global/nav/images/close.gif); OVERFLOW: hidden; WIDTH: 11px; =
CURSOR: pointer; POSITION: absolute; TOP: 4px; HEIGHT: 11px; _cursor: =
hand
}
#globalsearch .empty.search-wrapper .reset {
	DISPLAY: none
}
#globalsearch .search-wrapper INPUT.g-prettysearch {
	BORDER-TOP-WIDTH: 0px; PADDING-RIGHT: 0px; PADDING-LEFT: 0px; =
BORDER-LEFT-WIDTH: 0px; RIGHT: 10px; BACKGROUND: =
url(/global/nav/images/searchfield_repeat.png) repeat-x center top; =
BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; FONT: 11px =
"Lucida Grande", Geneva, Arial, sans-serif; WIDTH: 110px; PADDING-TOP: =
3px; POSITION: absolute; TOP: 0px; BORDER-RIGHT-WIDTH: 0px
}
#globalsearch LABEL .prettyplaceholder {
	DISPLAY: none
}
#sp-results {
	LEFT: 165px; MARGIN-BOTTOM: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: -2px; =
POSITION: absolute; TOP: 61px; HEIGHT: 0px
}
#sp-results .inside {
	FONT-SIZE: 1px; RIGHT: 0px; WIDTH: 328px; LINE-HEIGHT: 1px; POSITION: =
absolute; TOP: 0px; HEIGHT: auto
}
#sp-results .resultCat {
	BORDER-RIGHT: #fb6bff 1px; BORDER-TOP: #fb6bff 1px; BACKGROUND: =
#919191; PADDING-BOTTOM: 12px; MARGIN: 0px; FONT: bold 11px "Lucida =
Grande", Geneva, Arial, Verdana, sans-serif; BORDER-LEFT: #fb6bff 1px; =
WIDTH: 302px; COLOR: #f6f6f6; BORDER-BOTTOM: #fb6bff 1px; POSITION: =
relative; HEIGHT: 8px
}
UL.sp-results {
	PADDING-RIGHT: 3px; PADDING-LEFT: 3px; BACKGROUND: =
url(/global/nav/images/shortcuts_bg_mid_grey.png) repeat-y 0px 0px; =
PADDING-BOTTOM: 0px; MARGIN: 0px; FONT: 10px/14px "Lucida Grande", =
Geneva, Arial, Verdana, sans-serif; WIDTH: 328px; COLOR: #333; =
PADDING-TOP: 0px; TEXT-ALIGN: left; _background: =
url(/global/nav/images/shortcuts_bg_mid_grey.gif) repeat-y 0 0
}
UL.sp-results LI {
	BORDER-RIGHT: #919191 1px solid; PADDING-RIGHT: 10px; PADDING-LEFT: =
10px; PADDING-BOTTOM: 5px; MARGIN: 0px 0px -3px; BORDER-LEFT: #919191 =
1px solid; WIDTH: 300px; PADDING-TOP: 5px; LIST-STYLE-TYPE: none; =
POSITION: relative; HEIGHT: 4.6em
}
UL.sp-results LI.viewall {
	BACKGROUND: url(/global/nav/images/shortcuts_bg_foot_grey.png) =
no-repeat left bottom; LEFT: 0px; WIDTH: 308px; COLOR: #000; =
BORDER-TOP-STYLE: none; BOTTOM: -27px; BORDER-RIGHT-STYLE: none; =
BORDER-LEFT-STYLE: none; POSITION: absolute; HEIGHT: 20px; TEXT-ALIGN: =
right; BORDER-BOTTOM-STYLE: none; _background: =
url(/global/nav/images/shortcuts_bg_foot_grey.gif) no-repeat left bottom
}
UL.sp-results LI.viewall A {
	PADDING-RIGHT: 23px; BACKGROUND: =
url(/global/nav/images/shortcuts_arrow.gif) no-repeat 99% 50%; =
PADDING-BOTTOM: 3px; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); =
FONT: bold 11px "Lucida Grande", Geneva, Arial, Verdana, sans-serif; =
COLOR: #fff; PADDING-TOP: 3px
}
UL.sp-results LI.hoverli {
	BACKGROUND: #b7b7b7 repeat-x; CURSOR: pointer; COLOR: #fff
}
UL.sp-results LI.hoverli H4 A {
	COLOR: #fff
}
UL.sp-results LI.hoverli P {
	COLOR: #f1f1f1
}
UL.sp-results LI SPAN.text {
	DISPLAY: block; LEFT: 68px; WIDTH: 240px; POSITION: absolute
}
UL.sp-results LI H4 {
	FONT-WEIGHT: bold; FONT-SIZE: 11px; MARGIN: 0px
}
UL.sp-results LI P {
	FONT-SIZE: 10px; MARGIN: 0px; OVERFLOW: hidden; COLOR: #555; HEIGHT: =
2.7em
}
UL.sp-results LI A {
	COLOR: #606060; TEXT-DECORATION: none
}
UL.sp-results LI IMG {
	LEFT: 10px; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); WIDTH: =
46px; POSITION: absolute; HEIGHT: 46px
}
UL.sp-results LI .replacementimg {
	LEFT: 10px; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); WIDTH: =
46px; POSITION: absolute; HEIGHT: 46px
}
UL.sp-results LI H4 A {
	COLOR: #191919
}
UL.sp-results LI.hover.viewall {
	BACKGROUND: url(/global/nav/images/shortcuts_bg_foot_grey.png) =
no-repeat left bottom
}
#sp-search-spinner {
	DISPLAY: none; Z-INDEX: 10; RIGHT: 16px; POSITION: absolute; TOP: 13px
}
#sp-search-cancel IMG {
	CURSOR: pointer
}
#sp-results .firstCat {
	BACKGROUND: url(/global/nav/images/shortcuts_bg_head_grey.png) =
no-repeat left top; LEFT: 0px; WIDTH: 308px; POSITION: absolute; TOP: =
-25px; HEIGHT: 8px; _background: =
url(/global/nav/images/shortcuts_bg_head_grey.gif) no-repeat left top
}
.viewall#sp-result-none {
	BOTTOM: -27px
}
.viewall#sp-result-none A {
	FONT-SIZE: 10px
}
#globalfooter {
	FONT-SIZE: 10px; PADDING-BOTTOM: 36px; MARGIN: 18px auto; COLOR: #999; =
TEXT-ALIGN: left! important
}
#globalfooter A {
	TEXT-DECORATION: none
}
#globalfooter A:hover {
	TEXT-DECORATION: underline
}
#globalfooter P {
	MARGIN: 0px
}
#globalfooter .gf-buy {
	FLOAT: left; MARGIN: 18px 0px 9px; WIDTH: 60%
}
#globalfooter .gf-links {
	FLOAT: right; MARGIN: 18px 0px 9px; TEXT-ALIGN: right
}
#globalfooter .gf-links A {
	PADDING-RIGHT: 10px; PADDING-LEFT: 10px; PADDING-BOTTOM: 0px; =
PADDING-TOP: 0px; WHITE-SPACE: nowrap
}
#globalfooter .gf-links A.last {
	PADDING-RIGHT: 0px; WIDTH: auto! important; _float: none
}
#globalfooter .gf-sosumi {
	CLEAR: both; BORDER-TOP: #eee 1px solid; WIDTH: 100%; PADDING-TOP: 9px
}
#globalfooter .gf-sosumi A {
	PADDING-RIGHT: 10px; PADDING-LEFT: 10px; PADDING-BOTTOM: 0px; =
PADDING-TOP: 0px
}
#globalfooter {
	WIDTH: 980px
}
#breadcrumbs {
	FONT-WEIGHT: bold; FONT-SIZE: 11px; BACKGROUND: =
url(/global/nav/images/breadcrumb_bg.png) no-repeat; BEHAVIOR: =
url(/global/scripts/lib/iepngfix.htc); OVERFLOW: hidden; COLOR: #444; =
LINE-HEIGHT: 34px; HEIGHT: 36px; text-shadow: 2px 2px 1px #fff
}
#breadcrumbs A {
	PADDING-RIGHT: 10px; PADDING-LEFT: 10px; FLOAT: left; PADDING-BOTTOM: =
0px; MARGIN-LEFT: -10px; COLOR: #444; PADDING-TOP: 0px; POSITION: =
relative; TEXT-DECORATION: none; _cursor: hand
}
#breadcrumbs A:hover {
	COLOR: #333; TEXT-DECORATION: none! important
}
#breadcrumbs A.home {
	MARGIN: 0px; OVERFLOW: hidden; WIDTH: 15px; PADDING-TOP: 36px; HEIGHT: =
0px
}
#breadcrumbs SPAN {
	BACKGROUND: url(/global/nav/images/breadcrumb_sep.png) no-repeat; =
FLOAT: left; MARGIN: 1px 10px 0px 0px; BEHAVIOR: =
url(/global/scripts/lib/iepngfix.htc); OVERFLOW: hidden; WIDTH: 9px; =
PADDING-TOP: 34px; POSITION: relative; HEIGHT: 0px
}
#directorynav {
	BORDER-TOP: #e5e5e5 1px solid; MARGIN-TOP: -4px; FONT-SIZE: 11px; =
BACKGROUND: url(/global/nav/images/directory_bg.png) repeat-y; FLOAT: =
left; WIDTH: 100%; POSITION: relative
}
#directorynav .column {
	PADDING-RIGHT: 0px; PADDING-LEFT: 18px; PADDING-BOTTOM: 0px; WIDTH: =
122px; PADDING-TOP: 9px
}
#directorynav .last.column {
	PADDING-RIGHT: 0px; FLOAT: left! important
}
#directorynav H3 {
	FONT-WEIGHT: bold; COLOR: #444
}
#directorynav H3.standalone {
	MARGIN-BOTTOM: 18px
}
#directorynav A {
	DISPLAY: block; _zoom: 1
}
#directorynav A:link {
	COLOR: #777; TEXT-DECORATION: none
}
#directorynav A:visited {
	COLOR: #777; TEXT-DECORATION: none
}
#directorynav H3.standalone A:link {
	COLOR: #444
}
#directorynav H3.standalone A:visited {
	COLOR: #444
}
#directorynav A:hover {
	COLOR: #333! important; TEXT-DECORATION: none! important
}
#directorynav .capbottom {
	CLEAR: both; BACKGROUND: url(/global/nav/images/directory_capbg.png) =
no-repeat; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); WIDTH: =
980px; POSITION: relative; TOP: 5px; HEIGHT: 5px; _top: 12px
}
.gf-900 #directorynav .column {
	WIDTH: 120px
}
.gf-980 .mac#directorynav #dn-cola {
	WIDTH: 135px
}
.gf-980 .mac#directorynav #dn-colb {
	WIDTH: 100px
}
.gf-980 .mac#directorynav #dn-cold {
	WIDTH: 110px
}
.gf-980 .mac#directorynav #dn-colg {
	WIDTH: 130px
}
.iphone#directorynav .column {
	WIDTH: 174px
}
.ipoditunes#directorynav .column {
	WIDTH: 178px
}
.ipoditunes#directorynav .productred {
	FONT-SIZE: 9px; WHITE-SPACE: nowrap
}
#directorynav UL {
	MARGIN-BOTTOM: 9px
}

------=_NextPart_000_0021_01C8F7DA.3C475C60
Content-Type: text/css;
	charset="ks_c_5601-1987"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://developer.apple.com/global/styles/nav.css

#globalheader {
	Z-INDEX: 9998; MARGIN: 18px auto; WIDTH: 982px; POSITION: relative; =
HEIGHT: 38px
}
#globalheader #globalnav {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
#globalheader #globalnav LI {
	DISPLAY: inline
}
#globalheader #globalnav LI A {
	FLOAT: left; OVERFLOW: hidden; WIDTH: 117px; PADDING-TOP: 38px; HEIGHT: =
0px
}
#globalheader #globalnav LI A {
	BACKGROUND-IMAGE: url(/global/nav/images/globalnavbg.png); =
BACKGROUND-REPEAT: no-repeat; _background-image: =
url(/global/nav/images/globalnavbg.gif)
}
#globalheader #globalsearch {
	BACKGROUND-IMAGE: url(/global/nav/images/globalnavbg.png); =
BACKGROUND-REPEAT: no-repeat; _background-image: =
url(/global/nav/images/globalnavbg.gif)
}
#globalheader #globalnav LI#gn-store A {
	BACKGROUND-POSITION: 0px 0px
}
#globalheader #globalnav LI#gn-store A {
	BACKGROUND-POSITION: -117px 0px
}
#globalheader #globalnav LI#gn-mac A {
	BACKGROUND-POSITION: -234px 0px
}
#globalheader #globalnav LI#gn-ipoditunes A {
	BACKGROUND-POSITION: -351px 0px
}
#globalheader #globalnav LI#gn-iphone A {
	BACKGROUND-POSITION: -468px 0px
}
#globalheader #globalnav LI#gn-downloads A {
	BACKGROUND-POSITION: -585px 0px
}
#globalheader #globalnav LI#gn-support A {
	BACKGROUND-POSITION: -702px 0px
}
#globalheader #globalnav LI#gn-apple A:hover {
	BACKGROUND-POSITION: 0px -38px
}
#globalheader #globalnav LI#gn-store A:hover {
	BACKGROUND-POSITION: -117px -38px
}
#globalheader #globalnav LI#gn-mac A:hover {
	BACKGROUND-POSITION: -234px -38px
}
#globalheader #globalnav LI#gn-ipoditunes A:hover {
	BACKGROUND-POSITION: -351px -38px
}
#globalheader #globalnav LI#gn-iphone A:hover {
	BACKGROUND-POSITION: -468px -38px
}
#globalheader #globalnav LI#gn-downloads A:hover {
	BACKGROUND-POSITION: -585px -38px
}
#globalheader #globalnav LI#gn-support A:hover {
	BACKGROUND-POSITION: -702px -38px
}
#globalheader #globalnav LI#gn-apple A:active {
	BACKGROUND-POSITION: 0px -76px
}
#globalheader #globalnav LI#gn-store A:active {
	BACKGROUND-POSITION: -117px -76px
}
#globalheader #globalnav LI#gn-mac A:active {
	BACKGROUND-POSITION: -234px -76px
}
#globalheader #globalnav LI#gn-ipoditunes A:active {
	BACKGROUND-POSITION: -351px -76px
}
#globalheader #globalnav LI#gn-iphone A:active {
	BACKGROUND-POSITION: -468px -76px
}
#globalheader #globalnav LI#gn-downloads A:active {
	BACKGROUND-POSITION: -585px -76px
}
#globalheader #globalnav LI#gn-support A:active {
	BACKGROUND-POSITION: -702px -76px
}
.home#globalheader #globalnav LI#gn-apple A:hover {
	BACKGROUND-POSITION: 0px 0px; CURSOR: default
}
.store#globalheader #globalnav LI#gn-store A {
	BACKGROUND-POSITION: -117px -114px
}
.mac#globalheader #globalnav LI#gn-mac A {
	BACKGROUND-POSITION: -234px -114px
}
.ipoditunes#globalheader #globalnav LI#gn-ipoditunes A {
	BACKGROUND-POSITION: -351px -114px
}
.iphone#globalheader #globalnav LI#gn-iphone A {
	BACKGROUND-POSITION: -468px -114px
}
.downloads#globalheader #globalnav LI#gn-downloads A {
	BACKGROUND-POSITION: -585px -114px
}
.support#globalheader #globalnav LI#gn-support A {
	BACKGROUND-POSITION: -702px -114px
}
#globalsearch {
	BACKGROUND-POSITION: 100% 0px; RIGHT: 0px; WIDTH: 163px; =
BACKGROUND-REPEAT: no-repeat; POSITION: absolute; TOP: 0px; HEIGHT: 38px
}
.active#globalsearch {
	BACKGROUND-POSITION: 100% -38px
}
#globalsearch INPUT.g-prettysearch {
	MARGIN-TOP: 9px; BACKGROUND: =
url(/global/nav/images/searchfield_repeat.png) repeat-x center top; =
MARGIN-LEFT: 11px; WIDTH: 140px; HEIGHT: 16px
}
#globalsearch .search-wrapper {
	MARGIN-TOP: 9px; MARGIN-LEFT: 11px; WIDTH: 140px; POSITION: relative
}
#globalsearch .search-wrapper INPUT.g-prettysearch {
	MARGIN-TOP: -1px; MARGIN-LEFT: 10px; WIDTH: 110px; MARGIN-RIGHT: -2px
}
#globalsearch .search-wrapper .left {
	BEHAVIOR: url(/global/scripts/lib/iepngfix.htc)
}
#globalsearch .search-wrapper .right {
	BEHAVIOR: url(/global/scripts/lib/iepngfix.htc)
}
#globalsearch .search-wrapper .left {
	DISPLAY: block; BACKGROUND: =
url(/global/nav/images/searchfield_leftcap.png) no-repeat left top; =
LEFT: 0px; WIDTH: 20px; POSITION: absolute; TOP: 0px; HEIGHT: 19px
}
#globalsearch .search-wrapper .right {
	DISPLAY: block; RIGHT: 0px; BACKGROUND: =
url(/global/nav/images/searchfield_rightcap.png) no-repeat right top; =
WIDTH: 10px; POSITION: absolute; TOP: 0px; HEIGHT: 19px
}
#globalsearch .blurred.empty.search-wrapper INPUT {
	COLOR: #7e7e7e
}
#globalsearch .search-wrapper .reset {
	DISPLAY: block; Z-INDEX: 1; RIGHT: 4px; BACKGROUND: =
url(/global/nav/images/close.gif); OVERFLOW: hidden; WIDTH: 11px; =
CURSOR: pointer; POSITION: absolute; TOP: 4px; HEIGHT: 11px; _cursor: =
hand
}
#globalsearch .empty.search-wrapper .reset {
	DISPLAY: none
}
#globalsearch .search-wrapper INPUT.g-prettysearch {
	BORDER-TOP-WIDTH: 0px; PADDING-RIGHT: 0px; PADDING-LEFT: 0px; =
BORDER-LEFT-WIDTH: 0px; RIGHT: 10px; BACKGROUND: =
url(/global/nav/images/searchfield_repeat.png) repeat-x center top; =
BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; FONT: 11px =
"Lucida Grande", Geneva, Arial, sans-serif; WIDTH: 110px; PADDING-TOP: =
3px; POSITION: absolute; TOP: 0px; BORDER-RIGHT-WIDTH: 0px
}
#globalsearch LABEL .prettyplaceholder {
	DISPLAY: none
}
#sp-results {
	LEFT: 165px; MARGIN-BOTTOM: 0px; MARGIN-LEFT: 0px; MARGIN-RIGHT: -2px; =
POSITION: absolute; TOP: 61px; HEIGHT: 0px
}
#sp-results .inside {
	FONT-SIZE: 1px; RIGHT: 0px; WIDTH: 328px; LINE-HEIGHT: 1px; POSITION: =
absolute; TOP: 0px; HEIGHT: auto
}
#sp-results .resultCat {
	BORDER-RIGHT: #fb6bff 1px; BORDER-TOP: #fb6bff 1px; BACKGROUND: =
#919191; PADDING-BOTTOM: 12px; MARGIN: 0px; FONT: bold 11px "Lucida =
Grande", Geneva, Arial, Verdana, sans-serif; BORDER-LEFT: #fb6bff 1px; =
WIDTH: 302px; COLOR: #f6f6f6; BORDER-BOTTOM: #fb6bff 1px; POSITION: =
relative; HEIGHT: 8px
}
UL.sp-results {
	PADDING-RIGHT: 3px; PADDING-LEFT: 3px; BACKGROUND: =
url(/global/nav/images/shortcuts_bg_mid_grey.png) repeat-y 0px 0px; =
PADDING-BOTTOM: 0px; MARGIN: 0px; FONT: 10px/14px "Lucida Grande", =
Geneva, Arial, Verdana, sans-serif; WIDTH: 328px; COLOR: #333; =
PADDING-TOP: 0px; TEXT-ALIGN: left; _background: =
url(/global/nav/images/shortcuts_bg_mid_grey.gif) repeat-y 0 0
}
UL.sp-results LI {
	BORDER-RIGHT: #919191 1px solid; PADDING-RIGHT: 10px; PADDING-LEFT: =
10px; PADDING-BOTTOM: 5px; MARGIN: 0px 0px -3px; BORDER-LEFT: #919191 =
1px solid; WIDTH: 300px; PADDING-TOP: 5px; LIST-STYLE-TYPE: none; =
POSITION: relative; HEIGHT: 4.6em
}
UL.sp-results LI.viewall {
	BACKGROUND: url(/global/nav/images/shortcuts_bg_foot_grey.png) =
no-repeat left bottom; LEFT: 0px; WIDTH: 308px; COLOR: #000; =
BORDER-TOP-STYLE: none; BOTTOM: -27px; BORDER-RIGHT-STYLE: none; =
BORDER-LEFT-STYLE: none; POSITION: absolute; HEIGHT: 20px; TEXT-ALIGN: =
right; BORDER-BOTTOM-STYLE: none; _background: =
url(/global/nav/images/shortcuts_bg_foot_grey.gif) no-repeat left bottom
}
UL.sp-results LI.viewall A {
	PADDING-RIGHT: 23px; BACKGROUND: =
url(/global/nav/images/shortcuts_arrow.gif) no-repeat 99% 50%; =
PADDING-BOTTOM: 3px; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); =
FONT: bold 11px "Lucida Grande", Geneva, Arial, Verdana, sans-serif; =
COLOR: #fff; PADDING-TOP: 3px
}
UL.sp-results LI.hoverli {
	BACKGROUND: #b7b7b7 repeat-x; CURSOR: pointer; COLOR: #fff
}
UL.sp-results LI.hoverli H4 A {
	COLOR: #fff
}
UL.sp-results LI.hoverli P {
	COLOR: #f1f1f1
}
UL.sp-results LI SPAN.text {
	DISPLAY: block; LEFT: 68px; WIDTH: 240px; POSITION: absolute
}
UL.sp-results LI H4 {
	FONT-WEIGHT: bold; FONT-SIZE: 11px; MARGIN: 0px
}
UL.sp-results LI P {
	FONT-SIZE: 10px; MARGIN: 0px; OVERFLOW: hidden; COLOR: #555; HEIGHT: =
2.7em
}
UL.sp-results LI A {
	COLOR: #606060; TEXT-DECORATION: none
}
UL.sp-results LI IMG {
	LEFT: 10px; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); WIDTH: =
46px; POSITION: absolute; HEIGHT: 46px
}
UL.sp-results LI .replacementimg {
	LEFT: 10px; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); WIDTH: =
46px; POSITION: absolute; HEIGHT: 46px
}
UL.sp-results LI H4 A {
	COLOR: #191919
}
UL.sp-results LI.hover.viewall {
	BACKGROUND: url(/global/nav/images/shortcuts_bg_foot_grey.png) =
no-repeat left bottom
}
#sp-search-spinner {
	DISPLAY: none; Z-INDEX: 10; RIGHT: 16px; POSITION: absolute; TOP: 13px
}
#sp-search-cancel IMG {
	CURSOR: pointer
}
#sp-results .firstCat {
	BACKGROUND: url(/global/nav/images/shortcuts_bg_head_grey.png) =
no-repeat left top; LEFT: 0px; WIDTH: 308px; POSITION: absolute; TOP: =
-25px; HEIGHT: 8px; _background: =
url(/global/nav/images/shortcuts_bg_head_grey.gif) no-repeat left top
}
.viewall#sp-result-none {
	BOTTOM: -27px
}
.viewall#sp-result-none A {
	FONT-SIZE: 10px
}
#globalfooter {
	FONT-SIZE: 10px; PADDING-BOTTOM: 36px; MARGIN: 18px auto; COLOR: #999; =
TEXT-ALIGN: left! important
}
#globalfooter A {
	TEXT-DECORATION: none
}
#globalfooter A:hover {
	TEXT-DECORATION: underline
}
#globalfooter P {
	MARGIN: 0px
}
#globalfooter .gf-buy {
	FLOAT: left; MARGIN: 18px 0px 9px; WIDTH: 60%
}
#globalfooter .gf-links {
	FLOAT: right; MARGIN: 18px 0px 9px; TEXT-ALIGN: right
}
#globalfooter .gf-links A {
	PADDING-RIGHT: 10px; PADDING-LEFT: 10px; PADDING-BOTTOM: 0px; =
PADDING-TOP: 0px; WHITE-SPACE: nowrap
}
#globalfooter .gf-links A.last {
	PADDING-RIGHT: 0px; WIDTH: auto! important; _float: none
}
#globalfooter .gf-sosumi {
	CLEAR: both; BORDER-TOP: #eee 1px solid; WIDTH: 100%; PADDING-TOP: 9px
}
#globalfooter .gf-sosumi A {
	PADDING-RIGHT: 10px; PADDING-LEFT: 10px; PADDING-BOTTOM: 0px; =
PADDING-TOP: 0px
}
#globalfooter {
	WIDTH: 980px
}
#breadcrumbs {
	FONT-WEIGHT: bold; FONT-SIZE: 11px; BACKGROUND: =
url(/global/nav/images/breadcrumb_bg.png) no-repeat; BEHAVIOR: =
url(/global/scripts/lib/iepngfix.htc); OVERFLOW: hidden; COLOR: #444; =
LINE-HEIGHT: 34px; HEIGHT: 36px; text-shadow: 2px 2px 1px #fff
}
#breadcrumbs A {
	PADDING-RIGHT: 10px; PADDING-LEFT: 10px; FLOAT: left; PADDING-BOTTOM: =
0px; MARGIN-LEFT: -10px; COLOR: #444; PADDING-TOP: 0px; POSITION: =
relative; TEXT-DECORATION: none; _cursor: hand
}
#breadcrumbs A:hover {
	COLOR: #333; TEXT-DECORATION: none! important
}
#breadcrumbs A.home {
	MARGIN: 0px; OVERFLOW: hidden; WIDTH: 15px; PADDING-TOP: 36px; HEIGHT: =
0px
}
#breadcrumbs SPAN {
	BACKGROUND: url(/global/nav/images/breadcrumb_sep.png) no-repeat; =
FLOAT: left; MARGIN: 1px 10px 0px 0px; BEHAVIOR: =
url(/global/scripts/lib/iepngfix.htc); OVERFLOW: hidden; WIDTH: 9px; =
PADDING-TOP: 34px; POSITION: relative; HEIGHT: 0px
}
#directorynav {
	BORDER-TOP: #e5e5e5 1px solid; MARGIN-TOP: -4px; FONT-SIZE: 11px; =
BACKGROUND: url(/global/nav/images/directory_bg.png) repeat-y; FLOAT: =
left; WIDTH: 100%; POSITION: relative
}
#directorynav .column {
	PADDING-RIGHT: 0px; PADDING-LEFT: 18px; PADDING-BOTTOM: 0px; WIDTH: =
122px; PADDING-TOP: 9px
}
#directorynav .last.column {
	PADDING-RIGHT: 0px; FLOAT: left! important
}
#directorynav H3 {
	FONT-WEIGHT: bold; COLOR: #444
}
#directorynav H3.standalone {
	MARGIN-BOTTOM: 18px
}
#directorynav A {
	DISPLAY: block; _zoom: 1
}
#directorynav A:link {
	COLOR: #777; TEXT-DECORATION: none
}
#directorynav A:visited {
	COLOR: #777; TEXT-DECORATION: none
}
#directorynav H3.standalone A:link {
	COLOR: #444
}
#directorynav H3.standalone A:visited {
	COLOR: #444
}
#directorynav A:hover {
	COLOR: #333! important; TEXT-DECORATION: none! important
}
#directorynav .capbottom {
	CLEAR: both; BACKGROUND: url(/global/nav/images/directory_capbg.png) =
no-repeat; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); WIDTH: =
980px; POSITION: relative; TOP: 5px; HEIGHT: 5px; _top: 12px
}
.gf-900 #directorynav .column {
	WIDTH: 120px
}
.gf-980 .mac#directorynav #dn-cola {
	WIDTH: 135px
}
.gf-980 .mac#directorynav #dn-colb {
	WIDTH: 100px
}
.gf-980 .mac#directorynav #dn-cold {
	WIDTH: 110px
}
.gf-980 .mac#directorynav #dn-colg {
	WIDTH: 130px
}
.iphone#directorynav .column {
	WIDTH: 174px
}
.ipoditunes#directorynav .column {
	WIDTH: 178px
}
.ipoditunes#directorynav .productred {
	FONT-SIZE: 9px; WHITE-SPACE: nowrap
}
#directorynav UL {
	MARGIN-BOTTOM: 9px
}

------=_NextPart_000_0021_01C8F7DA.3C475C60
Content-Type: text/css;
	charset="ks_c_5601-1987"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://developer.apple.com/global/styles/base.css

@import url( /global/styles/nav.css );
HTML {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
BODY {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
DIV {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
UL {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
OL {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
LI {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
DL {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
DT {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
DD {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
H1 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
H2 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
H3 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
H4 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
H5 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
H6 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
PRE {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
FORM {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
P {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
BLOCKQUOTE {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
FIELDSET {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
INPUT {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
H1 {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
H2 {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
H3 {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
H4 {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
H5 {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
H6 {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
PRE {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
CODE {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
ADDRESS {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
CAPTION {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
CITE {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
CODE {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
EM {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
STRONG {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
TH {
	FONT-WEIGHT: normal; FONT-SIZE: 1em; FONT-STYLE: normal
}
UL {
	LIST-STYLE-TYPE: none
}
OL {
	LIST-STYLE-TYPE: none
}
FIELDSET {
	BORDER-TOP-STYLE: none; BORDER-RIGHT-STYLE: none; BORDER-LEFT-STYLE: =
none; BORDER-BOTTOM-STYLE: none
}
IMG {
	BORDER-TOP-STYLE: none; BORDER-RIGHT-STYLE: none; BORDER-LEFT-STYLE: =
none; BORDER-BOTTOM-STYLE: none
}
CAPTION {
	TEXT-ALIGN: left
}
TH {
	TEXT-ALIGN: left
}
TABLE {
	BORDER-COLLAPSE: collapse; border-spacing: 0
}
.clear {
	CLEAR: both
}
.clearer {
	CLEAR: both; PADDING-RIGHT: 0px; DISPLAY: block; PADDING-LEFT: 0px; =
FONT-SIZE: 1px; PADDING-BOTTOM: 0px; MARGIN: 0px; LINE-HEIGHT: 1px; =
PADDING-TOP: 0px; HEIGHT: 0px
}
IMG {
	BEHAVIOR: url(/global/scripts/lib/iepngfix.htc)
}
IMG.left {
	FLOAT: left; MARGIN: 2px 20px 16px 0px
}
IMG.right {
	FLOAT: right; MARGIN: 2px 0px 16px 20px
}
IMG.across {
	MARGIN: 2px 0px 16px
}
IMG.flushleft {
	MARGIN-LEFT: -20px
}
IMG.flushright {
	MARGIN-RIGHT: -20px
}
#container {
	MARGIN: 0px auto; WIDTH: 980px; POSITION: relative
}
#main {
	WIDTH: 100%; POSITION: relative
}
#content {
	PADDING-RIGHT: 20px; PADDING-LEFT: 20px; PADDING-BOTTOM: 18px; COLOR: =
#333; PADDING-TOP: 18px; POSITION: relative
}
#breadcrumb {
	CLEAR: both; FONT-SIZE: 10px; MARGIN: 18px auto; COLOR: #686868; =
TEXT-ALIGN: center
}
.column {
	FLOAT: left
}
.grid2col {
	WIDTH: 100%
}
.grid2cola {
	WIDTH: 100%
}
.grid2colb {
	WIDTH: 100%
}
.grid2colc {
	WIDTH: 100%
}
.grid2cold {
	WIDTH: 100%
}
.grid2cole {
	WIDTH: 100%
}
.grid2colf {
	WIDTH: 100%
}
.grid3col {
	WIDTH: 100%
}
.grid3cola {
	WIDTH: 100%
}
.grid4col {
	WIDTH: 100%
}
.grid5col {
	WIDTH: 100%
}
.grid6col {
	WIDTH: 100%
}
.grid2col .column {
	WIDTH: 49%
}
.grid2col .grid2col .column {
	WIDTH: 47.8%
}
.grid3col .grid2col .column {
	WIDTH: 46%
}
.grid4col .grid2col .column {
	WIDTH: 45%
}
.grid2cola .first.column {
	WIDTH: 66%
}
.grid2cola .last.column {
	WIDTH: 32%
}
.grid2colb .first.column {
	WIDTH: 74.9%
}
.grid2colb .last.column {
	WIDTH: 23%
}
.grid2colc .first.column {
	WIDTH: 32%
}
.grid2colc .last.column {
	WIDTH: 66%
}
.grid2cold .first.column {
	WIDTH: 23%
}
.grid2cold .last.column {
	WIDTH: 74.9%
}
.grid2cole .first.column {
	WIDTH: 79%
}
.grid2cole .last.column {
	WIDTH: 19%
}
.grid2colf .first.column {
	WIDTH: 19%
}
.grid2colf .last.column {
	WIDTH: 79%
}
.grid3col .column {
	MARGIN-LEFT: 2%; WIDTH: 32%
}
.grid2col .grid3col .column {
	WIDTH: 31%
}
.grid3cola .column {
	MARGIN-LEFT: 2%; WIDTH: 58%
}
.grid3cola .first.column {
	WIDTH: 19%
}
.grid3cola .last.column {
	WIDTH: 19%
}
.grid4col .column {
	MARGIN-LEFT: 3%; WIDTH: 23%
}
.grid5col .column {
	MARGIN-LEFT: 2%; WIDTH: 18.4%
}
.grid6col .column {
	MARGIN-LEFT: 2%; WIDTH: 15%
}
.first.column {
	MARGIN-LEFT: 0px! important
}
.last.column {
	MARGIN-LEFT: 0px! important
}
.last.column {
	FLOAT: right! important
}
P.last {
	_width: auto; _float: none
}
UL.last {
	_width: auto; _float: none
}
OL.last {
	_width: auto; _float: none
}
LI.last {
	_width: auto; _float: none
}
#container:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
#content:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid2col:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid2cola:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid2colb:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid2colc:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid2cold:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid2cole:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid2colf:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid3col:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid3cola:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid4col:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid5col:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.grid6col:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
#container {
	_zoom: 1
}
#content {
	_zoom: 1
}
.grid2col {
	_zoom: 1
}
.grid2cola {
	_zoom: 1
}
.grid2colb {
	_zoom: 1
}
.grid2colc {
	_zoom: 1
}
.grid2cold {
	_zoom: 1
}
.grid2cole {
	_zoom: 1
}
.grid2colf {
	_zoom: 1
}
.grid3col {
	_zoom: 1
}
.grid3cola {
	_zoom: 1
}
.grid4col {
	_zoom: 1
}
.grid5col {
	_zoom: 1
}
.grid6col {
	_zoom: 1
}
BODY {
	FONT: 12px/18px "Lucida Grande", Geneva, Arial, Verdana, sans-serif; =
COLOR: #333; BACKGROUND-COLOR: #fff
}
A {
	COLOR: #2971a7
}
STRONG {
	FONT-WEIGHT: bold
}
B {
	FONT-WEIGHT: bold
}
EM {
	FONT-STYLE: italic
}
I {
	FONT-STYLE: italic
}
SUP {
	PADDING-LEFT: 1px; FONT-WEIGHT: normal! important; FONT-SIZE: 10px! =
important; VERTICAL-ALIGN: baseline; COLOR: #76797c; BOTTOM: 0.33em; =
POSITION: relative; _position: static
}
.sosumi {
	FONT-SIZE: 10px! important; COLOR: #76797c
}
#main P {
	MARGIN-BOTTOM: 18px
}
#main H1 {
	FONT-WEIGHT: bold; FONT-SIZE: 24px; MARGIN-BOTTOM: 18px; LINE-HEIGHT: =
36px
}
#main H2 {
	FONT-WEIGHT: bold; FONT-SIZE: 16px; MARGIN-BOTTOM: 18px; LINE-HEIGHT: =
18px
}
#main H3 {
	FONT-WEIGHT: bold; FONT-SIZE: 1em; LINE-HEIGHT: 18px
}
#main H4 {
	FONT-WEIGHT: bold; FONT-SIZE: 10px; LINE-HEIGHT: 18px
}
#main P.intro {
	FONT-WEIGHT: bold
}
#main .more {
	TEXT-ALIGN: right
}
#main UL {
	LIST-STYLE-POSITION: outside; MARGIN-BOTTOM: 18px; LIST-STYLE-TYPE: =
none
}
#main OL {
	MARGIN-BOTTOM: 18px; MARGIN-LEFT: 2.2em; LIST-STYLE-TYPE: decimal
}
#main UL.square {
	MARGIN-LEFT: 2em
}
#main UL.circle {
	MARGIN-LEFT: 2em
}
#main UL.square {
	LIST-STYLE-POSITION: outside; LIST-STYLE-TYPE: square
}
#main UL.circle {
	LIST-STYLE-POSITION: outside; LIST-STYLE-TYPE: circle
}
#main UL UL.circle {
	MARGIN-TOP: 4px; MARGIN-BOTTOM: 5px
}
#main UL UL.square {
	MARGIN-TOP: 4px; MARGIN-BOTTOM: 5px
}
#main OL.sosumi {
	PADDING-LEFT: 2em; MARGIN-LEFT: 0px
}
#main A.pdf {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globaliconpdf12x12.gif) no-repeat 0px 0.4em
}
#main A.html {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globaliconhtml12x12.gif) no-repeat 0px 0.4em
}
#main A.qt {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globaliconqt12x12.gif) no-repeat 0px 0.4em
}
#main A.ical {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globaliconical12x12.gif) no-repeat 0px 0.4em
}
#main A.dl {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globalicondl11x10.gif) no-repeat 0px 0.4em
}
#main A.dmg {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globalicondmg12x12.gif) no-repeat 0px 0.4em
}
#main A.zip {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globaliconzip12x12.gif) no-repeat 0px 0.4em
}
#main A.keynote {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globaliconkeynote12x12.gif) no-repeat 0px =
0.4em
}
#main A.audio {
	DISPLAY: block; PADDING-LEFT: 20px; BACKGROUND: =
url(/global/elements/icons/globaliconaudio12x12.gif) no-repeat 0px 0.4em
}
#main .sidebar {
	FONT-SIZE: 10px; COLOR: #686868; LINE-HEIGHT: 18px
}
#main .callout {
	FONT-SIZE: 11px; MARGIN-BOTTOM: 18px; LINE-HEIGHT: 18px
}
#main .last {
	MARGIN-BOTTOM: 0px
}
INPUT.prettysearch {
	BORDER-TOP-WIDTH: 0px; PADDING-RIGHT: 0px; PADDING-LEFT: 0px; =
BORDER-LEFT-WIDTH: 0px; BACKGROUND: =
url(/global/elements/prettysearch/searchfield_repeat.png) repeat-x =
center top; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; =
FONT: 11px "Lucida Grande", Geneva, Arial, sans-serif; WIDTH: 200px; =
PADDING-TOP: 3px; HEIGHT: 16px; BORDER-RIGHT-WIDTH: 0px
}
.search-wrapper {
	WIDTH: 200px; POSITION: relative
}
.search-wrapper INPUT.prettysearch {
	MARGIN-TOP: -1px; MARGIN-LEFT: 10px; WIDTH: 171px; MARGIN-RIGHT: -2px
}
.search-wrapper .left {
	BEHAVIOR: url(/global/scripts/lib/iepngfix.htc)
}
.search-wrapper .right {
	BEHAVIOR: url(/global/scripts/lib/iepngfix.htc)
}
.search-wrapper .left {
	DISPLAY: block; BACKGROUND: =
url(/global/elements/prettysearch/searchfield_leftcap.png) no-repeat =
left top; LEFT: 0px; WIDTH: 20px; POSITION: absolute; TOP: 0px; HEIGHT: =
19px
}
.search-wrapper .right {
	DISPLAY: block; RIGHT: 0px; BACKGROUND: =
url(/global/elements/prettysearch/searchfield_rightcap.png) no-repeat =
right top; WIDTH: 10px; POSITION: absolute; TOP: 0px; HEIGHT: 19px
}
.blurred.empty.search-wrapper INPUT {
	COLOR: #7e7e7e
}
.search-wrapper .reset {
	DISPLAY: block; Z-INDEX: 1; RIGHT: 4px; BACKGROUND: =
url(/global/elements/prettysearch/close.gif); OVERFLOW: hidden; WIDTH: =
11px; CURSOR: pointer; POSITION: absolute; TOP: 4px; HEIGHT: 11px; =
_cursor: hand
}
.empty.search-wrapper .reset {
	DISPLAY: none
}
#globalfooter P {
	MARGIN-BOTTOM: 1em
}
#globalfooter FORM {
	MARGIN: 18px 10px
}
#globalfooter .search-wrapper {
	MARGIN: 0px auto
}
#globalfooter .search-wrapper INPUT.prettysearch {
	MARGIN-LEFT: 10px
}

@media Print   =20
{
BODY {
	COLOR: #000! important
}
#main {
	COLOR: #000! important
}
#content {
	COLOR: #000! important
}
A {
	COLOR: #000! important; TEXT-DECORATION: none! important
}
A:link {
	COLOR: #000! important; TEXT-DECORATION: none! important
}
A:visited {
	COLOR: #000! important; TEXT-DECORATION: none! important
}
#tabs {
	DISPLAY: none! important
}
#globalheader {
	DISPLAY: none! important
}
#globalfooter {
	DISPLAY: none! important
}
#directorynav {
	DISPLAY: none! important
}
.noprint {
	DISPLAY: none! important
}
.hide {
	DISPLAY: none! important
}
#main A.pdf {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}
#main A.html {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}
#main A.qt {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}
#main A.ical {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}
#main A.dl {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}
#main A.dmg {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}
#main A.zip {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}
#main A.keynote {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}
#main A.audio {
	PADDING-LEFT: 0px! important; BACKGROUND-IMAGE: none! important
}

}

------=_NextPart_000_0021_01C8F7DA.3C475C60
Content-Type: text/css;
	charset="ks_c_5601-1987"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://devimages.apple.com/global/styles/adc.css

@import url( /global/styles/nav.css );
@import url( /global/styles/base.css );
* {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: =
0px; PADDING-TOP: 0px
}
SCRIPT {
	FONT-SIZE: 0px; HEIGHT: 0px
}
BODY {
	BACKGROUND: url(/global/elements/layout/body_bg.gif) #fff repeat-x 0px =
0px; FONT: 11px/1.4em "Lucida Grande", Geneva, Arial, Verdana, =
sans-serif; COLOR: #555
}
.script {
	DISPLAY: none
}
.noscript {
	DISPLAY: block
}
#container {
	BACKGROUND: url(/global/elements/layout/main_bgbottom.gif) no-repeat =
50% 100%; _zoom: 1
}
#main {
	PADDING-RIGHT: 50px; PADDING-LEFT: 50px; MIN-HEIGHT: 143px; BACKGROUND: =
url(/global/elements/layout/main_bgtop.gif) no-repeat 50% 0px; =
PADDING-BOTTOM: 2em; WIDTH: auto; PADDING-TOP: 3.5em; _zoom: 1; _height: =
143px
}
#stroke {
	PADDING-RIGHT: 20px; PADDING-LEFT: 25px; MIN-HEIGHT: 397px; BACKGROUND: =
url(/global/elements/layout/main_bgtop_stroke.gif) no-repeat 50% 0px; =
PADDING-BOTTOM: 2em; MARGIN: -1.2em -50px 0px; PADDING-TOP: 2.2em; =
POSITION: relative; _zoom: 1; _height: 397px
}
#content {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; FLOAT: left; PADDING-BOTTOM: =
0px; WIDTH: 580px; COLOR: #555; PADDING-TOP: 0px
}
.cap {
	CLEAR: both; FONT-SIZE: 0px
}
.selfclear {
	_zoom: 1
}
#container:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
#main:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
#stroke:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
#main #header:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
.selfclear:unknown {
	CLEAR: both; DISPLAY: block; VISIBILITY: hidden; HEIGHT: 0px; content: =
"."
}
#main H1 {
	FONT-SIZE: 28px; MARGIN-BOTTOM: 1.3em; COLOR: #333; LINE-HEIGHT: 1.2em
}
#main H1 IMG {
	MARGIN: 0.2em 0px 0px
}
#main H2 {
	FONT-WEIGHT: normal; FONT-SIZE: 18px; MARGIN-BOTTOM: 1.5em; COLOR: =
#333; LINE-HEIGHT: 1.2em
}
#main H2 IMG {
	MARGIN-TOP: -1.9em; MARGIN-BOTTOM: 0.6em
}
#main H3 {
	FONT-SIZE: 13px; MARGIN-BOTTOM: 0.3em; COLOR: #333; LINE-HEIGHT: 1.2em
}
#main H4 {
	FONT-SIZE: 1em; COLOR: #333; LINE-HEIGHT: 1.2em
}
#main STRONG {
	COLOR: #333
}
#main .sosumi STRONG {
	COLOR: #555
}
#main CITE {
	FONT-STYLE: italic
}
#main HR {
	BORDER-TOP: #ccc 1px solid; BACKGROUND: none transparent scroll repeat =
0% 0%; MARGIN: 0px -1px 1.6em; BORDER-RIGHT-STYLE: none; =
BORDER-LEFT-STYLE: none; HEIGHT: 0px; BORDER-BOTTOM-STYLE: none
}
#main P.intro {
	FONT-WEIGHT: normal; FONT-SIZE: 14px; MARGIN-BOTTOM: 2em; LINE-HEIGHT: =
1.3em
}
A {
	COLOR: #366088; TEXT-DECORATION: none
}
A:hover {
	TEXT-DECORATION: underline
}
#main A.arrow {
	PADDING-RIGHT: 7px; BACKGROUND: url(/global/elements/arrows/366088.gif) =
no-repeat 100% 0.4em; WHITE-SPACE: nowrap; _zoom: 1
}
#main A.circle.arrow {
	PADDING-RIGHT: 16px; BACKGROUND: =
url(/global/elements/arrows/circleblue.gif) no-repeat 100% 0.2em
}
#main A.bin {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/bin_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.code {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/code_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.doc {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/doc_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.docs {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/docs_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.technote {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/technote_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.ref {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/ref_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.lib {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/lib_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.podcast {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/podcast_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.video {
	PADDING-LEFT: 2em; BACKGROUND: =
url(/global/elements/icons/video_15x15.gif) no-repeat 0px 0px; =
WHITE-SPACE: nowrap
}
#main A.rss {
	DISPLAY: block; BACKGROUND: url(/global/elements/icons/rss_20x11.gif) =
no-repeat; WIDTH: 20px; TEXT-INDENT: -9999px; HEIGHT: 11px; outline: =
none; -moz-outline: none
}
#main P.button {
	MARGIN-BOTTOM: 2em; WHITE-SPACE: nowrap
}
#main P.button A {
	FONT-WEIGHT: bold; COLOR: #666; TEXT-DECORATION: none
}
#main P.button A SPAN {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0.9em; =
PADDING-TOP: 0.6em
}
#main P.button A B {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0.9em; =
PADDING-TOP: 0.6em
}
#main P.button A SPAN {
	PADDING-RIGHT: 0.6em; PADDING-LEFT: 1.5em; BACKGROUND: =
url(/global/elements/buttons/cta_strokeonwhite_bgleft.gif) no-repeat 0px =
50%
}
#main P.button A B {
	PADDING-LEFT: 15px; BACKGROUND: =
url(/global/elements/buttons/cta_strokeonwhite_bgright.gif) no-repeat =
0px 50%
}
#main P.button A:hover SPAN {
	COLOR: #366088
}
#main P.button A.dark {
	COLOR: #fff; text-shadow: #333 0 1px 2px
}
#main P.button A.dark SPAN {
	PADDING-BOTTOM: 1em; PADDING-TOP: 0.5em
}
#main P.button A.dark B {
	PADDING-BOTTOM: 1em; PADDING-TOP: 0.5em
}
#main P.button A.dark SPAN {
	BACKGROUND-IMAGE: =
url(/global/elements/buttons/cta_darkonwhite_bgleft.gif)
}
#main P.button A.dark B {
	BACKGROUND-IMAGE: =
url(/global/elements/buttons/cta_darkonwhite_bgright.gif)
}
#main P.button A.dark:hover SPAN {
	COLOR: #eee
}
#main P.button A.blue {
	COLOR: #fff; text-shadow: #333 0 1px 2px
}
#main P.button A.blue SPAN {
	PADDING-BOTTOM: 1em; PADDING-TOP: 0.5em
}
#main P.button A.blue B {
	PADDING-BOTTOM: 1em; PADDING-TOP: 0.5em
}
#main P.button A.blue SPAN {
	BACKGROUND-IMAGE: =
url(/global/elements/buttons/cta_blueonwhite_bgleft.gif)
}
#main P.button A.blue B {
	BACKGROUND-IMAGE: =
url(/global/elements/buttons/cta_blueonwhite_bgright.gif)
}
#main P.button A.blue:hover SPAN {
	COLOR: #eee
}
#main #sidebar .sidebox P.button A {
	COLOR: #fff; text-shadow: #333 0 2px 2px
}
#main #sidebar .sidebox P.button A SPAN {
	PADDING-BOTTOM: 1em; PADDING-TOP: 0.5em
}
#main #sidebar .sidebox P.button A B {
	PADDING-BOTTOM: 1em; PADDING-TOP: 0.5em
}
#main #sidebar .sidebox P.button A SPAN {
	BACKGROUND-IMAGE: =
url(/global/elements/buttons/cta_darkongray_bgleft.gif)
}
#main #sidebar .sidebox P.button A B {
	BACKGROUND-IMAGE: =
url(/global/elements/buttons/cta_darkongray_bgright.gif)
}
#main #sidebar .sidebox P.button A:hover SPAN {
	COLOR: #eee
}
#main P.button A B B {
	PADDING-RIGHT: 0px! important; PADDING-LEFT: 0px! important; =
VISIBILITY: hidden; PADDING-BOTTOM: 0px! important; PADDING-TOP: 0px! =
important
}
#main P.beforelist {
	MARGIN-BOTTOM: 0.6em
}
#main UL.square {
	MARGIN-BOTTOM: 0px; PADDING-BOTTOM: 1em
}
#main UL.circle {
	MARGIN-BOTTOM: 0px; PADDING-BOTTOM: 1em
}
#main UL.icons {
	MARGIN-BOTTOM: 0px; PADDING-BOTTOM: 1em
}
#main UL.none {
	MARGIN-BOTTOM: 0px; PADDING-BOTTOM: 1em
}
#main OL {
	MARGIN-BOTTOM: 0px; PADDING-BOTTOM: 1em
}
#main UL.square LI {
	PADDING-BOTTOM: 0.6em
}
#main UL.icons LI {
	PADDING-BOTTOM: 0.6em
}
#main UL.none LI {
	PADDING-BOTTOM: 0.6em
}
#main UL.circle LI {
	PADDING-BOTTOM: 0.6em
}
#main OL LI {
	PADDING-BOTTOM: 0.6em
}
#main UL.icons LI {
	PADDING-LEFT: 2em
}
#main UL.icons LI.bin {
	BACKGROUND: url(/global/elements/icons/bin_15x15.gif) no-repeat 0px =
0.1em
}
#main UL.bin.icons LI {
	BACKGROUND: url(/global/elements/icons/bin_15x15.gif) no-repeat 0px =
0.1em
}
#main UL.icons LI.code {
	BACKGROUND: url(/global/elements/icons/code_15x15.gif) no-repeat 0px =
0px
}
#main UL.code.icons LI {
	BACKGROUND: url(/global/elements/icons/code_15x15.gif) no-repeat 0px =
0px
}
#main UL.icons LI.doc {
	BACKGROUND: url(/global/elements/icons/doc_15x15.gif) no-repeat 0px 0px
}
#main UL.doc.icons LI {
	BACKGROUND: url(/global/elements/icons/doc_15x15.gif) no-repeat 0px 0px
}
#main UL.icons LI.docs {
	BACKGROUND: url(/global/elements/icons/docs_15x15.gif) no-repeat 0px =
0.2em
}
#main UL.docs.icons LI {
	BACKGROUND: url(/global/elements/icons/docs_15x15.gif) no-repeat 0px =
0.2em
}
#main UL.icons LI.technote {
	BACKGROUND: url(/global/elements/icons/technote_15x15.gif) no-repeat =
0px 0.2em
}
#main UL.technote.icons LI {
	BACKGROUND: url(/global/elements/icons/technote_15x15.gif) no-repeat =
0px 0.2em
}
#main UL.icons LI.ref {
	BACKGROUND: url(/global/elements/icons/ref_15x15.gif) no-repeat 0px =
0.2em
}
#main UL.ref.icons LI {
	BACKGROUND: url(/global/elements/icons/ref_15x15.gif) no-repeat 0px =
0.2em
}
#main UL.icons LI.lib {
	BACKGROUND: url(/global/elements/icons/lib_15x15.gif) no-repeat 0px =
0.1em
}
#main UL.lib.icons LI {
	BACKGROUND: url(/global/elements/icons/lib_15x15.gif) no-repeat 0px =
0.1em
}
#main UL.icons LI.podcast {
	BACKGROUND: url(/global/elements/icons/podcast_15x15.gif) no-repeat 0px =
0px
}
#main UL.podcast.icons LI {
	BACKGROUND: url(/global/elements/icons/podcast_15x15.gif) no-repeat 0px =
0px
}
#main UL.icons LI.video {
	BACKGROUND: url(/global/elements/icons/video_15x15.gif) no-repeat 0px =
0.1em
}
#main UL.video.icons LI {
	BACKGROUND: url(/global/elements/icons/video_15x15.gif) no-repeat 0px =
0.1em
}
#main PRE {
	BORDER-RIGHT: #e5e5e5 1px solid; PADDING-RIGHT: 16px; BORDER-TOP: =
#e5e5e5 1px solid; PADDING-LEFT: 16px; MARGIN-BOTTOM: 1.6em; =
PADDING-BOTTOM: 1em; BORDER-LEFT: #e5e5e5 1px solid; PADDING-TOP: 1em; =
BORDER-BOTTOM: #e5e5e5 1px solid; BACKGROUND-COLOR: #f7f7f7; WORD-WRAP: =
break-word
}
#main .note {
	BORDER-RIGHT: #e5e5e5 1px solid; PADDING-RIGHT: 16px; BORDER-TOP: =
#e5e5e5 1px solid; PADDING-LEFT: 16px; MARGIN-BOTTOM: 1.6em; =
PADDING-BOTTOM: 1px; BORDER-LEFT: #e5e5e5 1px solid; PADDING-TOP: 1em; =
BORDER-BOTTOM: #e5e5e5 1px solid; BACKGROUND-COLOR: #f7f7f7
}
#main .note P {
	MARGIN-BOTTOM: 1em
}
#main .note UL.square {
	MARGIN-BOTTOM: 0.6em
}
#main .note UL.circle {
	MARGIN-BOTTOM: 0.6em
}
#main .note UL.icons {
	MARGIN-BOTTOM: 0.6em
}
#main .note UL.none {
	MARGIN-BOTTOM: 0.6em
}
#main .note OL {
	MARGIN-BOTTOM: 0.6em
}
#main TABLE.stroke {
	MARGIN: 0px 0px 1.6em; WIDTH: 100%
}
#main TABLE.stroke TH {
	FONT-WEIGHT: bold; BACKGROUND: #f7f7f7
}
#main TABLE.stroke TH {
	BORDER-RIGHT: #e5e5e5 1px solid; PADDING-RIGHT: 6px; BORDER-TOP: =
#e5e5e5 1px solid; PADDING-LEFT: 6px; PADDING-BOTTOM: 4px; =
VERTICAL-ALIGN: top; BORDER-LEFT: #e5e5e5 1px solid; PADDING-TOP: 4px; =
BORDER-BOTTOM: #e5e5e5 1px solid
}
#main TABLE.stroke TD {
	BORDER-RIGHT: #e5e5e5 1px solid; PADDING-RIGHT: 6px; BORDER-TOP: =
#e5e5e5 1px solid; PADDING-LEFT: 6px; PADDING-BOTTOM: 4px; =
VERTICAL-ALIGN: top; BORDER-LEFT: #e5e5e5 1px solid; PADDING-TOP: 4px; =
BORDER-BOTTOM: #e5e5e5 1px solid
}
#main TABLE.stroke TH:first-child {
	BORDER-LEFT-STYLE: none
}
#main TABLE.stroke TD:first-child {
	BORDER-LEFT-STYLE: none
}
#main TABLE.stroke TH:unknown {
	BORDER-RIGHT-STYLE: none
}
#main TABLE.stroke TD:unknown {
	BORDER-RIGHT-STYLE: none
}
#main TABLE.stroke TR:first-child TH {
	BORDER-TOP-STYLE: none
}
#main TABLE.stroke TR:first-child TD {
	BORDER-TOP-STYLE: none
}
#main TABLE.stroke TR:unknown TH {
	BORDER-BOTTOM-STYLE: none
}
#main TABLE.stroke TR:unknown TD {
	BORDER-BOTTOM-STYLE: none
}
#main TABLE.stripe {
	MARGIN: 0px 0px 1.6em; WIDTH: 100%
}
#main TABLE.stripe TH {
	FONT-WEIGHT: bold; BORDER-LEFT-COLOR: #ccc; BACKGROUND: #d7dce3; =
BORDER-BOTTOM-COLOR: #ccc; COLOR: #333; BORDER-TOP-COLOR: #ccc; =
BORDER-RIGHT-COLOR: #ccc
}
#main TABLE.stripe TH {
	PADDING-RIGHT: 6px; PADDING-LEFT: 6px; PADDING-BOTTOM: 4px; =
VERTICAL-ALIGN: top; PADDING-TOP: 4px
}
#main TABLE.stripe TD {
	PADDING-RIGHT: 6px; PADDING-LEFT: 6px; PADDING-BOTTOM: 4px; =
VERTICAL-ALIGN: top; PADDING-TOP: 4px
}
#main TABLE.stripe .odd TH {
	BACKGROUND: #f7f7f7
}
#main TABLE.stripe .odd TD {
	BACKGROUND: #f7f7f7
}
#main P.caption {
	MARGIN-BOTTOM: 0.3em
}
#main P.fullbleed.caption {
	MARGIN-BOTTOM: 0.6em
}
#main CAPTION {
	PADDING-BOTTOM: 0.6em
}
#main DIV.left {
	FLOAT: left; MARGIN: 2px 20px 16px 0px
}
#main DIV.right {
	FLOAT: right; MARGIN: 2px 0px 16px 20px
}
#main DIV.center {
	MARGIN-LEFT: auto; MARGIN-RIGHT: auto; TEXT-ALIGN: center
}
#main IMG.center {
	DISPLAY: block; MARGIN-LEFT: auto; MARGIN-RIGHT: auto
}
INPUT {
	BEHAVIOR: url(/global/scripts/lib/iepngfix.htc)
}
#globalheader {
	Z-INDEX: 999; MARGIN: 20px auto 0px; WIDTH: 980px; POSITION: relative; =
HEIGHT: 58px; _zoom: 1
}
#globalheader H2 {
	DISPLAY: inline
}
#globalheader H2 A {
	BACKGROUND: url(/global/elements/header/title.gif) no-repeat 0px 0px; =
LEFT: 22px; WIDTH: 213px; TEXT-INDENT: -9999px; POSITION: absolute; TOP: =
1px; HEIGHT: 23px; outline: none; -moz-outline: none
}
#globalheader UL#gh-links {
	FONT-SIZE: 9px; RIGHT: 181px; WIDTH: 23em; LINE-HEIGHT: 1.3em; =
POSITION: absolute; TOP: 6px; _width: auto
}
#globalheader UL#gh-links LI {
	BORDER-RIGHT: #b1b1b1 1px solid; PADDING-RIGHT: 1.2em; DISPLAY: inline; =
PADDING-LEFT: 0px; FLOAT: left; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px =
1.2em; PADDING-TOP: 0px
}
#globalheader UL#gh-links LI A {
	MARGIN-TOP: -2px; DISPLAY: block; COLOR: #555
}
#globalheader UL#gh-links LI A:hover {
	COLOR: #366088
}
#globalheader UL#gh-links LI#gh-links-apple A {
	DISPLAY: block; BACKGROUND: url(/global/elements/header/apple.gif) =
no-repeat 0px 0px; WIDTH: 8px; TEXT-INDENT: -9999px; HEIGHT: 10px
}
#globalheader UL#gh-links LI#gh-links-contact {
	BORDER-RIGHT-STYLE: none
}
#globalheader #gh-search {
	RIGHT: 15px; POSITION: absolute
}
#globalheader #gh-search INPUT.prettysearch {
	MARGIN-LEFT: 20px; WIDTH: 165px
}
#globalheader #gh-search .search-wrapper {
	WIDTH: 165px
}
#globalheader #gh-search .search-wrapper INPUT.prettysearch {
	WIDTH: 136px
}
#globalheader UL#gh-nav {
	RIGHT: 10px; BOTTOM: 4px; POSITION: absolute
}
#globalheader UL#gh-nav LI {
	DISPLAY: inline; FLOAT: left; MARGIN: 0px 0px 0px 1.2em
}
#globalheader UL#gh-nav LI A {
	PADDING-RIGHT: 0px; DISPLAY: block; PADDING-LEFT: 5px; PADDING-BOTTOM: =
0.3em; COLOR: #555; PADDING-TOP: 0.3em
}
#globalheader UL#gh-nav LI A:hover {
	COLOR: #366088
}
#globalheader UL#gh-nav LI.menu {
	POSITION: relative
}
#globalheader UL#gh-nav LI.menu A {
	PADDING-LEFT: 7px; MARGIN-RIGHT: 0px; TEXT-DECORATION: none; outline: =
none; -moz-outline: none
}
#globalheader UL#gh-nav LI.menu A SPAN {
	PADDING-RIGHT: 0.4em
}
#globalheader UL#gh-nav LI.menu A B {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; BACKGROUND: =
url(/global/elements/header/nav_menu_carat.gif) no-repeat 0px 60%; =
PADDING-BOTTOM: 0.4em; PADDING-TOP: 0.4em; _padding: .3em 0
}
#globalheader UL#gh-nav LI.menu A B B {
	PADDING-RIGHT: 0px; DISPLAY: inline-block; PADDING-LEFT: 0px; =
VISIBILITY: hidden; PADDING-BOTTOM: 0px; WIDTH: 1.6em; PADDING-TOP: 0px
}
#globalheader UL#gh-nav LI.menu UL {
	PADDING-RIGHT: 0px; DISPLAY: none; PADDING-LEFT: 0px; Z-INDEX: 99; =
PADDING-BOTTOM: 1px; MARGIN: 0px -4px 0px -2px; WIDTH: 137px; =
PADDING-TOP: 0px; POSITION: absolute
}
#globalheader UL#gh-nav LI.menu UL {
	PADDING-RIGHT: 0px; MARGIN-TOP: -3px; PADDING-LEFT: 0px; BACKGROUND: =
url(/global/elements/header/nav_menu_bgtop.png) no-repeat; =
PADDING-BOTTOM: 5px; BEHAVIOR: url(/global/scripts/lib/iepngfix.htc); =
PADDING-TOP: 4px
}
#globalheader UL#gh-nav LI.menu UL LI {
	PADDING-RIGHT: 6px; DISPLAY: block; PADDING-LEFT: 4px; BACKGROUND: =
url(/global/elements/header/nav_menu_bg.png) repeat-y; FLOAT: none; =
PADDING-BOTTOM: 1px; MARGIN: 0px 0px -3px; BEHAVIOR: =
url(/global/scripts/lib/iepngfix_scale.htc); WIDTH: 127px; PADDING-TOP: =
0px
}
#globalheader UL#gh-nav LI.menu UL LI A {
	PADDING-RIGHT: 5px; PADDING-LEFT: 5px; PADDING-BOTTOM: 1px; MARGIN: =
0px; COLOR: #366088; PADDING-TOP: 1px; TEXT-DECORATION: none
}
#globalheader UL#gh-nav LI.menu UL LI A:hover {
	BACKGROUND: #778ba6; COLOR: #fff
}
#globalheader UL#gh-nav LI.menu UL LI.menubottom {
	FONT-SIZE: 1px; BACKGROUND: =
url(/global/elements/header/nav_menu_bgbottom.png) no-repeat; HEIGHT: =
5px
}
#globalheader UL#gh-nav LI.active.menu {
	BACKGROUND: url(/global/elements/header/nav_menu_activebg.gif) =
no-repeat 0px 0px
}
#globalheader UL#gh-nav LI.active.menu A SPAN {
=09
}
#globalheader UL#gh-nav LI.active.menu A B {
	BACKGROUND: url(/global/elements/header/nav_menu_caratactive.gif) =
#c0cad4 no-repeat 100% 0px
}
#globalheader UL#gh-nav LI.active.menu UL {
	DISPLAY: block
}
#globalheader UL#gh-nav LI.menu#gh-nav-support .menutop {
	RIGHT: -3px
}
#globalheader UL#gh-nav LI.menu#gh-nav-support UL {
	RIGHT: -3px
}
#main #header {
	PADDING-RIGHT: 0px; PADDING-LEFT: 290px; MIN-HEIGHT: 15.6em; =
PADDING-BOTTOM: 0px; PADDING-TOP: 1em; POSITION: relative; _zoom: 1; =
_height: 15.6em
}
#main #header IMG.hero {
	LEFT: -6px; POSITION: absolute
}
#main #header H1 {
	FONT-WEIGHT: normal; MARGIN-BOTTOM: 0.3em
}
#main #header P.intro {
=09
}
#main .border#header {
	MIN-HEIGHT: 0px; MARGIN-BOTTOM: 3em; BORDER-BOTTOM: #ccc 1px solid; =
_height: 0
}
#main .border#header IMG.hero {
	LEFT: 0px
}
#main #sidebar {
	FONT-SIZE: 11px; FLOAT: right; MARGIN: 0.6em -35px 0px 0px; WIDTH: =
300px; COLOR: #666; LINE-HEIGHT: 14px
}
#main #stroke #sidebar {
	MARGIN: -0.8em 0px 0px
}
#main #sidebar .sidebox {
	BACKGROUND: url(/global/elements/layout/sidebox_bgbottom.gif) no-repeat =
50% 100%; PADDING-BOTTOM: 5px; MARGIN: 0px 0px 1.6em
}
#main #sidebar .sidebox H3 {
	PADDING-RIGHT: 15px; PADDING-LEFT: 15px; BACKGROUND: =
url(/global/elements/layout/sidebox_bgtop.gif) no-repeat 50% 0px; =
PADDING-BOTTOM: 0.5em; MARGIN: 0px; COLOR: #333; PADDING-TOP: 0.45em
}
#main #sidebar .sidebox H3 A.rss {
	MARGIN-TOP: 0.3em; FLOAT: right
}
#main #sidebar .sidebox .sb {
	PADDING-RIGHT: 15px; PADDING-LEFT: 15px; BACKGROUND: =
url(/global/elements/layout/sidebox_bg.gif) repeat-y 50% 50%; =
PADDING-BOTTOM: 1px; PADDING-TOP: 1em
}
#main #sidebar .sidebox .sb H3 {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; BACKGROUND: none transparent =
scroll repeat 0% 0%; PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0.3em; =
PADDING-TOP: 0px; POSITION: static
}
#main #sidebar .sidebox .sb .plain {
	PADDING-RIGHT: 15px; PADDING-LEFT: 15px; BACKGROUND: =
url(/global/elements/layout/sidebox_bgtop_plain.gif) no-repeat 50% 0px; =
PADDING-BOTTOM: 1px; MARGIN: -1em -15px -1px; PADDING-TOP: 1.3em
}
#main #sidebar UL.nav {
	MARGIN-BOTTOM: 0px
}
#main #sidebar UL.nav LI {
	FONT-WEIGHT: bold; PADDING-BOTTOM: 0.5em
}
#main DIV.promo {
=09
}
#main DIV.promo#p-wwdc H4 {
	MARGIN-BOTTOM: 0.4em
}
#main DIV.small.promo#p-wwdc {
	PADDING-RIGHT: 15px; PADDING-LEFT: 15px; PADDING-BOTTOM: 0px; =
PADDING-TOP: 0px
}
#main DIV.medium.promo#p-wwdc IMG.right {
	MARGIN-TOP: -8px; MARGIN-LEFT: 0px
}
#main DIV.large.promo#p-wwdc IMG.right {
	MARGIN-TOP: -25px; MARGIN-LEFT: 0px
}
#globalfooter {
	CLEAR: both
}
#globalfooter A {
	COLOR: #666
}
#globalfooter UL.gf-local {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 15px; MARGIN: =
0px; PADDING-TOP: 0px; TEXT-ALIGN: center
}
#globalfooter UL.gf-local LI {
	DISPLAY: inline
}
#globalfooter UL.gf-local LI STRONG {
	FONT-WEIGHT: normal; MARGIN-RIGHT: 4px
}
#globalfooter UL.gf-local LI A {
	MARGIN: 0px 4px
}
#globalfooter P.gf-buy {
	MARGIN-BOTTOM: 0.6em
}
#globalfooter P.gf-links {
	MARGIN-BOTTOM: 0.6em
}
#globalfooter P.gf-sosumi {
	PADDING-TOP: 0.6em
}
#globalfooter P.gf-links A {
	PADDING-RIGHT: 0.6em; PADDING-LEFT: 0.6em; PADDING-BOTTOM: 0px; =
PADDING-TOP: 0px
}
#globalfooter P.gf-sosumi A {
	PADDING-RIGHT: 0.6em; PADDING-LEFT: 0.6em; PADDING-BOTTOM: 0px; =
PADDING-TOP: 0px
}
#globalfooter P.gf-links A#gf-links-hotnews {
	PADDING-LEFT: 1.9em; BACKGROUND: url(/global/elements/footer/apple.gif) =
no-repeat 0.6em 50%
}

@media Print   =20
{
#main #content {
	WIDTH: 100%
}
#main #sidebar {
	DISPLAY: none
}
#main .expandlabel {
	PADDING-LEFT: 0px! important
}
#main DIV.expandcontent {
	DISPLAY: block! important
}

}

------=_NextPart_000_0021_01C8F7DA.3C475C60
Content-Type: text/css;
	charset="ks_c_5601-1987"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://developer.apple.com/iphone/styles/iphone.css

#mainheader {
	BACKGROUND: url(http://devimages.apple.com/iphone/images/header.gif) =
no-repeat; MARGIN: -10px -3px -2em -1px; WIDTH: 984px; POSITION: =
relative; HEIGHT: 90px
}
#mainheader H1 {
	DISPLAY: inline
}
#mainheader H1 A {
	DISPLAY: block; FLOAT: left; WIDTH: 330px; CURSOR: default; =
TEXT-INDENT: -9999px; HEIGHT: 60px; outline: none; moz-outline: none
}
#mainheader P {
	FONT-WEIGHT: normal; FONT-SIZE: 10px; FLOAT: right; MARGIN: 2.3em 15px =
0px 0px; CURSOR: default; COLOR: #fff; text-shadow: #777 1px 1px 1px
}
#mainheader P A {
	FLOAT: left; MARGIN: 0.4em 0.6em; COLOR: #fff
}
#mainheader P STRONG {
	FLOAT: left; MARGIN: 0.4em 0.6em; COLOR: #fff
}
#mainheader P B {
	BACKGROUND: url(/iphone/images/header_separator.gif) repeat-y 0px 0px; =
FLOAT: left; MARGIN: 0px 0.6em; WIDTH: 2px; TEXT-INDENT: -9999px; =
HEIGHT: 2.3em
}
BODY#samples #main #header H1 {
	PADDING-TOP: 0.4em
}
BODY#samples #main UL.featured {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; FONT-SIZE: 12px; PADDING-BOTTOM: =
1px; MARGIN: 0px 0px 1em; OVERFLOW: hidden; PADDING-TOP: 0px
}
BODY#samples #main UL.featured LI {
	CLEAR: both; BORDER-TOP: #ccc 1px solid; PADDING-LEFT: 210px
}
BODY#samples #main UL.featured LI H3 {
	MARGIN-TOP: 4.6em
}
BODY#samples #main UL.featured LI H3 A {
	COLOR: #333
}
BODY#samples #main UL.featured LI H3 A:hover {
	COLOR: #366088
}
BODY#samples #main UL.featured LI IMG.left {
	MARGIN: 1.6em 0px 1em -195px
}
BODY#samples #main UL.featured P.button {
	FONT-SIZE: 11px
}
BODY#docs #main #header {
	PADDING-LEFT: 80px
}
BODY#docs #main UL {
	PADDING-BOTTOM: 0px
}
BODY#docs #main UL LI {
	FONT-WEIGHT: bold; FONT-SIZE: 12px; PADDING-BOTTOM: 1.6em
}
BODY.codinghowtos #main #header {
	PADDING-LEFT: 90px
}
BODY.codinghowtos #main #header H1 {
	MARGIN-TOP: 0px
}
BODY.codinghowtos #main UL {
	FONT-WEIGHT: bold
}
BODY.codinghowtos #main UL LI UL.stripe {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; FONT-WEIGHT: normal; =
PADDING-BOTTOM: 1em; PADDING-TOP: 0.6em
}
BODY.codinghowtos #main UL LI UL.stripe LI {
	PADDING-RIGHT: 0.6em; PADDING-LEFT: 0.6em; BACKGROUND: #fff; =
PADDING-BOTTOM: 0.4em; PADDING-TOP: 0.4em
}
BODY.codinghowtos #main UL LI UL.stripe LI.odd {
	BACKGROUND: #eee
}
#main #content .message {
	PADDING-RIGHT: 15px; PADDING-LEFT: 15px; BACKGROUND: #f2f2f2; =
MARGIN-BOTTOM: 1.6em; PADDING-BOTTOM: 0.6em; OVERFLOW: hidden; =
PADDING-TOP: 12px; POSITION: relative; -webkit-border-radius: 5px; =
-moz-border-radius: 5px; -o-border-radius: 5px; -khtml-border-radius: =
5px; border-radius: 5px
}
#main #content .message UL {
	PADDING-RIGHT: 0px; PADDING-LEFT: 25px; BACKGROUND: =
url(http://devimages.apple.com/global/elements/icons/check_18x18.png) =
no-repeat 0px 0px; PADDING-BOTTOM: 1px; MARGIN: 0px; BEHAVIOR: =
url(/global/scripts/lib/iepngfix.htc); PADDING-TOP: 2px
}
#main #content .message UL.alert {
	PADDING-LEFT: 30px; BACKGROUND: =
url(http://devimages.apple.com/global/elements/icons/warning_23x20.png) =
no-repeat 0px 0px
}
#main #content .message UL LI {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0.8em; MARGIN: =
0px; COLOR: #333; PADDING-TOP: 0px
}
#main #content .error.message {
	BACKGROUND-COLOR: #ecd0d0
}
#main #content .error.message UL {
	BACKGROUND: =
url(http://devimages.apple.com/global/elements/icons/warning_red_17x17.pn=
g) no-repeat 0px 0px; PADDING-TOP: 1px
}
#main #content .message A.close {
	RIGHT: 8px; CURSOR: pointer; POSITION: absolute; TOP: 5px
}
#main #content .hidden.message {
	MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: =
0px; HEIGHT: 0px
}
#main .expandlabel {
	BACKGROUND: =
url(http://devimages.apple.com/iphone/images/portal/transparent_arrow_exp=
and.gif) no-repeat 0px -45px; COLOR: #000
}
#main .closed.expandlabel {
	BACKGROUND-POSITION: 0px 4px
}
#main A.minipopuptrigger {
	DISPLAY: inline; CURSOR: pointer; outline: 0
}
#main .minipopup {
	DISPLAY: none; Z-INDEX: 900; POSITION: absolute! important
}
#main .selected.minipopup {
	DISPLAY: block
}
#main .minipopup .middle {
	PADDING-RIGHT: 32px; PADDING-LEFT: 32px; BACKGROUND: =
url(/iphone/images/portal/minipopup_bg.png) repeat-y; PADDING-BOTTOM: =
0px; WIDTH: 158px; PADDING-TOP: 5px; _background-image: none; _filter: =
progid:DXImageTransform.Microsoft.AlphaImageLoader(src=3D'/iphone/images/=
portal/minipopup_bg.png', sizingMethod=3D'scale')
}
#main .minipopup .top {
	FONT-SIZE: 1px; BACKGROUND: =
url(/iphone/images/portal/minipopup_bgtop.png) no-repeat; LEFT: 0px; =
WIDTH: 222px; POSITION: absolute; TOP: -14px; HEIGHT: 14px; =
_background-image: none; _filter: =
progid:DXImageTransform.Microsoft.AlphaImageLoader(src=3D'/iphone/images/=
portal/minipopup_bgtop.png', sizingMethod=3D'scale')
}
#main .minipopup .bottom {
	FONT-SIZE: 1px; BACKGROUND: =
url(/iphone/images/portal/minipopup_bgbottom.png) no-repeat; LEFT: 0px; =
WIDTH: 222px; BOTTOM: -28px; POSITION: absolute; HEIGHT: 30px; =
_background-image: none; _filter: =
progid:DXImageTransform.Microsoft.AlphaImageLoader(src=3D'/iphone/images/=
portal/minipopup_bgbottom.png', sizingMethod=3D'scale')
}
#main .small.minipopup .top {
	BACKGROUND: url(/iphone/images/portal/minipopup_small_bgtop.png) =
no-repeat; WIDTH: 130px; _background-image: none; _filter: =
progid:DXImageTransform.Microsoft.AlphaImageLoader(src=3D'/iphone/images/=
portal/minipopup_small_bgtop.png', sizingMethod=3D'crop')
}
#main .small.minipopup .middle {
	BACKGROUND: url(/iphone/images/portal/minipopup_small_bg.png) repeat-y; =
WIDTH: 66px; _background-image: none; _filter: =
progid:DXImageTransform.Microsoft.AlphaImageLoader(src=3D'/iphone/images/=
portal/minipopup_small_bg.png', sizingMethod=3D'scale')
}
#main .small.minipopup .bottom {
	BACKGROUND: url(/iphone/images/portal/minipopup_small_bgbottom.png) =
no-repeat; WIDTH: 130px; _background-image: none; _filter: =
progid:DXImageTransform.Microsoft.AlphaImageLoader(src=3D'/iphone/images/=
portal/minipopup_small_bgbottom.png', sizingMethod=3D'crop')
}
#main .minipopup A {
	POSITION: relative
}
#main .minipopup A.close {
	BACKGROUND: url(http://developer.apple.com/images/closebutton.png) =
no-repeat 0px 0px; FLOAT: right; MARGIN: 0px -5px -14px -9px; BEHAVIOR: =
url(/global/scripts/lib/iepngfix.htc); WIDTH: 14px; TEXT-INDENT: =
-9999px; HEIGHT: 14px
}
#main .minipopup P {
	MARGIN-BOTTOM: 2px
}
#main .minipopup P.buttons {
	TEXT-ALIGN: right
}
#main .minipopup UL {
	MARGIN-BOTTOM: 0px
}
#main .minipopup UL LI {
	PADDING-BOTTOM: 4px
}

------=_NextPart_000_0021_01C8F7DA.3C475C60
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://devimages.apple.com/global/scripts/lib/prototype.js

/*  Prototype JavaScript framework, version 1.6.0.2=0A=
 *  (c) 2005-2008 Sam Stephenson=0A=
 *=0A=
 *  Prototype is freely distributable under the terms of an MIT-style =
license.=0A=
 *  For details, see the Prototype web site: http://www.prototypejs.org/=0A=
 *=0A=
 =
*------------------------------------------------------------------------=
--*/=0A=
=0A=
var Prototype =3D {=0A=
  Version: '1.6.0.2',=0A=
=0A=
  Browser: {=0A=
    IE:     !!(window.attachEvent && !window.opera),=0A=
    Opera:  !!window.opera,=0A=
    WebKit: navigator.userAgent.indexOf('AppleWebKit/') > -1,=0A=
    Gecko:  navigator.userAgent.indexOf('Gecko') > -1 && =
navigator.userAgent.indexOf('KHTML') =3D=3D -1,=0A=
    MobileSafari: !!navigator.userAgent.match(/Apple.*Mobile.*Safari/)=0A=
  },=0A=
=0A=
  BrowserFeatures: {=0A=
    XPath: !!document.evaluate,=0A=
    ElementExtensions: !!window.HTMLElement,=0A=
    SpecificElementExtensions:=0A=
      document.createElement('div').__proto__ &&=0A=
      document.createElement('div').__proto__ !=3D=3D=0A=
        document.createElement('form').__proto__=0A=
  },=0A=
=0A=
  ScriptFragment: '<script[^>]*>([\\S\\s]*?)<\/script>',=0A=
  JSONFilter: /^\/\*-secure-([\s\S]*)\*\/\s*$/,=0A=
=0A=
  emptyFunction: function() { },=0A=
  K: function(x) { return x }=0A=
};=0A=
=0A=
if (Prototype.Browser.MobileSafari)=0A=
  Prototype.BrowserFeatures.SpecificElementExtensions =3D false;=0A=
=0A=
=0A=
/* Based on Alex Arnell's inheritance implementation. */=0A=
var Class =3D {=0A=
  create: function() {=0A=
    var parent =3D null, properties =3D $A(arguments);=0A=
    if (Object.isFunction(properties[0]))=0A=
      parent =3D properties.shift();=0A=
=0A=
    function klass() {=0A=
      this.initialize.apply(this, arguments);=0A=
    }=0A=
=0A=
    Object.extend(klass, Class.Methods);=0A=
    klass.superclass =3D parent;=0A=
    klass.subclasses =3D [];=0A=
=0A=
    if (parent) {=0A=
      var subclass =3D function() { };=0A=
      subclass.prototype =3D parent.prototype;=0A=
      klass.prototype =3D new subclass;=0A=
      parent.subclasses.push(klass);=0A=
    }=0A=
=0A=
    for (var i =3D 0; i < properties.length; i++)=0A=
      klass.addMethods(properties[i]);=0A=
=0A=
    if (!klass.prototype.initialize)=0A=
      klass.prototype.initialize =3D Prototype.emptyFunction;=0A=
=0A=
    klass.prototype.constructor =3D klass;=0A=
=0A=
    return klass;=0A=
  }=0A=
};=0A=
=0A=
Class.Methods =3D {=0A=
  addMethods: function(source) {=0A=
    var ancestor   =3D this.superclass && this.superclass.prototype;=0A=
    var properties =3D Object.keys(source);=0A=
=0A=
    if (!Object.keys({ toString: true }).length)=0A=
      properties.push("toString", "valueOf");=0A=
=0A=
    for (var i =3D 0, length =3D properties.length; i < length; i++) {=0A=
      var property =3D properties[i], value =3D source[property];=0A=
      if (ancestor && Object.isFunction(value) &&=0A=
          value.argumentNames().first() =3D=3D "$super") {=0A=
        var method =3D value, value =3D Object.extend((function(m) {=0A=
          return function() { return ancestor[m].apply(this, arguments) =
};=0A=
        })(property).wrap(method), {=0A=
          valueOf:  function() { return method },=0A=
          toString: function() { return method.toString() }=0A=
        });=0A=
      }=0A=
      this.prototype[property] =3D value;=0A=
    }=0A=
=0A=
    return this;=0A=
  }=0A=
};=0A=
=0A=
var Abstract =3D { };=0A=
=0A=
Object.extend =3D function(destination, source) {=0A=
  for (var property in source)=0A=
    destination[property] =3D source[property];=0A=
  return destination;=0A=
};=0A=
=0A=
Object.extend(Object, {=0A=
  inspect: function(object) {=0A=
    try {=0A=
      if (Object.isUndefined(object)) return 'undefined';=0A=
      if (object =3D=3D=3D null) return 'null';=0A=
      return object.inspect ? object.inspect() : String(object);=0A=
    } catch (e) {=0A=
      if (e instanceof RangeError) return '...';=0A=
      throw e;=0A=
    }=0A=
  },=0A=
=0A=
  toJSON: function(object) {=0A=
    var type =3D typeof object;=0A=
    switch (type) {=0A=
      case 'undefined':=0A=
      case 'function':=0A=
      case 'unknown': return;=0A=
      case 'boolean': return object.toString();=0A=
    }=0A=
=0A=
    if (object =3D=3D=3D null) return 'null';=0A=
    if (object.toJSON) return object.toJSON();=0A=
    if (Object.isElement(object)) return;=0A=
=0A=
    var results =3D [];=0A=
    for (var property in object) {=0A=
      var value =3D Object.toJSON(object[property]);=0A=
      if (!Object.isUndefined(value))=0A=
        results.push(property.toJSON() + ': ' + value);=0A=
    }=0A=
=0A=
    return '{' + results.join(', ') + '}';=0A=
  },=0A=
=0A=
  toQueryString: function(object) {=0A=
    return $H(object).toQueryString();=0A=
  },=0A=
=0A=
  toHTML: function(object) {=0A=
    return object && object.toHTML ? object.toHTML() : =
String.interpret(object);=0A=
  },=0A=
=0A=
  keys: function(object) {=0A=
    var keys =3D [];=0A=
    for (var property in object)=0A=
      keys.push(property);=0A=
    return keys;=0A=
  },=0A=
=0A=
  values: function(object) {=0A=
    var values =3D [];=0A=
    for (var property in object)=0A=
      values.push(object[property]);=0A=
    return values;=0A=
  },=0A=
=0A=
  clone: function(object) {=0A=
    return Object.extend({ }, object);=0A=
  },=0A=
=0A=
  isElement: function(object) {=0A=
    return object && object.nodeType =3D=3D 1;=0A=
  },=0A=
=0A=
  isArray: function(object) {=0A=
    return object !=3D null && typeof object =3D=3D "object" &&=0A=
      'splice' in object && 'join' in object;=0A=
  },=0A=
=0A=
  isHash: function(object) {=0A=
    return object instanceof Hash;=0A=
  },=0A=
=0A=
  isFunction: function(object) {=0A=
    return typeof object =3D=3D "function";=0A=
  },=0A=
=0A=
  isString: function(object) {=0A=
    return typeof object =3D=3D "string";=0A=
  },=0A=
=0A=
  isNumber: function(object) {=0A=
    return typeof object =3D=3D "number";=0A=
  },=0A=
=0A=
  isUndefined: function(object) {=0A=
    return typeof object =3D=3D "undefined";=0A=
  }=0A=
});=0A=
=0A=
Object.extend(Function.prototype, {=0A=
  argumentNames: function() {=0A=
    var names =3D =
this.toString().match(/^[\s\(]*function[^(]*\((.*?)\)/)[1].split(",").inv=
oke("strip");=0A=
    return names.length =3D=3D 1 && !names[0] ? [] : names;=0A=
  },=0A=
=0A=
  bind: function() {=0A=
    if (arguments.length < 2 && Object.isUndefined(arguments[0])) return =
this;=0A=
    var __method =3D this, args =3D $A(arguments), object =3D =
args.shift();=0A=
    return function() {=0A=
      return __method.apply(object, args.concat($A(arguments)));=0A=
    }=0A=
  },=0A=
=0A=
  bindAsEventListener: function() {=0A=
    var __method =3D this, args =3D $A(arguments), object =3D =
args.shift();=0A=
    return function(event) {=0A=
      return __method.apply(object, [event || =
window.event].concat(args));=0A=
    }=0A=
  },=0A=
=0A=
  curry: function() {=0A=
    if (!arguments.length) return this;=0A=
    var __method =3D this, args =3D $A(arguments);=0A=
    return function() {=0A=
      return __method.apply(this, args.concat($A(arguments)));=0A=
    }=0A=
  },=0A=
=0A=
  delay: function() {=0A=
    var __method =3D this, args =3D $A(arguments), timeout =3D =
args.shift() * 1000;=0A=
    return window.setTimeout(function() {=0A=
      return __method.apply(__method, args);=0A=
    }, timeout);=0A=
  },=0A=
=0A=
  wrap: function(wrapper) {=0A=
    var __method =3D this;=0A=
    return function() {=0A=
      return wrapper.apply(this, =
[__method.bind(this)].concat($A(arguments)));=0A=
    }=0A=
  },=0A=
=0A=
  methodize: function() {=0A=
    if (this._methodized) return this._methodized;=0A=
    var __method =3D this;=0A=
    return this._methodized =3D function() {=0A=
      return __method.apply(null, [this].concat($A(arguments)));=0A=
    };=0A=
  }=0A=
});=0A=
=0A=
Function.prototype.defer =3D Function.prototype.delay.curry(0.01);=0A=
=0A=
Date.prototype.toJSON =3D function() {=0A=
  return '"' + this.getUTCFullYear() + '-' +=0A=
    (this.getUTCMonth() + 1).toPaddedString(2) + '-' +=0A=
    this.getUTCDate().toPaddedString(2) + 'T' +=0A=
    this.getUTCHours().toPaddedString(2) + ':' +=0A=
    this.getUTCMinutes().toPaddedString(2) + ':' +=0A=
    this.getUTCSeconds().toPaddedString(2) + 'Z"';=0A=
};=0A=
=0A=
var Try =3D {=0A=
  these: function() {=0A=
    var returnValue;=0A=
=0A=
    for (var i =3D 0, length =3D arguments.length; i < length; i++) {=0A=
      var lambda =3D arguments[i];=0A=
      try {=0A=
        returnValue =3D lambda();=0A=
        break;=0A=
      } catch (e) { }=0A=
    }=0A=
=0A=
    return returnValue;=0A=
  }=0A=
};=0A=
=0A=
RegExp.prototype.match =3D RegExp.prototype.test;=0A=
=0A=
RegExp.escape =3D function(str) {=0A=
  return String(str).replace(/([.*+?^=3D!:${}()|[\]\/\\])/g, '\\$1');=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var PeriodicalExecuter =3D Class.create({=0A=
  initialize: function(callback, frequency) {=0A=
    this.callback =3D callback;=0A=
    this.frequency =3D frequency;=0A=
    this.currentlyExecuting =3D false;=0A=
=0A=
    this.registerCallback();=0A=
  },=0A=
=0A=
  registerCallback: function() {=0A=
    this.timer =3D setInterval(this.onTimerEvent.bind(this), =
this.frequency * 1000);=0A=
  },=0A=
=0A=
  execute: function() {=0A=
    this.callback(this);=0A=
  },=0A=
=0A=
  stop: function() {=0A=
    if (!this.timer) return;=0A=
    clearInterval(this.timer);=0A=
    this.timer =3D null;=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    if (!this.currentlyExecuting) {=0A=
      try {=0A=
        this.currentlyExecuting =3D true;=0A=
        this.execute();=0A=
      } finally {=0A=
        this.currentlyExecuting =3D false;=0A=
      }=0A=
    }=0A=
  }=0A=
});=0A=
Object.extend(String, {=0A=
  interpret: function(value) {=0A=
    return value =3D=3D null ? '' : String(value);=0A=
  },=0A=
  specialChar: {=0A=
    '\b': '\\b',=0A=
    '\t': '\\t',=0A=
    '\n': '\\n',=0A=
    '\f': '\\f',=0A=
    '\r': '\\r',=0A=
    '\\': '\\\\'=0A=
  }=0A=
});=0A=
=0A=
Object.extend(String.prototype, {=0A=
  gsub: function(pattern, replacement) {=0A=
    var result =3D '', source =3D this, match;=0A=
    replacement =3D arguments.callee.prepareReplacement(replacement);=0A=
=0A=
    while (source.length > 0) {=0A=
      if (match =3D source.match(pattern)) {=0A=
        result +=3D source.slice(0, match.index);=0A=
        result +=3D String.interpret(replacement(match));=0A=
        source  =3D source.slice(match.index + match[0].length);=0A=
      } else {=0A=
        result +=3D source, source =3D '';=0A=
      }=0A=
    }=0A=
    return result;=0A=
  },=0A=
=0A=
  sub: function(pattern, replacement, count) {=0A=
    replacement =3D this.gsub.prepareReplacement(replacement);=0A=
    count =3D Object.isUndefined(count) ? 1 : count;=0A=
=0A=
    return this.gsub(pattern, function(match) {=0A=
      if (--count < 0) return match[0];=0A=
      return replacement(match);=0A=
    });=0A=
  },=0A=
=0A=
  scan: function(pattern, iterator) {=0A=
    this.gsub(pattern, iterator);=0A=
    return String(this);=0A=
  },=0A=
=0A=
  truncate: function(length, truncation) {=0A=
    length =3D length || 30;=0A=
    truncation =3D Object.isUndefined(truncation) ? '...' : truncation;=0A=
    return this.length > length ?=0A=
      this.slice(0, length - truncation.length) + truncation : =
String(this);=0A=
  },=0A=
=0A=
  strip: function() {=0A=
    return this.replace(/^\s+/, '').replace(/\s+$/, '');=0A=
  },=0A=
=0A=
  stripTags: function() {=0A=
    return this.replace(/<\/?[^>]+>/gi, '');=0A=
  },=0A=
=0A=
  stripScripts: function() {=0A=
    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');=0A=
  },=0A=
=0A=
  extractScripts: function() {=0A=
    var matchAll =3D new RegExp(Prototype.ScriptFragment, 'img');=0A=
    var matchOne =3D new RegExp(Prototype.ScriptFragment, 'im');=0A=
    return (this.match(matchAll) || []).map(function(scriptTag) {=0A=
      return (scriptTag.match(matchOne) || ['', ''])[1];=0A=
    });=0A=
  },=0A=
=0A=
  evalScripts: function() {=0A=
    return this.extractScripts().map(function(script) { return =
eval(script) });=0A=
  },=0A=
=0A=
  escapeHTML: function() {=0A=
    var self =3D arguments.callee;=0A=
    self.text.data =3D this;=0A=
    return self.div.innerHTML;=0A=
  },=0A=
=0A=
  unescapeHTML: function() {=0A=
    var div =3D new Element('div');=0A=
    div.innerHTML =3D this.stripTags();=0A=
    return div.childNodes[0] ? (div.childNodes.length > 1 ?=0A=
      $A(div.childNodes).inject('', function(memo, node) { return =
memo+node.nodeValue }) :=0A=
      div.childNodes[0].nodeValue) : '';=0A=
  },=0A=
=0A=
  toQueryParams: function(separator) {=0A=
    var match =3D this.strip().match(/([^?#]*)(#.*)?$/);=0A=
    if (!match) return { };=0A=
=0A=
    return match[1].split(separator || '&').inject({ }, function(hash, =
pair) {=0A=
      if ((pair =3D pair.split('=3D'))[0]) {=0A=
        var key =3D decodeURIComponent(pair.shift());=0A=
        var value =3D pair.length > 1 ? pair.join('=3D') : pair[0];=0A=
        if (value !=3D undefined) value =3D decodeURIComponent(value);=0A=
=0A=
        if (key in hash) {=0A=
          if (!Object.isArray(hash[key])) hash[key] =3D [hash[key]];=0A=
          hash[key].push(value);=0A=
        }=0A=
        else hash[key] =3D value;=0A=
      }=0A=
      return hash;=0A=
    });=0A=
  },=0A=
=0A=
  toArray: function() {=0A=
    return this.split('');=0A=
  },=0A=
=0A=
  succ: function() {=0A=
    return this.slice(0, this.length - 1) +=0A=
      String.fromCharCode(this.charCodeAt(this.length - 1) + 1);=0A=
  },=0A=
=0A=
  times: function(count) {=0A=
    return count < 1 ? '' : new Array(count + 1).join(this);=0A=
  },=0A=
=0A=
  camelize: function() {=0A=
    var parts =3D this.split('-'), len =3D parts.length;=0A=
    if (len =3D=3D 1) return parts[0];=0A=
=0A=
    var camelized =3D this.charAt(0) =3D=3D '-'=0A=
      ? parts[0].charAt(0).toUpperCase() + parts[0].substring(1)=0A=
      : parts[0];=0A=
=0A=
    for (var i =3D 1; i < len; i++)=0A=
      camelized +=3D parts[i].charAt(0).toUpperCase() + =
parts[i].substring(1);=0A=
=0A=
    return camelized;=0A=
  },=0A=
=0A=
  capitalize: function() {=0A=
    return this.charAt(0).toUpperCase() + =
this.substring(1).toLowerCase();=0A=
  },=0A=
=0A=
  underscore: function() {=0A=
    return this.gsub(/::/, =
'/').gsub(/([A-Z]+)([A-Z][a-z])/,'#{1}_#{2}').gsub(/([a-z\d])([A-Z])/,'#{=
1}_#{2}').gsub(/-/,'_').toLowerCase();=0A=
  },=0A=
=0A=
  dasherize: function() {=0A=
    return this.gsub(/_/,'-');=0A=
  },=0A=
=0A=
  inspect: function(useDoubleQuotes) {=0A=
    var escapedString =3D this.gsub(/[\x00-\x1f\\]/, function(match) {=0A=
      var character =3D String.specialChar[match[0]];=0A=
      return character ? character : '\\u00' + =
match[0].charCodeAt().toPaddedString(2, 16);=0A=
    });=0A=
    if (useDoubleQuotes) return '"' + escapedString.replace(/"/g, '\\"') =
+ '"';=0A=
    return "'" + escapedString.replace(/'/g, '\\\'') + "'";=0A=
  },=0A=
=0A=
  toJSON: function() {=0A=
    return this.inspect(true);=0A=
  },=0A=
=0A=
  unfilterJSON: function(filter) {=0A=
    return this.sub(filter || Prototype.JSONFilter, '#{1}');=0A=
  },=0A=
=0A=
  isJSON: function() {=0A=
    var str =3D this;=0A=
    if (str.blank()) return false;=0A=
    str =3D this.replace(/\\./g, '@').replace(/"[^"\\\n\r]*"/g, '');=0A=
    return (/^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]*$/).test(str);=0A=
  },=0A=
=0A=
  evalJSON: function(sanitize) {=0A=
    var json =3D this.unfilterJSON();=0A=
    try {=0A=
      if (!sanitize || json.isJSON()) return eval('(' + json + ')');=0A=
    } catch (e) { }=0A=
    throw new SyntaxError('Badly formed JSON string: ' + this.inspect());=0A=
  },=0A=
=0A=
  include: function(pattern) {=0A=
    return this.indexOf(pattern) > -1;=0A=
  },=0A=
=0A=
  startsWith: function(pattern) {=0A=
    return this.indexOf(pattern) =3D=3D=3D 0;=0A=
  },=0A=
=0A=
  endsWith: function(pattern) {=0A=
    var d =3D this.length - pattern.length;=0A=
    return d >=3D 0 && this.lastIndexOf(pattern) =3D=3D=3D d;=0A=
  },=0A=
=0A=
  empty: function() {=0A=
    return this =3D=3D '';=0A=
  },=0A=
=0A=
  blank: function() {=0A=
    return /^\s*$/.test(this);=0A=
  },=0A=
=0A=
  interpolate: function(object, pattern) {=0A=
    return new Template(this, pattern).evaluate(object);=0A=
  }=0A=
});=0A=
=0A=
if (Prototype.Browser.WebKit || Prototype.Browser.IE) =
Object.extend(String.prototype, {=0A=
  escapeHTML: function() {=0A=
    return =
this.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');=0A=
  },=0A=
  unescapeHTML: function() {=0A=
    return =
this.replace(/&amp;/g,'&').replace(/&lt;/g,'<').replace(/&gt;/g,'>');=0A=
  }=0A=
});=0A=
=0A=
String.prototype.gsub.prepareReplacement =3D function(replacement) {=0A=
  if (Object.isFunction(replacement)) return replacement;=0A=
  var template =3D new Template(replacement);=0A=
  return function(match) { return template.evaluate(match) };=0A=
};=0A=
=0A=
String.prototype.parseQuery =3D String.prototype.toQueryParams;=0A=
=0A=
Object.extend(String.prototype.escapeHTML, {=0A=
  div:  document.createElement('div'),=0A=
  text: document.createTextNode('')=0A=
});=0A=
=0A=
with (String.prototype.escapeHTML) div.appendChild(text);=0A=
=0A=
var Template =3D Class.create({=0A=
  initialize: function(template, pattern) {=0A=
    this.template =3D template.toString();=0A=
    this.pattern =3D pattern || Template.Pattern;=0A=
  },=0A=
=0A=
  evaluate: function(object) {=0A=
    if (Object.isFunction(object.toTemplateReplacements))=0A=
      object =3D object.toTemplateReplacements();=0A=
=0A=
    return this.template.gsub(this.pattern, function(match) {=0A=
      if (object =3D=3D null) return '';=0A=
=0A=
      var before =3D match[1] || '';=0A=
      if (before =3D=3D '\\') return match[2];=0A=
=0A=
      var ctx =3D object, expr =3D match[3];=0A=
      var pattern =3D /^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;=0A=
      match =3D pattern.exec(expr);=0A=
      if (match =3D=3D null) return before;=0A=
=0A=
      while (match !=3D null) {=0A=
        var comp =3D match[1].startsWith('[') ? match[2].gsub('\\\\]', =
']') : match[1];=0A=
        ctx =3D ctx[comp];=0A=
        if (null =3D=3D ctx || '' =3D=3D match[3]) break;=0A=
        expr =3D expr.substring('[' =3D=3D match[3] ? match[1].length : =
match[0].length);=0A=
        match =3D pattern.exec(expr);=0A=
      }=0A=
=0A=
      return before + String.interpret(ctx);=0A=
    });=0A=
  }=0A=
});=0A=
Template.Pattern =3D /(^|.|\r|\n)(#\{(.*?)\})/;=0A=
=0A=
var $break =3D { };=0A=
=0A=
var Enumerable =3D {=0A=
  each: function(iterator, context) {=0A=
    var index =3D 0;=0A=
    iterator =3D iterator.bind(context);=0A=
    try {=0A=
      this._each(function(value) {=0A=
        iterator(value, index++);=0A=
      });=0A=
    } catch (e) {=0A=
      if (e !=3D $break) throw e;=0A=
    }=0A=
    return this;=0A=
  },=0A=
=0A=
  eachSlice: function(number, iterator, context) {=0A=
    iterator =3D iterator ? iterator.bind(context) : Prototype.K;=0A=
    var index =3D -number, slices =3D [], array =3D this.toArray();=0A=
    while ((index +=3D number) < array.length)=0A=
      slices.push(array.slice(index, index+number));=0A=
    return slices.collect(iterator, context);=0A=
  },=0A=
=0A=
  all: function(iterator, context) {=0A=
    iterator =3D iterator ? iterator.bind(context) : Prototype.K;=0A=
    var result =3D true;=0A=
    this.each(function(value, index) {=0A=
      result =3D result && !!iterator(value, index);=0A=
      if (!result) throw $break;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  any: function(iterator, context) {=0A=
    iterator =3D iterator ? iterator.bind(context) : Prototype.K;=0A=
    var result =3D false;=0A=
    this.each(function(value, index) {=0A=
      if (result =3D !!iterator(value, index))=0A=
        throw $break;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  collect: function(iterator, context) {=0A=
    iterator =3D iterator ? iterator.bind(context) : Prototype.K;=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      results.push(iterator(value, index));=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  detect: function(iterator, context) {=0A=
    iterator =3D iterator.bind(context);=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      if (iterator(value, index)) {=0A=
        result =3D value;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  findAll: function(iterator, context) {=0A=
    iterator =3D iterator.bind(context);=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (iterator(value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  grep: function(filter, iterator, context) {=0A=
    iterator =3D iterator ? iterator.bind(context) : Prototype.K;=0A=
    var results =3D [];=0A=
=0A=
    if (Object.isString(filter))=0A=
      filter =3D new RegExp(filter);=0A=
=0A=
    this.each(function(value, index) {=0A=
      if (filter.match(value))=0A=
        results.push(iterator(value, index));=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  include: function(object) {=0A=
    if (Object.isFunction(this.indexOf))=0A=
      if (this.indexOf(object) !=3D -1) return true;=0A=
=0A=
    var found =3D false;=0A=
    this.each(function(value) {=0A=
      if (value =3D=3D object) {=0A=
        found =3D true;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return found;=0A=
  },=0A=
=0A=
  inGroupsOf: function(number, fillWith) {=0A=
    fillWith =3D Object.isUndefined(fillWith) ? null : fillWith;=0A=
    return this.eachSlice(number, function(slice) {=0A=
      while(slice.length < number) slice.push(fillWith);=0A=
      return slice;=0A=
    });=0A=
  },=0A=
=0A=
  inject: function(memo, iterator, context) {=0A=
    iterator =3D iterator.bind(context);=0A=
    this.each(function(value, index) {=0A=
      memo =3D iterator(memo, value, index);=0A=
    });=0A=
    return memo;=0A=
  },=0A=
=0A=
  invoke: function(method) {=0A=
    var args =3D $A(arguments).slice(1);=0A=
    return this.map(function(value) {=0A=
      return value[method].apply(value, args);=0A=
    });=0A=
  },=0A=
=0A=
  max: function(iterator, context) {=0A=
    iterator =3D iterator ? iterator.bind(context) : Prototype.K;=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D iterator(value, index);=0A=
      if (result =3D=3D null || value >=3D result)=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  min: function(iterator, context) {=0A=
    iterator =3D iterator ? iterator.bind(context) : Prototype.K;=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D iterator(value, index);=0A=
      if (result =3D=3D null || value < result)=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  partition: function(iterator, context) {=0A=
    iterator =3D iterator ? iterator.bind(context) : Prototype.K;=0A=
    var trues =3D [], falses =3D [];=0A=
    this.each(function(value, index) {=0A=
      (iterator(value, index) ?=0A=
        trues : falses).push(value);=0A=
    });=0A=
    return [trues, falses];=0A=
  },=0A=
=0A=
  pluck: function(property) {=0A=
    var results =3D [];=0A=
    this.each(function(value) {=0A=
      results.push(value[property]);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  reject: function(iterator, context) {=0A=
    iterator =3D iterator.bind(context);=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (!iterator(value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  sortBy: function(iterator, context) {=0A=
    iterator =3D iterator.bind(context);=0A=
    return this.map(function(value, index) {=0A=
      return {value: value, criteria: iterator(value, index)};=0A=
    }).sort(function(left, right) {=0A=
      var a =3D left.criteria, b =3D right.criteria;=0A=
      return a < b ? -1 : a > b ? 1 : 0;=0A=
    }).pluck('value');=0A=
  },=0A=
=0A=
  toArray: function() {=0A=
    return this.map();=0A=
  },=0A=
=0A=
  zip: function() {=0A=
    var iterator =3D Prototype.K, args =3D $A(arguments);=0A=
    if (Object.isFunction(args.last()))=0A=
      iterator =3D args.pop();=0A=
=0A=
    var collections =3D [this].concat(args).map($A);=0A=
    return this.map(function(value, index) {=0A=
      return iterator(collections.pluck(index));=0A=
    });=0A=
  },=0A=
=0A=
  size: function() {=0A=
    return this.toArray().length;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return '#<Enumerable:' + this.toArray().inspect() + '>';=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Enumerable, {=0A=
  map:     Enumerable.collect,=0A=
  find:    Enumerable.detect,=0A=
  select:  Enumerable.findAll,=0A=
  filter:  Enumerable.findAll,=0A=
  member:  Enumerable.include,=0A=
  entries: Enumerable.toArray,=0A=
  every:   Enumerable.all,=0A=
  some:    Enumerable.any=0A=
});=0A=
function $A(iterable) {=0A=
  if (!iterable) return [];=0A=
  if (iterable.toArray) return iterable.toArray();=0A=
  var length =3D iterable.length || 0, results =3D new Array(length);=0A=
  while (length--) results[length] =3D iterable[length];=0A=
  return results;=0A=
}=0A=
=0A=
if (Prototype.Browser.WebKit) {=0A=
  $A =3D function(iterable) {=0A=
    if (!iterable) return [];=0A=
    if (!(Object.isFunction(iterable) && iterable =3D=3D '[object =
NodeList]') &&=0A=
        iterable.toArray) return iterable.toArray();=0A=
    var length =3D iterable.length || 0, results =3D new Array(length);=0A=
    while (length--) results[length] =3D iterable[length];=0A=
    return results;=0A=
  };=0A=
}=0A=
=0A=
Array.from =3D $A;=0A=
=0A=
Object.extend(Array.prototype, Enumerable);=0A=
=0A=
if (!Array.prototype._reverse) Array.prototype._reverse =3D =
Array.prototype.reverse;=0A=
=0A=
Object.extend(Array.prototype, {=0A=
  _each: function(iterator) {=0A=
    for (var i =3D 0, length =3D this.length; i < length; i++)=0A=
      iterator(this[i]);=0A=
  },=0A=
=0A=
  clear: function() {=0A=
    this.length =3D 0;=0A=
    return this;=0A=
  },=0A=
=0A=
  first: function() {=0A=
    return this[0];=0A=
  },=0A=
=0A=
  last: function() {=0A=
    return this[this.length - 1];=0A=
  },=0A=
=0A=
  compact: function() {=0A=
    return this.select(function(value) {=0A=
      return value !=3D null;=0A=
    });=0A=
  },=0A=
=0A=
  flatten: function() {=0A=
    return this.inject([], function(array, value) {=0A=
      return array.concat(Object.isArray(value) ?=0A=
        value.flatten() : [value]);=0A=
    });=0A=
  },=0A=
=0A=
  without: function() {=0A=
    var values =3D $A(arguments);=0A=
    return this.select(function(value) {=0A=
      return !values.include(value);=0A=
    });=0A=
  },=0A=
=0A=
  reverse: function(inline) {=0A=
    return (inline !=3D=3D false ? this : this.toArray())._reverse();=0A=
  },=0A=
=0A=
  reduce: function() {=0A=
    return this.length > 1 ? this : this[0];=0A=
  },=0A=
=0A=
  uniq: function(sorted) {=0A=
    return this.inject([], function(array, value, index) {=0A=
      if (0 =3D=3D index || (sorted ? array.last() !=3D value : =
!array.include(value)))=0A=
        array.push(value);=0A=
      return array;=0A=
    });=0A=
  },=0A=
=0A=
  intersect: function(array) {=0A=
    return this.uniq().findAll(function(item) {=0A=
      return array.detect(function(value) { return item =3D=3D=3D value =
});=0A=
    });=0A=
  },=0A=
=0A=
  clone: function() {=0A=
    return [].concat(this);=0A=
  },=0A=
=0A=
  size: function() {=0A=
    return this.length;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return '[' + this.map(Object.inspect).join(', ') + ']';=0A=
  },=0A=
=0A=
  toJSON: function() {=0A=
    var results =3D [];=0A=
    this.each(function(object) {=0A=
      var value =3D Object.toJSON(object);=0A=
      if (!Object.isUndefined(value)) results.push(value);=0A=
    });=0A=
    return '[' + results.join(', ') + ']';=0A=
  }=0A=
});=0A=
=0A=
// use native browser JS 1.6 implementation if available=0A=
if (Object.isFunction(Array.prototype.forEach))=0A=
  Array.prototype._each =3D Array.prototype.forEach;=0A=
=0A=
if (!Array.prototype.indexOf) Array.prototype.indexOf =3D function(item, =
i) {=0A=
  i || (i =3D 0);=0A=
  var length =3D this.length;=0A=
  if (i < 0) i =3D length + i;=0A=
  for (; i < length; i++)=0A=
    if (this[i] =3D=3D=3D item) return i;=0A=
  return -1;=0A=
};=0A=
=0A=
if (!Array.prototype.lastIndexOf) Array.prototype.lastIndexOf =3D =
function(item, i) {=0A=
  i =3D isNaN(i) ? this.length : (i < 0 ? this.length + i : i) + 1;=0A=
  var n =3D this.slice(0, i).reverse().indexOf(item);=0A=
  return (n < 0) ? n : i - n - 1;=0A=
};=0A=
=0A=
Array.prototype.toArray =3D Array.prototype.clone;=0A=
=0A=
function $w(string) {=0A=
  if (!Object.isString(string)) return [];=0A=
  string =3D string.strip();=0A=
  return string ? string.split(/\s+/) : [];=0A=
}=0A=
=0A=
if (Prototype.Browser.Opera){=0A=
  Array.prototype.concat =3D function() {=0A=
    var array =3D [];=0A=
    for (var i =3D 0, length =3D this.length; i < length; i++) =
array.push(this[i]);=0A=
    for (var i =3D 0, length =3D arguments.length; i < length; i++) {=0A=
      if (Object.isArray(arguments[i])) {=0A=
        for (var j =3D 0, arrayLength =3D arguments[i].length; j < =
arrayLength; j++)=0A=
          array.push(arguments[i][j]);=0A=
      } else {=0A=
        array.push(arguments[i]);=0A=
      }=0A=
    }=0A=
    return array;=0A=
  };=0A=
}=0A=
Object.extend(Number.prototype, {=0A=
  toColorPart: function() {=0A=
    return this.toPaddedString(2, 16);=0A=
  },=0A=
=0A=
  succ: function() {=0A=
    return this + 1;=0A=
  },=0A=
=0A=
  times: function(iterator) {=0A=
    $R(0, this, true).each(iterator);=0A=
    return this;=0A=
  },=0A=
=0A=
  toPaddedString: function(length, radix) {=0A=
    var string =3D this.toString(radix || 10);=0A=
    return '0'.times(length - string.length) + string;=0A=
  },=0A=
=0A=
  toJSON: function() {=0A=
    return isFinite(this) ? this.toString() : 'null';=0A=
  }=0A=
});=0A=
=0A=
$w('abs round ceil floor').each(function(method){=0A=
  Number.prototype[method] =3D Math[method].methodize();=0A=
});=0A=
function $H(object) {=0A=
  return new Hash(object);=0A=
};=0A=
=0A=
var Hash =3D Class.create(Enumerable, (function() {=0A=
=0A=
  function toQueryPair(key, value) {=0A=
    if (Object.isUndefined(value)) return key;=0A=
    return key + '=3D' + encodeURIComponent(String.interpret(value));=0A=
  }=0A=
=0A=
  return {=0A=
    initialize: function(object) {=0A=
      this._object =3D Object.isHash(object) ? object.toObject() : =
Object.clone(object);=0A=
    },=0A=
=0A=
    _each: function(iterator) {=0A=
      for (var key in this._object) {=0A=
        var value =3D this._object[key], pair =3D [key, value];=0A=
        pair.key =3D key;=0A=
        pair.value =3D value;=0A=
        iterator(pair);=0A=
      }=0A=
    },=0A=
=0A=
    set: function(key, value) {=0A=
      return this._object[key] =3D value;=0A=
    },=0A=
=0A=
    get: function(key) {=0A=
      return this._object[key];=0A=
    },=0A=
=0A=
    unset: function(key) {=0A=
      var value =3D this._object[key];=0A=
      delete this._object[key];=0A=
      return value;=0A=
    },=0A=
=0A=
    toObject: function() {=0A=
      return Object.clone(this._object);=0A=
    },=0A=
=0A=
    keys: function() {=0A=
      return this.pluck('key');=0A=
    },=0A=
=0A=
    values: function() {=0A=
      return this.pluck('value');=0A=
    },=0A=
=0A=
    index: function(value) {=0A=
      var match =3D this.detect(function(pair) {=0A=
        return pair.value =3D=3D=3D value;=0A=
      });=0A=
      return match && match.key;=0A=
    },=0A=
=0A=
    merge: function(object) {=0A=
      return this.clone().update(object);=0A=
    },=0A=
=0A=
    update: function(object) {=0A=
      return new Hash(object).inject(this, function(result, pair) {=0A=
        result.set(pair.key, pair.value);=0A=
        return result;=0A=
      });=0A=
    },=0A=
=0A=
    toQueryString: function() {=0A=
      return this.map(function(pair) {=0A=
        var key =3D encodeURIComponent(pair.key), values =3D pair.value;=0A=
=0A=
        if (values && typeof values =3D=3D 'object') {=0A=
          if (Object.isArray(values))=0A=
            return values.map(toQueryPair.curry(key)).join('&');=0A=
        }=0A=
        return toQueryPair(key, values);=0A=
      }).join('&');=0A=
    },=0A=
=0A=
    inspect: function() {=0A=
      return '#<Hash:{' + this.map(function(pair) {=0A=
        return pair.map(Object.inspect).join(': ');=0A=
      }).join(', ') + '}>';=0A=
    },=0A=
=0A=
    toJSON: function() {=0A=
      return Object.toJSON(this.toObject());=0A=
    },=0A=
=0A=
    clone: function() {=0A=
      return new Hash(this);=0A=
    }=0A=
  }=0A=
})());=0A=
=0A=
Hash.prototype.toTemplateReplacements =3D Hash.prototype.toObject;=0A=
Hash.from =3D $H;=0A=
var ObjectRange =3D Class.create(Enumerable, {=0A=
  initialize: function(start, end, exclusive) {=0A=
    this.start =3D start;=0A=
    this.end =3D end;=0A=
    this.exclusive =3D exclusive;=0A=
  },=0A=
=0A=
  _each: function(iterator) {=0A=
    var value =3D this.start;=0A=
    while (this.include(value)) {=0A=
      iterator(value);=0A=
      value =3D value.succ();=0A=
    }=0A=
  },=0A=
=0A=
  include: function(value) {=0A=
    if (value < this.start)=0A=
      return false;=0A=
    if (this.exclusive)=0A=
      return value < this.end;=0A=
    return value <=3D this.end;=0A=
  }=0A=
});=0A=
=0A=
var $R =3D function(start, end, exclusive) {=0A=
  return new ObjectRange(start, end, exclusive);=0A=
};=0A=
=0A=
var Ajax =3D {=0A=
  getTransport: function() {=0A=
    return Try.these(=0A=
      function() {return new XMLHttpRequest()},=0A=
      function() {return new ActiveXObject('Msxml2.XMLHTTP')},=0A=
      function() {return new ActiveXObject('Microsoft.XMLHTTP')}=0A=
    ) || false;=0A=
  },=0A=
=0A=
  activeRequestCount: 0=0A=
};=0A=
=0A=
Ajax.Responders =3D {=0A=
  responders: [],=0A=
=0A=
  _each: function(iterator) {=0A=
    this.responders._each(iterator);=0A=
  },=0A=
=0A=
  register: function(responder) {=0A=
    if (!this.include(responder))=0A=
      this.responders.push(responder);=0A=
  },=0A=
=0A=
  unregister: function(responder) {=0A=
    this.responders =3D this.responders.without(responder);=0A=
  },=0A=
=0A=
  dispatch: function(callback, request, transport, json) {=0A=
    this.each(function(responder) {=0A=
      if (Object.isFunction(responder[callback])) {=0A=
        try {=0A=
          responder[callback].apply(responder, [request, transport, =
json]);=0A=
        } catch (e) { }=0A=
      }=0A=
    });=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Ajax.Responders, Enumerable);=0A=
=0A=
Ajax.Responders.register({=0A=
  onCreate:   function() { Ajax.activeRequestCount++ },=0A=
  onComplete: function() { Ajax.activeRequestCount-- }=0A=
});=0A=
=0A=
Ajax.Base =3D Class.create({=0A=
  initialize: function(options) {=0A=
    this.options =3D {=0A=
      method:       'post',=0A=
      asynchronous: true,=0A=
      contentType:  'application/x-www-form-urlencoded',=0A=
      encoding:     'UTF-8',=0A=
      parameters:   '',=0A=
      evalJSON:     true,=0A=
      evalJS:       true=0A=
    };=0A=
    Object.extend(this.options, options || { });=0A=
=0A=
    this.options.method =3D this.options.method.toLowerCase();=0A=
=0A=
    if (Object.isString(this.options.parameters))=0A=
      this.options.parameters =3D =
this.options.parameters.toQueryParams();=0A=
    else if (Object.isHash(this.options.parameters))=0A=
      this.options.parameters =3D this.options.parameters.toObject();=0A=
  }=0A=
});=0A=
=0A=
Ajax.Request =3D Class.create(Ajax.Base, {=0A=
  _complete: false,=0A=
=0A=
  initialize: function($super, url, options) {=0A=
    $super(options);=0A=
    this.transport =3D Ajax.getTransport();=0A=
    this.request(url);=0A=
  },=0A=
=0A=
  request: function(url) {=0A=
    this.url =3D url;=0A=
    this.method =3D this.options.method;=0A=
    var params =3D Object.clone(this.options.parameters);=0A=
=0A=
    if (!['get', 'post'].include(this.method)) {=0A=
      // simulate other verbs over post=0A=
      params['_method'] =3D this.method;=0A=
      this.method =3D 'post';=0A=
    }=0A=
=0A=
    this.parameters =3D params;=0A=
=0A=
    if (params =3D Object.toQueryString(params)) {=0A=
      // when GET, append parameters to URL=0A=
      if (this.method =3D=3D 'get')=0A=
        this.url +=3D (this.url.include('?') ? '&' : '?') + params;=0A=
      else if (/Konqueror|Safari|KHTML/.test(navigator.userAgent))=0A=
        params +=3D '&_=3D';=0A=
    }=0A=
=0A=
    try {=0A=
      var response =3D new Ajax.Response(this);=0A=
      if (this.options.onCreate) this.options.onCreate(response);=0A=
      Ajax.Responders.dispatch('onCreate', this, response);=0A=
=0A=
      this.transport.open(this.method.toUpperCase(), this.url,=0A=
        this.options.asynchronous);=0A=
=0A=
      if (this.options.asynchronous) =
this.respondToReadyState.bind(this).defer(1);=0A=
=0A=
      this.transport.onreadystatechange =3D =
this.onStateChange.bind(this);=0A=
      this.setRequestHeaders();=0A=
=0A=
      this.body =3D this.method =3D=3D 'post' ? (this.options.postBody =
|| params) : null;=0A=
      this.transport.send(this.body);=0A=
=0A=
      /* Force Firefox to handle ready state 4 for synchronous requests =
*/=0A=
      if (!this.options.asynchronous && this.transport.overrideMimeType)=0A=
        this.onStateChange();=0A=
=0A=
    }=0A=
    catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  onStateChange: function() {=0A=
    var readyState =3D this.transport.readyState;=0A=
    if (readyState > 1 && !((readyState =3D=3D 4) && this._complete))=0A=
      this.respondToReadyState(this.transport.readyState);=0A=
  },=0A=
=0A=
  setRequestHeaders: function() {=0A=
    var headers =3D {=0A=
      'X-Requested-With': 'XMLHttpRequest',=0A=
      'X-Prototype-Version': Prototype.Version,=0A=
      'Accept': 'text/javascript, text/html, application/xml, text/xml, =
*/*'=0A=
    };=0A=
=0A=
    if (this.method =3D=3D 'post') {=0A=
      headers['Content-type'] =3D this.options.contentType +=0A=
        (this.options.encoding ? '; charset=3D' + this.options.encoding =
: '');=0A=
=0A=
      /* Force "Connection: close" for older Mozilla browsers to work=0A=
       * around a bug where XMLHttpRequest sends an incorrect=0A=
       * Content-length header. See Mozilla Bugzilla #246651.=0A=
       */=0A=
      if (this.transport.overrideMimeType &&=0A=
          (navigator.userAgent.match(/Gecko\/(\d{4})/) || [0,2005])[1] < =
2005)=0A=
            headers['Connection'] =3D 'close';=0A=
    }=0A=
=0A=
    // user-defined headers=0A=
    if (typeof this.options.requestHeaders =3D=3D 'object') {=0A=
      var extras =3D this.options.requestHeaders;=0A=
=0A=
      if (Object.isFunction(extras.push))=0A=
        for (var i =3D 0, length =3D extras.length; i < length; i +=3D 2)=0A=
          headers[extras[i]] =3D extras[i+1];=0A=
      else=0A=
        $H(extras).each(function(pair) { headers[pair.key] =3D =
pair.value });=0A=
    }=0A=
=0A=
    for (var name in headers)=0A=
      this.transport.setRequestHeader(name, headers[name]);=0A=
  },=0A=
=0A=
  success: function() {=0A=
    var status =3D this.getStatus();=0A=
    return !status || (status >=3D 200 && status < 300);=0A=
  },=0A=
=0A=
  getStatus: function() {=0A=
    try {=0A=
      return this.transport.status || 0;=0A=
    } catch (e) { return 0 }=0A=
  },=0A=
=0A=
  respondToReadyState: function(readyState) {=0A=
    var state =3D Ajax.Request.Events[readyState], response =3D new =
Ajax.Response(this);=0A=
=0A=
    if (state =3D=3D 'Complete') {=0A=
      try {=0A=
        this._complete =3D true;=0A=
        (this.options['on' + response.status]=0A=
         || this.options['on' + (this.success() ? 'Success' : 'Failure')]=0A=
         || Prototype.emptyFunction)(response, response.headerJSON);=0A=
      } catch (e) {=0A=
        this.dispatchException(e);=0A=
      }=0A=
=0A=
      var contentType =3D response.getHeader('Content-type');=0A=
      if (this.options.evalJS =3D=3D 'force'=0A=
          || (this.options.evalJS && this.isSameOrigin() && contentType=0A=
          && =
contentType.match(/^\s*(text|application)\/(x-)?(java|ecma)script(;.*)?\s=
*$/i)))=0A=
        this.evalResponse();=0A=
    }=0A=
=0A=
    try {=0A=
      (this.options['on' + state] || Prototype.emptyFunction)(response, =
response.headerJSON);=0A=
      Ajax.Responders.dispatch('on' + state, this, response, =
response.headerJSON);=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
=0A=
    if (state =3D=3D 'Complete') {=0A=
      // avoid memory leak in MSIE: clean up=0A=
      this.transport.onreadystatechange =3D Prototype.emptyFunction;=0A=
    }=0A=
  },=0A=
=0A=
  isSameOrigin: function() {=0A=
    var m =3D this.url.match(/^\s*https?:\/\/[^\/]*/);=0A=
    return !m || (m[0] =3D=3D =
'#{protocol}//#{domain}#{port}'.interpolate({=0A=
      protocol: location.protocol,=0A=
      domain: document.domain,=0A=
      port: location.port ? ':' + location.port : ''=0A=
    }));=0A=
  },=0A=
=0A=
  getHeader: function(name) {=0A=
    try {=0A=
      return this.transport.getResponseHeader(name) || null;=0A=
    } catch (e) { return null }=0A=
  },=0A=
=0A=
  evalResponse: function() {=0A=
    try {=0A=
      return eval((this.transport.responseText || '').unfilterJSON());=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  dispatchException: function(exception) {=0A=
    (this.options.onException || Prototype.emptyFunction)(this, =
exception);=0A=
    Ajax.Responders.dispatch('onException', this, exception);=0A=
  }=0A=
});=0A=
=0A=
Ajax.Request.Events =3D=0A=
  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];=0A=
=0A=
Ajax.Response =3D Class.create({=0A=
  initialize: function(request){=0A=
    this.request =3D request;=0A=
    var transport  =3D this.transport  =3D request.transport,=0A=
        readyState =3D this.readyState =3D transport.readyState;=0A=
=0A=
    if((readyState > 2 && !Prototype.Browser.IE) || readyState =3D=3D 4) =
{=0A=
      this.status       =3D this.getStatus();=0A=
      this.statusText   =3D this.getStatusText();=0A=
      this.responseText =3D String.interpret(transport.responseText);=0A=
      this.headerJSON   =3D this._getHeaderJSON();=0A=
    }=0A=
=0A=
    if(readyState =3D=3D 4) {=0A=
      var xml =3D transport.responseXML;=0A=
      this.responseXML  =3D Object.isUndefined(xml) ? null : xml;=0A=
      this.responseJSON =3D this._getResponseJSON();=0A=
    }=0A=
  },=0A=
=0A=
  status:      0,=0A=
  statusText: '',=0A=
=0A=
  getStatus: Ajax.Request.prototype.getStatus,=0A=
=0A=
  getStatusText: function() {=0A=
    try {=0A=
      return this.transport.statusText || '';=0A=
    } catch (e) { return '' }=0A=
  },=0A=
=0A=
  getHeader: Ajax.Request.prototype.getHeader,=0A=
=0A=
  getAllHeaders: function() {=0A=
    try {=0A=
      return this.getAllResponseHeaders();=0A=
    } catch (e) { return null }=0A=
  },=0A=
=0A=
  getResponseHeader: function(name) {=0A=
    return this.transport.getResponseHeader(name);=0A=
  },=0A=
=0A=
  getAllResponseHeaders: function() {=0A=
    return this.transport.getAllResponseHeaders();=0A=
  },=0A=
=0A=
  _getHeaderJSON: function() {=0A=
    var json =3D this.getHeader('X-JSON');=0A=
    if (!json) return null;=0A=
    json =3D decodeURIComponent(escape(json));=0A=
    try {=0A=
      return json.evalJSON(this.request.options.sanitizeJSON ||=0A=
        !this.request.isSameOrigin());=0A=
    } catch (e) {=0A=
      this.request.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  _getResponseJSON: function() {=0A=
    var options =3D this.request.options;=0A=
    if (!options.evalJSON || (options.evalJSON !=3D 'force' &&=0A=
      !(this.getHeader('Content-type') || =
'').include('application/json')) ||=0A=
        this.responseText.blank())=0A=
          return null;=0A=
    try {=0A=
      return this.responseText.evalJSON(options.sanitizeJSON ||=0A=
        !this.request.isSameOrigin());=0A=
    } catch (e) {=0A=
      this.request.dispatchException(e);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Ajax.Updater =3D Class.create(Ajax.Request, {=0A=
  initialize: function($super, container, url, options) {=0A=
    this.container =3D {=0A=
      success: (container.success || container),=0A=
      failure: (container.failure || (container.success ? null : =
container))=0A=
    };=0A=
=0A=
    options =3D Object.clone(options);=0A=
    var onComplete =3D options.onComplete;=0A=
    options.onComplete =3D (function(response, json) {=0A=
      this.updateContent(response.responseText);=0A=
      if (Object.isFunction(onComplete)) onComplete(response, json);=0A=
    }).bind(this);=0A=
=0A=
    $super(url, options);=0A=
  },=0A=
=0A=
  updateContent: function(responseText) {=0A=
    var receiver =3D this.container[this.success() ? 'success' : =
'failure'],=0A=
        options =3D this.options;=0A=
=0A=
    if (!options.evalScripts) responseText =3D =
responseText.stripScripts();=0A=
=0A=
    if (receiver =3D $(receiver)) {=0A=
      if (options.insertion) {=0A=
        if (Object.isString(options.insertion)) {=0A=
          var insertion =3D { }; insertion[options.insertion] =3D =
responseText;=0A=
          receiver.insert(insertion);=0A=
        }=0A=
        else options.insertion(receiver, responseText);=0A=
      }=0A=
      else receiver.update(responseText);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Ajax.PeriodicalUpdater =3D Class.create(Ajax.Base, {=0A=
  initialize: function($super, container, url, options) {=0A=
    $super(options);=0A=
    this.onComplete =3D this.options.onComplete;=0A=
=0A=
    this.frequency =3D (this.options.frequency || 2);=0A=
    this.decay =3D (this.options.decay || 1);=0A=
=0A=
    this.updater =3D { };=0A=
    this.container =3D container;=0A=
    this.url =3D url;=0A=
=0A=
    this.start();=0A=
  },=0A=
=0A=
  start: function() {=0A=
    this.options.onComplete =3D this.updateComplete.bind(this);=0A=
    this.onTimerEvent();=0A=
  },=0A=
=0A=
  stop: function() {=0A=
    this.updater.options.onComplete =3D undefined;=0A=
    clearTimeout(this.timer);=0A=
    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);=0A=
  },=0A=
=0A=
  updateComplete: function(response) {=0A=
    if (this.options.decay) {=0A=
      this.decay =3D (response.responseText =3D=3D this.lastText ?=0A=
        this.decay * this.options.decay : 1);=0A=
=0A=
      this.lastText =3D response.responseText;=0A=
    }=0A=
    this.timer =3D this.onTimerEvent.bind(this).delay(this.decay * =
this.frequency);=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    this.updater =3D new Ajax.Updater(this.container, this.url, =
this.options);=0A=
  }=0A=
});=0A=
function $(element) {=0A=
  if (arguments.length > 1) {=0A=
    for (var i =3D 0, elements =3D [], length =3D arguments.length; i < =
length; i++)=0A=
      elements.push($(arguments[i]));=0A=
    return elements;=0A=
  }=0A=
  if (Object.isString(element))=0A=
    element =3D document.getElementById(element);=0A=
  return Element.extend(element);=0A=
}=0A=
=0A=
if (Prototype.BrowserFeatures.XPath) {=0A=
  document._getElementsByXPath =3D function(expression, parentElement) {=0A=
    var results =3D [];=0A=
    var query =3D document.evaluate(expression, $(parentElement) || =
document,=0A=
      null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);=0A=
    for (var i =3D 0, length =3D query.snapshotLength; i < length; i++)=0A=
      results.push(Element.extend(query.snapshotItem(i)));=0A=
    return results;=0A=
  };=0A=
}=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
if (!window.Node) var Node =3D { };=0A=
=0A=
if (!Node.ELEMENT_NODE) {=0A=
  // DOM level 2 ECMAScript Language Binding=0A=
  Object.extend(Node, {=0A=
    ELEMENT_NODE: 1,=0A=
    ATTRIBUTE_NODE: 2,=0A=
    TEXT_NODE: 3,=0A=
    CDATA_SECTION_NODE: 4,=0A=
    ENTITY_REFERENCE_NODE: 5,=0A=
    ENTITY_NODE: 6,=0A=
    PROCESSING_INSTRUCTION_NODE: 7,=0A=
    COMMENT_NODE: 8,=0A=
    DOCUMENT_NODE: 9,=0A=
    DOCUMENT_TYPE_NODE: 10,=0A=
    DOCUMENT_FRAGMENT_NODE: 11,=0A=
    NOTATION_NODE: 12=0A=
  });=0A=
}=0A=
=0A=
(function() {=0A=
  var element =3D this.Element;=0A=
  this.Element =3D function(tagName, attributes) {=0A=
    attributes =3D attributes || { };=0A=
    tagName =3D tagName.toLowerCase();=0A=
    var cache =3D Element.cache;=0A=
    if (Prototype.Browser.IE && attributes.name) {=0A=
      tagName =3D '<' + tagName + ' name=3D"' + attributes.name + '">';=0A=
      delete attributes.name;=0A=
      return Element.writeAttribute(document.createElement(tagName), =
attributes);=0A=
    }=0A=
    if (!cache[tagName]) cache[tagName] =3D =
Element.extend(document.createElement(tagName));=0A=
    return Element.writeAttribute(cache[tagName].cloneNode(false), =
attributes);=0A=
  };=0A=
  Object.extend(this.Element, element || { });=0A=
}).call(window);=0A=
=0A=
Element.cache =3D { };=0A=
=0A=
Element.Methods =3D {=0A=
  visible: function(element) {=0A=
    return $(element).style.display !=3D 'none';=0A=
  },=0A=
=0A=
  toggle: function(element) {=0A=
    element =3D $(element);=0A=
    Element[Element.visible(element) ? 'hide' : 'show'](element);=0A=
    return element;=0A=
  },=0A=
=0A=
  hide: function(element) {=0A=
    $(element).style.display =3D 'none';=0A=
    return element;=0A=
  },=0A=
=0A=
  show: function(element) {=0A=
    $(element).style.display =3D '';=0A=
    return element;=0A=
  },=0A=
=0A=
  remove: function(element) {=0A=
    element =3D $(element);=0A=
    element.parentNode.removeChild(element);=0A=
    return element;=0A=
  },=0A=
=0A=
  update: function(element, content) {=0A=
    element =3D $(element);=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) return =
element.update().insert(content);=0A=
    content =3D Object.toHTML(content);=0A=
    element.innerHTML =3D content.stripScripts();=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  },=0A=
=0A=
  replace: function(element, content) {=0A=
    element =3D $(element);=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    else if (!Object.isElement(content)) {=0A=
      content =3D Object.toHTML(content);=0A=
      var range =3D element.ownerDocument.createRange();=0A=
      range.selectNode(element);=0A=
      content.evalScripts.bind(content).defer();=0A=
      content =3D range.createContextualFragment(content.stripScripts());=0A=
    }=0A=
    element.parentNode.replaceChild(content, element);=0A=
    return element;=0A=
  },=0A=
=0A=
  insert: function(element, insertions) {=0A=
    element =3D $(element);=0A=
=0A=
    if (Object.isString(insertions) || Object.isNumber(insertions) ||=0A=
        Object.isElement(insertions) || (insertions && =
(insertions.toElement || insertions.toHTML)))=0A=
          insertions =3D {bottom:insertions};=0A=
=0A=
    var content, insert, tagName, childNodes;=0A=
=0A=
    for (var position in insertions) {=0A=
      content  =3D insertions[position];=0A=
      position =3D position.toLowerCase();=0A=
      insert =3D Element._insertionTranslations[position];=0A=
=0A=
      if (content && content.toElement) content =3D content.toElement();=0A=
      if (Object.isElement(content)) {=0A=
        insert(element, content);=0A=
        continue;=0A=
      }=0A=
=0A=
      content =3D Object.toHTML(content);=0A=
=0A=
      tagName =3D ((position =3D=3D 'before' || position =3D=3D 'after')=0A=
        ? element.parentNode : element).tagName.toUpperCase();=0A=
=0A=
      childNodes =3D Element._getContentFromAnonymousElement(tagName, =
content.stripScripts());=0A=
=0A=
      if (position =3D=3D 'top' || position =3D=3D 'after') =
childNodes.reverse();=0A=
      childNodes.each(insert.curry(element));=0A=
=0A=
      content.evalScripts.bind(content).defer();=0A=
    }=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  wrap: function(element, wrapper, attributes) {=0A=
    element =3D $(element);=0A=
    if (Object.isElement(wrapper))=0A=
      $(wrapper).writeAttribute(attributes || { });=0A=
    else if (Object.isString(wrapper)) wrapper =3D new Element(wrapper, =
attributes);=0A=
    else wrapper =3D new Element('div', wrapper);=0A=
    if (element.parentNode)=0A=
      element.parentNode.replaceChild(wrapper, element);=0A=
    wrapper.appendChild(element);=0A=
    return wrapper;=0A=
  },=0A=
=0A=
  inspect: function(element) {=0A=
    element =3D $(element);=0A=
    var result =3D '<' + element.tagName.toLowerCase();=0A=
    $H({'id': 'id', 'className': 'class'}).each(function(pair) {=0A=
      var property =3D pair.first(), attribute =3D pair.last();=0A=
      var value =3D (element[property] || '').toString();=0A=
      if (value) result +=3D ' ' + attribute + '=3D' + =
value.inspect(true);=0A=
    });=0A=
    return result + '>';=0A=
  },=0A=
=0A=
  recursivelyCollect: function(element, property) {=0A=
    element =3D $(element);=0A=
    var elements =3D [];=0A=
    while (element =3D element[property])=0A=
      if (element.nodeType =3D=3D 1)=0A=
        elements.push(Element.extend(element));=0A=
    return elements;=0A=
  },=0A=
=0A=
  ancestors: function(element) {=0A=
    return $(element).recursivelyCollect('parentNode');=0A=
  },=0A=
=0A=
  descendants: function(element) {=0A=
    return $(element).select("*");=0A=
  },=0A=
=0A=
  firstDescendant: function(element) {=0A=
    element =3D $(element).firstChild;=0A=
    while (element && element.nodeType !=3D 1) element =3D =
element.nextSibling;=0A=
    return $(element);=0A=
  },=0A=
=0A=
  immediateDescendants: function(element) {=0A=
    if (!(element =3D $(element).firstChild)) return [];=0A=
    while (element && element.nodeType !=3D 1) element =3D =
element.nextSibling;=0A=
    if (element) return [element].concat($(element).nextSiblings());=0A=
    return [];=0A=
  },=0A=
=0A=
  previousSiblings: function(element) {=0A=
    return $(element).recursivelyCollect('previousSibling');=0A=
  },=0A=
=0A=
  nextSiblings: function(element) {=0A=
    return $(element).recursivelyCollect('nextSibling');=0A=
  },=0A=
=0A=
  siblings: function(element) {=0A=
    element =3D $(element);=0A=
    return =
element.previousSiblings().reverse().concat(element.nextSiblings());=0A=
  },=0A=
=0A=
  match: function(element, selector) {=0A=
    if (Object.isString(selector))=0A=
      selector =3D new Selector(selector);=0A=
    return selector.match($(element));=0A=
  },=0A=
=0A=
  up: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return $(element.parentNode);=0A=
    var ancestors =3D element.ancestors();=0A=
    return Object.isNumber(expression) ? ancestors[expression] :=0A=
      Selector.findElement(ancestors, expression, index);=0A=
  },=0A=
=0A=
  down: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return element.firstDescendant();=0A=
    return Object.isNumber(expression) ? =
element.descendants()[expression] :=0A=
      element.select(expression)[index || 0];=0A=
  },=0A=
=0A=
  previous: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
$(Selector.handlers.previousElementSibling(element));=0A=
    var previousSiblings =3D element.previousSiblings();=0A=
    return Object.isNumber(expression) ? previousSiblings[expression] :=0A=
      Selector.findElement(previousSiblings, expression, index);=0A=
  },=0A=
=0A=
  next: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
$(Selector.handlers.nextElementSibling(element));=0A=
    var nextSiblings =3D element.nextSiblings();=0A=
    return Object.isNumber(expression) ? nextSiblings[expression] :=0A=
      Selector.findElement(nextSiblings, expression, index);=0A=
  },=0A=
=0A=
  select: function() {=0A=
    var args =3D $A(arguments), element =3D $(args.shift());=0A=
    return Selector.findChildElements(element, args);=0A=
  },=0A=
=0A=
  adjacent: function() {=0A=
    var args =3D $A(arguments), element =3D $(args.shift());=0A=
    return Selector.findChildElements(element.parentNode, =
args).without(element);=0A=
  },=0A=
=0A=
  identify: function(element) {=0A=
    element =3D $(element);=0A=
    var id =3D element.readAttribute('id'), self =3D arguments.callee;=0A=
    if (id) return id;=0A=
    do { id =3D 'anonymous_element_' + self.counter++ } while ($(id));=0A=
    element.writeAttribute('id', id);=0A=
    return id;=0A=
  },=0A=
=0A=
  readAttribute: function(element, name) {=0A=
    element =3D $(element);=0A=
    if (Prototype.Browser.IE) {=0A=
      var t =3D Element._attributeTranslations.read;=0A=
      if (t.values[name]) return t.values[name](element, name);=0A=
      if (t.names[name]) name =3D t.names[name];=0A=
      if (name.include(':')) {=0A=
        return (!element.attributes || !element.attributes[name]) ? null =
:=0A=
         element.attributes[name].value;=0A=
      }=0A=
    }=0A=
    return element.getAttribute(name);=0A=
  },=0A=
=0A=
  writeAttribute: function(element, name, value) {=0A=
    element =3D $(element);=0A=
    var attributes =3D { }, t =3D Element._attributeTranslations.write;=0A=
=0A=
    if (typeof name =3D=3D 'object') attributes =3D name;=0A=
    else attributes[name] =3D Object.isUndefined(value) ? true : value;=0A=
=0A=
    for (var attr in attributes) {=0A=
      name =3D t.names[attr] || attr;=0A=
      value =3D attributes[attr];=0A=
      if (t.values[attr]) name =3D t.values[attr](element, value);=0A=
      if (value =3D=3D=3D false || value =3D=3D=3D null)=0A=
        element.removeAttribute(name);=0A=
      else if (value =3D=3D=3D true)=0A=
        element.setAttribute(name, name);=0A=
      else element.setAttribute(name, value);=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  getHeight: function(element) {=0A=
    return $(element).getDimensions().height;=0A=
  },=0A=
=0A=
  getWidth: function(element) {=0A=
    return $(element).getDimensions().width;=0A=
  },=0A=
=0A=
  classNames: function(element) {=0A=
    return new Element.ClassNames(element);=0A=
  },=0A=
=0A=
  hasClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    var elementClassName =3D element.className;=0A=
    return (elementClassName.length > 0 && (elementClassName =3D=3D =
className ||=0A=
      new RegExp("(^|\\s)" + className + =
"(\\s|$)").test(elementClassName)));=0A=
  },=0A=
=0A=
  addClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    if (!element.hasClassName(className))=0A=
      element.className +=3D (element.className ? ' ' : '') + className;=0A=
    return element;=0A=
  },=0A=
=0A=
  removeClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    element.className =3D element.className.replace(=0A=
      new RegExp("(^|\\s+)" + className + "(\\s+|$)"), ' ').strip();=0A=
    return element;=0A=
  },=0A=
=0A=
  toggleClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    return element[element.hasClassName(className) ?=0A=
      'removeClassName' : 'addClassName'](className);=0A=
  },=0A=
=0A=
  // removes whitespace-only text node children=0A=
  cleanWhitespace: function(element) {=0A=
    element =3D $(element);=0A=
    var node =3D element.firstChild;=0A=
    while (node) {=0A=
      var nextNode =3D node.nextSibling;=0A=
      if (node.nodeType =3D=3D 3 && !/\S/.test(node.nodeValue))=0A=
        element.removeChild(node);=0A=
      node =3D nextNode;=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  empty: function(element) {=0A=
    return $(element).innerHTML.blank();=0A=
  },=0A=
=0A=
  descendantOf: function(element, ancestor) {=0A=
    element =3D $(element), ancestor =3D $(ancestor);=0A=
    var originalAncestor =3D ancestor;=0A=
=0A=
    if (element.compareDocumentPosition)=0A=
      return (element.compareDocumentPosition(ancestor) & 8) =3D=3D=3D 8;=0A=
=0A=
    if (element.sourceIndex && !Prototype.Browser.Opera) {=0A=
      var e =3D element.sourceIndex, a =3D ancestor.sourceIndex,=0A=
       nextAncestor =3D ancestor.nextSibling;=0A=
      if (!nextAncestor) {=0A=
        do { ancestor =3D ancestor.parentNode; }=0A=
        while (!(nextAncestor =3D ancestor.nextSibling) && =
ancestor.parentNode);=0A=
      }=0A=
      if (nextAncestor && nextAncestor.sourceIndex)=0A=
       return (e > a && e < nextAncestor.sourceIndex);=0A=
    }=0A=
=0A=
    while (element =3D element.parentNode)=0A=
      if (element =3D=3D originalAncestor) return true;=0A=
    return false;=0A=
  },=0A=
=0A=
  scrollTo: function(element) {=0A=
    element =3D $(element);=0A=
    var pos =3D element.cumulativeOffset();=0A=
    window.scrollTo(pos[0], pos[1]);=0A=
    return element;=0A=
  },=0A=
=0A=
  getStyle: function(element, style) {=0A=
    element =3D $(element);=0A=
    style =3D style =3D=3D 'float' ? 'cssFloat' : style.camelize();=0A=
    var value =3D element.style[style];=0A=
    if (!value) {=0A=
      var css =3D document.defaultView.getComputedStyle(element, null);=0A=
      value =3D css ? css[style] : null;=0A=
    }=0A=
    if (style =3D=3D 'opacity') return value ? parseFloat(value) : 1.0;=0A=
    return value =3D=3D 'auto' ? null : value;=0A=
  },=0A=
=0A=
  getOpacity: function(element) {=0A=
    return $(element).getStyle('opacity');=0A=
  },=0A=
=0A=
  setStyle: function(element, styles) {=0A=
    element =3D $(element);=0A=
    var elementStyle =3D element.style, match;=0A=
    if (Object.isString(styles)) {=0A=
      element.style.cssText +=3D ';' + styles;=0A=
      return styles.include('opacity') ?=0A=
        element.setOpacity(styles.match(/opacity:\s*(\d?\.?\d*)/)[1]) : =
element;=0A=
    }=0A=
    for (var property in styles)=0A=
      if (property =3D=3D 'opacity') =
element.setOpacity(styles[property]);=0A=
      else=0A=
        elementStyle[(property =3D=3D 'float' || property =3D=3D =
'cssFloat') ?=0A=
          (Object.isUndefined(elementStyle.styleFloat) ? 'cssFloat' : =
'styleFloat') :=0A=
            property] =3D styles[property];=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  setOpacity: function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? =
'' :=0A=
      (value < 0.00001) ? 0 : value;=0A=
    return element;=0A=
  },=0A=
=0A=
  getDimensions: function(element) {=0A=
    element =3D $(element);=0A=
    var display =3D $(element).getStyle('display');=0A=
    if (display !=3D 'none' && display !=3D null) // Safari bug=0A=
      return {width: element.offsetWidth, height: element.offsetHeight};=0A=
=0A=
    // All *Width and *Height properties give 0 on elements with display =
none,=0A=
    // so enable the element temporarily=0A=
    var els =3D element.style;=0A=
    var originalVisibility =3D els.visibility;=0A=
    var originalPosition =3D els.position;=0A=
    var originalDisplay =3D els.display;=0A=
    els.visibility =3D 'hidden';=0A=
    els.position =3D 'absolute';=0A=
    els.display =3D 'block';=0A=
    var originalWidth =3D element.clientWidth;=0A=
    var originalHeight =3D element.clientHeight;=0A=
    els.display =3D originalDisplay;=0A=
    els.position =3D originalPosition;=0A=
    els.visibility =3D originalVisibility;=0A=
    return {width: originalWidth, height: originalHeight};=0A=
  },=0A=
=0A=
  makePositioned: function(element) {=0A=
    element =3D $(element);=0A=
    var pos =3D Element.getStyle(element, 'position');=0A=
    if (pos =3D=3D 'static' || !pos) {=0A=
      element._madePositioned =3D true;=0A=
      element.style.position =3D 'relative';=0A=
      // Opera returns the offset relative to the positioning context, =
when an=0A=
      // element is position relative but top and left have not been =
defined=0A=
      if (window.opera) {=0A=
        element.style.top =3D 0;=0A=
        element.style.left =3D 0;=0A=
      }=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  undoPositioned: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._madePositioned) {=0A=
      element._madePositioned =3D undefined;=0A=
      element.style.position =3D=0A=
        element.style.top =3D=0A=
        element.style.left =3D=0A=
        element.style.bottom =3D=0A=
        element.style.right =3D '';=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  makeClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._overflow) return element;=0A=
    element._overflow =3D Element.getStyle(element, 'overflow') || =
'auto';=0A=
    if (element._overflow !=3D=3D 'hidden')=0A=
      element.style.overflow =3D 'hidden';=0A=
    return element;=0A=
  },=0A=
=0A=
  undoClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (!element._overflow) return element;=0A=
    element.style.overflow =3D element._overflow =3D=3D 'auto' ? '' : =
element._overflow;=0A=
    element._overflow =3D null;=0A=
    return element;=0A=
  },=0A=
=0A=
  cumulativeOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  positionedOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
      if (element) {=0A=
        if (element.tagName =3D=3D 'BODY') break;=0A=
        var p =3D Element.getStyle(element, 'position');=0A=
        if (p !=3D=3D 'static') break;=0A=
      }=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  absolutize: function(element) {=0A=
    element =3D $(element);=0A=
    if (element.getStyle('position') =3D=3D 'absolute') return;=0A=
    // Position.prepare(); // To be done manually by Scripty when it =
needs it.=0A=
=0A=
    var offsets =3D element.positionedOffset();=0A=
    var top     =3D offsets[1];=0A=
    var left    =3D offsets[0];=0A=
    var width   =3D element.clientWidth;=0A=
    var height  =3D element.clientHeight;=0A=
=0A=
    element._originalLeft   =3D left - parseFloat(element.style.left  || =
0);=0A=
    element._originalTop    =3D top  - parseFloat(element.style.top || =
0);=0A=
    element._originalWidth  =3D element.style.width;=0A=
    element._originalHeight =3D element.style.height;=0A=
=0A=
    element.style.position =3D 'absolute';=0A=
    element.style.top    =3D top + 'px';=0A=
    element.style.left   =3D left + 'px';=0A=
    element.style.width  =3D width + 'px';=0A=
    element.style.height =3D height + 'px';=0A=
    return element;=0A=
  },=0A=
=0A=
  relativize: function(element) {=0A=
    element =3D $(element);=0A=
    if (element.getStyle('position') =3D=3D 'relative') return;=0A=
    // Position.prepare(); // To be done manually by Scripty when it =
needs it.=0A=
=0A=
    element.style.position =3D 'relative';=0A=
    var top  =3D parseFloat(element.style.top  || 0) - =
(element._originalTop || 0);=0A=
    var left =3D parseFloat(element.style.left || 0) - =
(element._originalLeft || 0);=0A=
=0A=
    element.style.top    =3D top + 'px';=0A=
    element.style.left   =3D left + 'px';=0A=
    element.style.height =3D element._originalHeight;=0A=
    element.style.width  =3D element._originalWidth;=0A=
    return element;=0A=
  },=0A=
=0A=
  cumulativeScrollOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.scrollTop  || 0;=0A=
      valueL +=3D element.scrollLeft || 0;=0A=
      element =3D element.parentNode;=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  getOffsetParent: function(element) {=0A=
    if (element.offsetParent) return $(element.offsetParent);=0A=
    if (element =3D=3D document.body) return $(element);=0A=
=0A=
    while ((element =3D element.parentNode) && element !=3D =
document.body)=0A=
      if (Element.getStyle(element, 'position') !=3D 'static')=0A=
        return $(element);=0A=
=0A=
    return $(document.body);=0A=
  },=0A=
=0A=
  viewportOffset: function(forElement) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
=0A=
    var element =3D forElement;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
=0A=
      // Safari fix=0A=
      if (element.offsetParent =3D=3D document.body &&=0A=
        Element.getStyle(element, 'position') =3D=3D 'absolute') break;=0A=
=0A=
    } while (element =3D element.offsetParent);=0A=
=0A=
    element =3D forElement;=0A=
    do {=0A=
      if (!Prototype.Browser.Opera || element.tagName =3D=3D 'BODY') {=0A=
        valueT -=3D element.scrollTop  || 0;=0A=
        valueL -=3D element.scrollLeft || 0;=0A=
      }=0A=
    } while (element =3D element.parentNode);=0A=
=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  clonePosition: function(element, source) {=0A=
    var options =3D Object.extend({=0A=
      setLeft:    true,=0A=
      setTop:     true,=0A=
      setWidth:   true,=0A=
      setHeight:  true,=0A=
      offsetTop:  0,=0A=
      offsetLeft: 0=0A=
    }, arguments[2] || { });=0A=
=0A=
    // find page position of source=0A=
    source =3D $(source);=0A=
    var p =3D source.viewportOffset();=0A=
=0A=
    // find coordinate system to use=0A=
    element =3D $(element);=0A=
    var delta =3D [0, 0];=0A=
    var parent =3D null;=0A=
    // delta [0,0] will do fine with position: fixed elements,=0A=
    // position:absolute needs offsetParent deltas=0A=
    if (Element.getStyle(element, 'position') =3D=3D 'absolute') {=0A=
      parent =3D element.getOffsetParent();=0A=
      delta =3D parent.viewportOffset();=0A=
    }=0A=
=0A=
    // correct by body offsets (fixes Safari)=0A=
    if (parent =3D=3D document.body) {=0A=
      delta[0] -=3D document.body.offsetLeft;=0A=
      delta[1] -=3D document.body.offsetTop;=0A=
    }=0A=
=0A=
    // set position=0A=
    if (options.setLeft)   element.style.left  =3D (p[0] - delta[0] + =
options.offsetLeft) + 'px';=0A=
    if (options.setTop)    element.style.top   =3D (p[1] - delta[1] + =
options.offsetTop) + 'px';=0A=
    if (options.setWidth)  element.style.width =3D source.offsetWidth + =
'px';=0A=
    if (options.setHeight) element.style.height =3D source.offsetHeight =
+ 'px';=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
Element.Methods.identify.counter =3D 1;=0A=
=0A=
Object.extend(Element.Methods, {=0A=
  getElementsBySelector: Element.Methods.select,=0A=
  childElements: Element.Methods.immediateDescendants=0A=
});=0A=
=0A=
Element._attributeTranslations =3D {=0A=
  write: {=0A=
    names: {=0A=
      className: 'class',=0A=
      htmlFor:   'for'=0A=
    },=0A=
    values: { }=0A=
  }=0A=
};=0A=
=0A=
if (Prototype.Browser.Opera) {=0A=
  Element.Methods.getStyle =3D Element.Methods.getStyle.wrap(=0A=
    function(proceed, element, style) {=0A=
      switch (style) {=0A=
        case 'left': case 'top': case 'right': case 'bottom':=0A=
          if (proceed(element, 'position') =3D=3D=3D 'static') return =
null;=0A=
        case 'height': case 'width':=0A=
          // returns '0px' for hidden elements; we want it to return null=0A=
          if (!Element.visible(element)) return null;=0A=
=0A=
          // returns the border-box dimensions rather than the =
content-box=0A=
          // dimensions, so we subtract padding and borders from the =
value=0A=
          var dim =3D parseInt(proceed(element, style), 10);=0A=
=0A=
          if (dim !=3D=3D element['offset' + style.capitalize()])=0A=
            return dim + 'px';=0A=
=0A=
          var properties;=0A=
          if (style =3D=3D=3D 'height') {=0A=
            properties =3D ['border-top-width', 'padding-top',=0A=
             'padding-bottom', 'border-bottom-width'];=0A=
          }=0A=
          else {=0A=
            properties =3D ['border-left-width', 'padding-left',=0A=
             'padding-right', 'border-right-width'];=0A=
          }=0A=
          return properties.inject(dim, function(memo, property) {=0A=
            var val =3D proceed(element, property);=0A=
            return val =3D=3D=3D null ? memo : memo - parseInt(val, 10);=0A=
          }) + 'px';=0A=
        default: return proceed(element, style);=0A=
      }=0A=
    }=0A=
  );=0A=
=0A=
  Element.Methods.readAttribute =3D Element.Methods.readAttribute.wrap(=0A=
    function(proceed, element, attribute) {=0A=
      if (attribute =3D=3D=3D 'title') return element.title;=0A=
      return proceed(element, attribute);=0A=
    }=0A=
  );=0A=
}=0A=
=0A=
else if (Prototype.Browser.IE) {=0A=
  // IE doesn't report offsets correctly for static elements, so we =
change them=0A=
  // to "relative" to get the values, then change them back.=0A=
  Element.Methods.getOffsetParent =3D =
Element.Methods.getOffsetParent.wrap(=0A=
    function(proceed, element) {=0A=
      element =3D $(element);=0A=
      var position =3D element.getStyle('position');=0A=
      if (position !=3D=3D 'static') return proceed(element);=0A=
      element.setStyle({ position: 'relative' });=0A=
      var value =3D proceed(element);=0A=
      element.setStyle({ position: position });=0A=
      return value;=0A=
    }=0A=
  );=0A=
=0A=
  $w('positionedOffset viewportOffset').each(function(method) {=0A=
    Element.Methods[method] =3D Element.Methods[method].wrap(=0A=
      function(proceed, element) {=0A=
        element =3D $(element);=0A=
        var position =3D element.getStyle('position');=0A=
        if (position !=3D=3D 'static') return proceed(element);=0A=
        // Trigger hasLayout on the offset parent so that IE6 reports=0A=
        // accurate offsetTop and offsetLeft values for position: fixed.=0A=
        var offsetParent =3D element.getOffsetParent();=0A=
        if (offsetParent && offsetParent.getStyle('position') =3D=3D=3D =
'fixed')=0A=
          offsetParent.setStyle({ zoom: 1 });=0A=
        element.setStyle({ position: 'relative' });=0A=
        var value =3D proceed(element);=0A=
        element.setStyle({ position: position });=0A=
        return value;=0A=
      }=0A=
    );=0A=
  });=0A=
=0A=
  Element.Methods.getStyle =3D function(element, style) {=0A=
    element =3D $(element);=0A=
    style =3D (style =3D=3D 'float' || style =3D=3D 'cssFloat') ? =
'styleFloat' : style.camelize();=0A=
    var value =3D element.style[style];=0A=
    if (!value && element.currentStyle) value =3D =
element.currentStyle[style];=0A=
=0A=
    if (style =3D=3D 'opacity') {=0A=
      if (value =3D (element.getStyle('filter') || =
'').match(/alpha\(opacity=3D(.*)\)/))=0A=
        if (value[1]) return parseFloat(value[1]) / 100;=0A=
      return 1.0;=0A=
    }=0A=
=0A=
    if (value =3D=3D 'auto') {=0A=
      if ((style =3D=3D 'width' || style =3D=3D 'height') && =
(element.getStyle('display') !=3D 'none'))=0A=
        return element['offset' + style.capitalize()] + 'px';=0A=
      return null;=0A=
    }=0A=
    return value;=0A=
  };=0A=
=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    function stripAlpha(filter){=0A=
      return filter.replace(/alpha\([^\)]*\)/gi,'');=0A=
    }=0A=
    element =3D $(element);=0A=
    var currentStyle =3D element.currentStyle;=0A=
    if ((currentStyle && !currentStyle.hasLayout) ||=0A=
      (!currentStyle && element.style.zoom =3D=3D 'normal'))=0A=
        element.style.zoom =3D 1;=0A=
=0A=
    var filter =3D element.getStyle('filter'), style =3D element.style;=0A=
    if (value =3D=3D 1 || value =3D=3D=3D '') {=0A=
      (filter =3D stripAlpha(filter)) ?=0A=
        style.filter =3D filter : style.removeAttribute('filter');=0A=
      return element;=0A=
    } else if (value < 0.00001) value =3D 0;=0A=
    style.filter =3D stripAlpha(filter) +=0A=
      'alpha(opacity=3D' + (value * 100) + ')';=0A=
    return element;=0A=
  };=0A=
=0A=
  Element._attributeTranslations =3D {=0A=
    read: {=0A=
      names: {=0A=
        'class': 'className',=0A=
        'for':   'htmlFor'=0A=
      },=0A=
      values: {=0A=
        _getAttr: function(element, attribute) {=0A=
          return element.getAttribute(attribute, 2);=0A=
        },=0A=
        _getAttrNode: function(element, attribute) {=0A=
          var node =3D element.getAttributeNode(attribute);=0A=
          return node ? node.value : "";=0A=
        },=0A=
        _getEv: function(element, attribute) {=0A=
          attribute =3D element.getAttribute(attribute);=0A=
          return attribute ? attribute.toString().slice(23, -2) : null;=0A=
        },=0A=
        _flag: function(element, attribute) {=0A=
          return $(element).hasAttribute(attribute) ? attribute : null;=0A=
        },=0A=
        style: function(element) {=0A=
          return element.style.cssText.toLowerCase();=0A=
        },=0A=
        title: function(element) {=0A=
          return element.title;=0A=
        }=0A=
      }=0A=
    }=0A=
  };=0A=
=0A=
  Element._attributeTranslations.write =3D {=0A=
    names: Object.extend({=0A=
      cellpadding: 'cellPadding',=0A=
      cellspacing: 'cellSpacing'=0A=
    }, Element._attributeTranslations.read.names),=0A=
    values: {=0A=
      checked: function(element, value) {=0A=
        element.checked =3D !!value;=0A=
      },=0A=
=0A=
      style: function(element, value) {=0A=
        element.style.cssText =3D value ? value : '';=0A=
      }=0A=
    }=0A=
  };=0A=
=0A=
  Element._attributeTranslations.has =3D {};=0A=
=0A=
  $w('colSpan rowSpan vAlign dateTime accessKey tabIndex ' +=0A=
      'encType maxLength readOnly longDesc').each(function(attr) {=0A=
    Element._attributeTranslations.write.names[attr.toLowerCase()] =3D =
attr;=0A=
    Element._attributeTranslations.has[attr.toLowerCase()] =3D attr;=0A=
  });=0A=
=0A=
  (function(v) {=0A=
    Object.extend(v, {=0A=
      href:        v._getAttr,=0A=
      src:         v._getAttr,=0A=
      type:        v._getAttr,=0A=
      action:      v._getAttrNode,=0A=
      disabled:    v._flag,=0A=
      checked:     v._flag,=0A=
      readonly:    v._flag,=0A=
      multiple:    v._flag,=0A=
      onload:      v._getEv,=0A=
      onunload:    v._getEv,=0A=
      onclick:     v._getEv,=0A=
      ondblclick:  v._getEv,=0A=
      onmousedown: v._getEv,=0A=
      onmouseup:   v._getEv,=0A=
      onmouseover: v._getEv,=0A=
      onmousemove: v._getEv,=0A=
      onmouseout:  v._getEv,=0A=
      onfocus:     v._getEv,=0A=
      onblur:      v._getEv,=0A=
      onkeypress:  v._getEv,=0A=
      onkeydown:   v._getEv,=0A=
      onkeyup:     v._getEv,=0A=
      onsubmit:    v._getEv,=0A=
      onreset:     v._getEv,=0A=
      onselect:    v._getEv,=0A=
      onchange:    v._getEv=0A=
    });=0A=
  })(Element._attributeTranslations.read.values);=0A=
}=0A=
=0A=
else if (Prototype.Browser.Gecko && =
/rv:1\.8\.0/.test(navigator.userAgent)) {=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1) ? 0.999999 :=0A=
      (value =3D=3D=3D '') ? '' : (value < 0.00001) ? 0 : value;=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
else if (Prototype.Browser.WebKit) {=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? =
'' :=0A=
      (value < 0.00001) ? 0 : value;=0A=
=0A=
    if (value =3D=3D 1)=0A=
      if(element.tagName =3D=3D 'IMG' && element.width) {=0A=
        element.width++; element.width--;=0A=
      } else try {=0A=
        var n =3D document.createTextNode(' ');=0A=
        element.appendChild(n);=0A=
        element.removeChild(n);=0A=
      } catch (e) { }=0A=
=0A=
    return element;=0A=
  };=0A=
=0A=
  // Safari returns margins on body which is incorrect if the child is =
absolutely=0A=
  // positioned.  For performance reasons, redefine =
Element#cumulativeOffset for=0A=
  // KHTML/WebKit only.=0A=
  Element.Methods.cumulativeOffset =3D function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      if (element.offsetParent =3D=3D document.body)=0A=
        if (Element.getStyle(element, 'position') =3D=3D 'absolute') =
break;=0A=
=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  };=0A=
}=0A=
=0A=
if (Prototype.Browser.IE || Prototype.Browser.Opera) {=0A=
  // IE and Opera are missing .innerHTML support for TABLE-related and =
SELECT elements=0A=
  Element.Methods.update =3D function(element, content) {=0A=
    element =3D $(element);=0A=
=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) return =
element.update().insert(content);=0A=
=0A=
    content =3D Object.toHTML(content);=0A=
    var tagName =3D element.tagName.toUpperCase();=0A=
=0A=
    if (tagName in Element._insertionTranslations.tags) {=0A=
      $A(element.childNodes).each(function(node) { =
element.removeChild(node) });=0A=
      Element._getContentFromAnonymousElement(tagName, =
content.stripScripts())=0A=
        .each(function(node) { element.appendChild(node) });=0A=
    }=0A=
    else element.innerHTML =3D content.stripScripts();=0A=
=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
if ('outerHTML' in document.createElement('div')) {=0A=
  Element.Methods.replace =3D function(element, content) {=0A=
    element =3D $(element);=0A=
=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) {=0A=
      element.parentNode.replaceChild(content, element);=0A=
      return element;=0A=
    }=0A=
=0A=
    content =3D Object.toHTML(content);=0A=
    var parent =3D element.parentNode, tagName =3D =
parent.tagName.toUpperCase();=0A=
=0A=
    if (Element._insertionTranslations.tags[tagName]) {=0A=
      var nextSibling =3D element.next();=0A=
      var fragments =3D Element._getContentFromAnonymousElement(tagName, =
content.stripScripts());=0A=
      parent.removeChild(element);=0A=
      if (nextSibling)=0A=
        fragments.each(function(node) { parent.insertBefore(node, =
nextSibling) });=0A=
      else=0A=
        fragments.each(function(node) { parent.appendChild(node) });=0A=
    }=0A=
    else element.outerHTML =3D content.stripScripts();=0A=
=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
Element._returnOffset =3D function(l, t) {=0A=
  var result =3D [l, t];=0A=
  result.left =3D l;=0A=
  result.top =3D t;=0A=
  return result;=0A=
};=0A=
=0A=
Element._getContentFromAnonymousElement =3D function(tagName, html) {=0A=
  var div =3D new Element('div'), t =3D =
Element._insertionTranslations.tags[tagName];=0A=
  if (t) {=0A=
    div.innerHTML =3D t[0] + html + t[1];=0A=
    t[2].times(function() { div =3D div.firstChild });=0A=
  } else div.innerHTML =3D html;=0A=
  return $A(div.childNodes);=0A=
};=0A=
=0A=
Element._insertionTranslations =3D {=0A=
  before: function(element, node) {=0A=
    element.parentNode.insertBefore(node, element);=0A=
  },=0A=
  top: function(element, node) {=0A=
    element.insertBefore(node, element.firstChild);=0A=
  },=0A=
  bottom: function(element, node) {=0A=
    element.appendChild(node);=0A=
  },=0A=
  after: function(element, node) {=0A=
    element.parentNode.insertBefore(node, element.nextSibling);=0A=
  },=0A=
  tags: {=0A=
    TABLE:  ['<table>',                '</table>',                   1],=0A=
    TBODY:  ['<table><tbody>',         '</tbody></table>',           2],=0A=
    TR:     ['<table><tbody><tr>',     '</tr></tbody></table>',      3],=0A=
    TD:     ['<table><tbody><tr><td>', '</td></tr></tbody></table>', 4],=0A=
    SELECT: ['<select>',               '</select>',                  1]=0A=
  }=0A=
};=0A=
=0A=
(function() {=0A=
  Object.extend(this.tags, {=0A=
    THEAD: this.tags.TBODY,=0A=
    TFOOT: this.tags.TBODY,=0A=
    TH:    this.tags.TD=0A=
  });=0A=
}).call(Element._insertionTranslations);=0A=
=0A=
Element.Methods.Simulated =3D {=0A=
  hasAttribute: function(element, attribute) {=0A=
    attribute =3D Element._attributeTranslations.has[attribute] || =
attribute;=0A=
    var node =3D $(element).getAttributeNode(attribute);=0A=
    return node && node.specified;=0A=
  }=0A=
};=0A=
=0A=
Element.Methods.ByTag =3D { };=0A=
=0A=
Object.extend(Element, Element.Methods);=0A=
=0A=
if (!Prototype.BrowserFeatures.ElementExtensions &&=0A=
    document.createElement('div').__proto__) {=0A=
  window.HTMLElement =3D { };=0A=
  window.HTMLElement.prototype =3D =
document.createElement('div').__proto__;=0A=
  Prototype.BrowserFeatures.ElementExtensions =3D true;=0A=
}=0A=
=0A=
Element.extend =3D (function() {=0A=
  if (Prototype.BrowserFeatures.SpecificElementExtensions)=0A=
    return Prototype.K;=0A=
=0A=
  var Methods =3D { }, ByTag =3D Element.Methods.ByTag;=0A=
=0A=
  var extend =3D Object.extend(function(element) {=0A=
    if (!element || element._extendedByPrototype ||=0A=
        element.nodeType !=3D 1 || element =3D=3D window) return element;=0A=
=0A=
    var methods =3D Object.clone(Methods),=0A=
      tagName =3D element.tagName, property, value;=0A=
=0A=
    // extend methods for specific tags=0A=
    if (ByTag[tagName]) Object.extend(methods, ByTag[tagName]);=0A=
=0A=
    for (property in methods) {=0A=
      value =3D methods[property];=0A=
      if (Object.isFunction(value) && !(property in element))=0A=
        element[property] =3D value.methodize();=0A=
    }=0A=
=0A=
    element._extendedByPrototype =3D Prototype.emptyFunction;=0A=
    return element;=0A=
=0A=
  }, {=0A=
    refresh: function() {=0A=
      // extend methods for all tags (Safari doesn't need this)=0A=
      if (!Prototype.BrowserFeatures.ElementExtensions) {=0A=
        Object.extend(Methods, Element.Methods);=0A=
        Object.extend(Methods, Element.Methods.Simulated);=0A=
      }=0A=
    }=0A=
  });=0A=
=0A=
  extend.refresh();=0A=
  return extend;=0A=
})();=0A=
=0A=
Element.hasAttribute =3D function(element, attribute) {=0A=
  if (element.hasAttribute) return element.hasAttribute(attribute);=0A=
  return Element.Methods.Simulated.hasAttribute(element, attribute);=0A=
};=0A=
=0A=
Element.addMethods =3D function(methods) {=0A=
  var F =3D Prototype.BrowserFeatures, T =3D Element.Methods.ByTag;=0A=
=0A=
  if (!methods) {=0A=
    Object.extend(Form, Form.Methods);=0A=
    Object.extend(Form.Element, Form.Element.Methods);=0A=
    Object.extend(Element.Methods.ByTag, {=0A=
      "FORM":     Object.clone(Form.Methods),=0A=
      "INPUT":    Object.clone(Form.Element.Methods),=0A=
      "SELECT":   Object.clone(Form.Element.Methods),=0A=
      "TEXTAREA": Object.clone(Form.Element.Methods)=0A=
    });=0A=
  }=0A=
=0A=
  if (arguments.length =3D=3D 2) {=0A=
    var tagName =3D methods;=0A=
    methods =3D arguments[1];=0A=
  }=0A=
=0A=
  if (!tagName) Object.extend(Element.Methods, methods || { });=0A=
  else {=0A=
    if (Object.isArray(tagName)) tagName.each(extend);=0A=
    else extend(tagName);=0A=
  }=0A=
=0A=
  function extend(tagName) {=0A=
    tagName =3D tagName.toUpperCase();=0A=
    if (!Element.Methods.ByTag[tagName])=0A=
      Element.Methods.ByTag[tagName] =3D { };=0A=
    Object.extend(Element.Methods.ByTag[tagName], methods);=0A=
  }=0A=
=0A=
  function copy(methods, destination, onlyIfAbsent) {=0A=
    onlyIfAbsent =3D onlyIfAbsent || false;=0A=
    for (var property in methods) {=0A=
      var value =3D methods[property];=0A=
      if (!Object.isFunction(value)) continue;=0A=
      if (!onlyIfAbsent || !(property in destination))=0A=
        destination[property] =3D value.methodize();=0A=
    }=0A=
  }=0A=
=0A=
  function findDOMClass(tagName) {=0A=
    var klass;=0A=
    var trans =3D {=0A=
      "OPTGROUP": "OptGroup", "TEXTAREA": "TextArea", "P": "Paragraph",=0A=
      "FIELDSET": "FieldSet", "UL": "UList", "OL": "OList", "DL": =
"DList",=0A=
      "DIR": "Directory", "H1": "Heading", "H2": "Heading", "H3": =
"Heading",=0A=
      "H4": "Heading", "H5": "Heading", "H6": "Heading", "Q": "Quote",=0A=
      "INS": "Mod", "DEL": "Mod", "A": "Anchor", "IMG": "Image", =
"CAPTION":=0A=
      "TableCaption", "COL": "TableCol", "COLGROUP": "TableCol", "THEAD":=0A=
      "TableSection", "TFOOT": "TableSection", "TBODY": "TableSection", =
"TR":=0A=
      "TableRow", "TH": "TableCell", "TD": "TableCell", "FRAMESET":=0A=
      "FrameSet", "IFRAME": "IFrame"=0A=
    };=0A=
    if (trans[tagName]) klass =3D 'HTML' + trans[tagName] + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
    klass =3D 'HTML' + tagName + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
    klass =3D 'HTML' + tagName.capitalize() + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
=0A=
    window[klass] =3D { };=0A=
    window[klass].prototype =3D =
document.createElement(tagName).__proto__;=0A=
    return window[klass];=0A=
  }=0A=
=0A=
  if (F.ElementExtensions) {=0A=
    copy(Element.Methods, HTMLElement.prototype);=0A=
    copy(Element.Methods.Simulated, HTMLElement.prototype, true);=0A=
  }=0A=
=0A=
  if (F.SpecificElementExtensions) {=0A=
    for (var tag in Element.Methods.ByTag) {=0A=
      var klass =3D findDOMClass(tag);=0A=
      if (Object.isUndefined(klass)) continue;=0A=
      copy(T[tag], klass.prototype);=0A=
    }=0A=
  }=0A=
=0A=
  Object.extend(Element, Element.Methods);=0A=
  delete Element.ByTag;=0A=
=0A=
  if (Element.extend.refresh) Element.extend.refresh();=0A=
  Element.cache =3D { };=0A=
};=0A=
=0A=
document.viewport =3D {=0A=
  getDimensions: function() {=0A=
    var dimensions =3D { };=0A=
    var B =3D Prototype.Browser;=0A=
    $w('width height').each(function(d) {=0A=
      var D =3D d.capitalize();=0A=
      dimensions[d] =3D (B.WebKit && !document.evaluate) ? self['inner' =
+ D] :=0A=
        (B.Opera) ? document.body['client' + D] : =
document.documentElement['client' + D];=0A=
    });=0A=
    return dimensions;=0A=
  },=0A=
=0A=
  getWidth: function() {=0A=
    return this.getDimensions().width;=0A=
  },=0A=
=0A=
  getHeight: function() {=0A=
    return this.getDimensions().height;=0A=
  },=0A=
=0A=
  getScrollOffsets: function() {=0A=
    return Element._returnOffset(=0A=
      window.pageXOffset || document.documentElement.scrollLeft || =
document.body.scrollLeft,=0A=
      window.pageYOffset || document.documentElement.scrollTop || =
document.body.scrollTop);=0A=
  }=0A=
};=0A=
/* Portions of the Selector class are derived from Jack Slocum=E2=80=99s =
DomQuery,=0A=
 * part of YUI-Ext version 0.40, distributed under the terms of an =
MIT-style=0A=
 * license.  Please see http://www.yui-ext.com/ for more information. */=0A=
=0A=
var Selector =3D Class.create({=0A=
  initialize: function(expression) {=0A=
    this.expression =3D expression.strip();=0A=
    this.compileMatcher();=0A=
  },=0A=
=0A=
  shouldUseXPath: function() {=0A=
    if (!Prototype.BrowserFeatures.XPath) return false;=0A=
=0A=
    var e =3D this.expression;=0A=
=0A=
    // Safari 3 chokes on :*-of-type and :empty=0A=
    if (Prototype.Browser.WebKit &&=0A=
     (e.include("-of-type") || e.include(":empty")))=0A=
      return false;=0A=
=0A=
    // XPath can't do namespaced attributes, nor can it read=0A=
    // the "checked" property from DOM nodes=0A=
    if ((/(\[[\w-]*?:|:checked)/).test(this.expression))=0A=
      return false;=0A=
=0A=
    return true;=0A=
  },=0A=
=0A=
  compileMatcher: function() {=0A=
    if (this.shouldUseXPath())=0A=
      return this.compileXPathMatcher();=0A=
=0A=
    var e =3D this.expression, ps =3D Selector.patterns, h =3D =
Selector.handlers,=0A=
        c =3D Selector.criteria, le, p, m;=0A=
=0A=
    if (Selector._cache[e]) {=0A=
      this.matcher =3D Selector._cache[e];=0A=
      return;=0A=
    }=0A=
=0A=
    this.matcher =3D ["this.matcher =3D function(root) {",=0A=
                    "var r =3D root, h =3D Selector.handlers, c =3D =
false, n;"];=0A=
=0A=
    while (e && le !=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i in ps) {=0A=
        p =3D ps[i];=0A=
        if (m =3D e.match(p)) {=0A=
          this.matcher.push(Object.isFunction(c[i]) ? c[i](m) :=0A=
    	      new Template(c[i]).evaluate(m));=0A=
          e =3D e.replace(m[0], '');=0A=
          break;=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    this.matcher.push("return h.unique(n);\n}");=0A=
    eval(this.matcher.join('\n'));=0A=
    Selector._cache[this.expression] =3D this.matcher;=0A=
  },=0A=
=0A=
  compileXPathMatcher: function() {=0A=
    var e =3D this.expression, ps =3D Selector.patterns,=0A=
        x =3D Selector.xpath, le, m;=0A=
=0A=
    if (Selector._cache[e]) {=0A=
      this.xpath =3D Selector._cache[e]; return;=0A=
    }=0A=
=0A=
    this.matcher =3D ['.//*'];=0A=
    while (e && le !=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i in ps) {=0A=
        if (m =3D e.match(ps[i])) {=0A=
          this.matcher.push(Object.isFunction(x[i]) ? x[i](m) :=0A=
            new Template(x[i]).evaluate(m));=0A=
          e =3D e.replace(m[0], '');=0A=
          break;=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    this.xpath =3D this.matcher.join('');=0A=
    Selector._cache[this.expression] =3D this.xpath;=0A=
  },=0A=
=0A=
  findElements: function(root) {=0A=
    root =3D root || document;=0A=
    if (this.xpath) return document._getElementsByXPath(this.xpath, =
root);=0A=
    return this.matcher(root);=0A=
  },=0A=
=0A=
  match: function(element) {=0A=
    this.tokens =3D [];=0A=
=0A=
    var e =3D this.expression, ps =3D Selector.patterns, as =3D =
Selector.assertions;=0A=
    var le, p, m;=0A=
=0A=
    while (e && le !=3D=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i in ps) {=0A=
        p =3D ps[i];=0A=
        if (m =3D e.match(p)) {=0A=
          // use the Selector.assertions methods unless the selector=0A=
          // is too complex.=0A=
          if (as[i]) {=0A=
            this.tokens.push([i, Object.clone(m)]);=0A=
            e =3D e.replace(m[0], '');=0A=
          } else {=0A=
            // reluctantly do a document-wide search=0A=
            // and look for a match in the array=0A=
            return this.findElements(document).include(element);=0A=
          }=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    var match =3D true, name, matches;=0A=
    for (var i =3D 0, token; token =3D this.tokens[i]; i++) {=0A=
      name =3D token[0], matches =3D token[1];=0A=
      if (!Selector.assertions[name](element, matches)) {=0A=
        match =3D false; break;=0A=
      }=0A=
    }=0A=
=0A=
    return match;=0A=
  },=0A=
=0A=
  toString: function() {=0A=
    return this.expression;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return "#<Selector:" + this.expression.inspect() + ">";=0A=
  }=0A=
});=0A=
=0A=
Object.extend(Selector, {=0A=
  _cache: { },=0A=
=0A=
  xpath: {=0A=
    descendant:   "//*",=0A=
    child:        "/*",=0A=
    adjacent:     "/following-sibling::*[1]",=0A=
    laterSibling: '/following-sibling::*',=0A=
    tagName:      function(m) {=0A=
      if (m[1] =3D=3D '*') return '';=0A=
      return "[local-name()=3D'" + m[1].toLowerCase() +=0A=
             "' or local-name()=3D'" + m[1].toUpperCase() + "']";=0A=
    },=0A=
    className:    "[contains(concat(' ', @class, ' '), ' #{1} ')]",=0A=
    id:           "[@id=3D'#{1}']",=0A=
    attrPresence: function(m) {=0A=
      m[1] =3D m[1].toLowerCase();=0A=
      return new Template("[@#{1}]").evaluate(m);=0A=
    },=0A=
    attr: function(m) {=0A=
      m[1] =3D m[1].toLowerCase();=0A=
      m[3] =3D m[5] || m[6];=0A=
      return new Template(Selector.xpath.operators[m[2]]).evaluate(m);=0A=
    },=0A=
    pseudo: function(m) {=0A=
      var h =3D Selector.xpath.pseudos[m[1]];=0A=
      if (!h) return '';=0A=
      if (Object.isFunction(h)) return h(m);=0A=
      return new Template(Selector.xpath.pseudos[m[1]]).evaluate(m);=0A=
    },=0A=
    operators: {=0A=
      '=3D':  "[@#{1}=3D'#{3}']",=0A=
      '!=3D': "[@#{1}!=3D'#{3}']",=0A=
      '^=3D': "[starts-with(@#{1}, '#{3}')]",=0A=
      '$=3D': "[substring(@#{1}, (string-length(@#{1}) - =
string-length('#{3}') + 1))=3D'#{3}']",=0A=
      '*=3D': "[contains(@#{1}, '#{3}')]",=0A=
      '~=3D': "[contains(concat(' ', @#{1}, ' '), ' #{3} ')]",=0A=
      '|=3D': "[contains(concat('-', @#{1}, '-'), '-#{3}-')]"=0A=
    },=0A=
    pseudos: {=0A=
      'first-child': '[not(preceding-sibling::*)]',=0A=
      'last-child':  '[not(following-sibling::*)]',=0A=
      'only-child':  '[not(preceding-sibling::* or =
following-sibling::*)]',=0A=
      'empty':       "[count(*) =3D 0 and (count(text()) =3D 0 or =
translate(text(), ' \t\r\n', '') =3D '')]",=0A=
      'checked':     "[@checked]",=0A=
      'disabled':    "[@disabled]",=0A=
      'enabled':     "[not(@disabled)]",=0A=
      'not': function(m) {=0A=
        var e =3D m[6], p =3D Selector.patterns,=0A=
            x =3D Selector.xpath, le, v;=0A=
=0A=
        var exclusion =3D [];=0A=
        while (e && le !=3D e && (/\S/).test(e)) {=0A=
          le =3D e;=0A=
          for (var i in p) {=0A=
            if (m =3D e.match(p[i])) {=0A=
              v =3D Object.isFunction(x[i]) ? x[i](m) : new =
Template(x[i]).evaluate(m);=0A=
              exclusion.push("(" + v.substring(1, v.length - 1) + ")");=0A=
              e =3D e.replace(m[0], '');=0A=
              break;=0A=
            }=0A=
          }=0A=
        }=0A=
        return "[not(" + exclusion.join(" and ") + ")]";=0A=
      },=0A=
      'nth-child':      function(m) {=0A=
        return =
Selector.xpath.pseudos.nth("(count(./preceding-sibling::*) + 1) ", m);=0A=
      },=0A=
      'nth-last-child': function(m) {=0A=
        return =
Selector.xpath.pseudos.nth("(count(./following-sibling::*) + 1) ", m);=0A=
      },=0A=
      'nth-of-type':    function(m) {=0A=
        return Selector.xpath.pseudos.nth("position() ", m);=0A=
      },=0A=
      'nth-last-of-type': function(m) {=0A=
        return Selector.xpath.pseudos.nth("(last() + 1 - position()) ", =
m);=0A=
      },=0A=
      'first-of-type':  function(m) {=0A=
        m[6] =3D "1"; return Selector.xpath.pseudos['nth-of-type'](m);=0A=
      },=0A=
      'last-of-type':   function(m) {=0A=
        m[6] =3D "1"; return =
Selector.xpath.pseudos['nth-last-of-type'](m);=0A=
      },=0A=
      'only-of-type':   function(m) {=0A=
        var p =3D Selector.xpath.pseudos; return p['first-of-type'](m) + =
p['last-of-type'](m);=0A=
      },=0A=
      nth: function(fragment, m) {=0A=
        var mm, formula =3D m[6], predicate;=0A=
        if (formula =3D=3D 'even') formula =3D '2n+0';=0A=
        if (formula =3D=3D 'odd')  formula =3D '2n+1';=0A=
        if (mm =3D formula.match(/^(\d+)$/)) // digit only=0A=
          return '[' + fragment + "=3D " + mm[1] + ']';=0A=
        if (mm =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b=0A=
          if (mm[1] =3D=3D "-") mm[1] =3D -1;=0A=
          var a =3D mm[1] ? Number(mm[1]) : 1;=0A=
          var b =3D mm[2] ? Number(mm[2]) : 0;=0A=
          predicate =3D "[((#{fragment} - #{b}) mod #{a} =3D 0) and " +=0A=
          "((#{fragment} - #{b}) div #{a} >=3D 0)]";=0A=
          return new Template(predicate).evaluate({=0A=
            fragment: fragment, a: a, b: b });=0A=
        }=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  criteria: {=0A=
    tagName:      'n =3D h.tagName(n, r, "#{1}", c);      c =3D false;',=0A=
    className:    'n =3D h.className(n, r, "#{1}", c);    c =3D false;',=0A=
    id:           'n =3D h.id(n, r, "#{1}", c);           c =3D false;',=0A=
    attrPresence: 'n =3D h.attrPresence(n, r, "#{1}", c); c =3D false;',=0A=
    attr: function(m) {=0A=
      m[3] =3D (m[5] || m[6]);=0A=
      return new Template('n =3D h.attr(n, r, "#{1}", "#{3}", "#{2}", =
c); c =3D false;').evaluate(m);=0A=
    },=0A=
    pseudo: function(m) {=0A=
      if (m[6]) m[6] =3D m[6].replace(/"/g, '\\"');=0A=
      return new Template('n =3D h.pseudo(n, "#{1}", "#{6}", r, c); c =
=3D false;').evaluate(m);=0A=
    },=0A=
    descendant:   'c =3D "descendant";',=0A=
    child:        'c =3D "child";',=0A=
    adjacent:     'c =3D "adjacent";',=0A=
    laterSibling: 'c =3D "laterSibling";'=0A=
  },=0A=
=0A=
  patterns: {=0A=
    // combinators must be listed first=0A=
    // (and descendant needs to be last combinator)=0A=
    laterSibling: /^\s*~\s*/,=0A=
    child:        /^\s*>\s*/,=0A=
    adjacent:     /^\s*\+\s*/,=0A=
    descendant:   /^\s/,=0A=
=0A=
    // selectors follow=0A=
    tagName:      /^\s*(\*|[\w\-]+)(\b|$)?/,=0A=
    id:           /^#([\w\-\*]+)(\b|$)/,=0A=
    className:    /^\.([\w\-\*]+)(\b|$)/,=0A=
    pseudo:=0A=
/^:((first|last|nth|nth-last|only)(-child|-of-type)|empty|checked|(en|dis=
)abled|not)(\((.*?)\))?(\b|$|(?=3D\s|[:+~>]))/,=0A=
    attrPresence: /^\[([\w]+)\]/,=0A=
    attr:         =
/\[((?:[\w-]*:)?[\w-]+)\s*(?:([!^$*~|]?=3D)\s*((['"])([^\4]*?)\4|([^'"][^=
\]]*?)))?\]/=0A=
  },=0A=
=0A=
  // for Selector.match and Element#match=0A=
  assertions: {=0A=
    tagName: function(element, matches) {=0A=
      return matches[1].toUpperCase() =3D=3D =
element.tagName.toUpperCase();=0A=
    },=0A=
=0A=
    className: function(element, matches) {=0A=
      return Element.hasClassName(element, matches[1]);=0A=
    },=0A=
=0A=
    id: function(element, matches) {=0A=
      return element.id =3D=3D=3D matches[1];=0A=
    },=0A=
=0A=
    attrPresence: function(element, matches) {=0A=
      return Element.hasAttribute(element, matches[1]);=0A=
    },=0A=
=0A=
    attr: function(element, matches) {=0A=
      var nodeValue =3D Element.readAttribute(element, matches[1]);=0A=
      return nodeValue && Selector.operators[matches[2]](nodeValue, =
matches[5] || matches[6]);=0A=
    }=0A=
  },=0A=
=0A=
  handlers: {=0A=
    // UTILITY FUNCTIONS=0A=
    // joins two collections=0A=
    concat: function(a, b) {=0A=
      for (var i =3D 0, node; node =3D b[i]; i++)=0A=
        a.push(node);=0A=
      return a;=0A=
    },=0A=
=0A=
    // marks an array of nodes for counting=0A=
    mark: function(nodes) {=0A=
      var _true =3D Prototype.emptyFunction;=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node._countedByPrototype =3D _true;=0A=
      return nodes;=0A=
    },=0A=
=0A=
    unmark: function(nodes) {=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node._countedByPrototype =3D undefined;=0A=
      return nodes;=0A=
    },=0A=
=0A=
    // mark each child node with its position (for nth calls)=0A=
    // "ofType" flag indicates whether we're indexing for nth-of-type=0A=
    // rather than nth-child=0A=
    index: function(parentNode, reverse, ofType) {=0A=
      parentNode._countedByPrototype =3D Prototype.emptyFunction;=0A=
      if (reverse) {=0A=
        for (var nodes =3D parentNode.childNodes, i =3D nodes.length - =
1, j =3D 1; i >=3D 0; i--) {=0A=
          var node =3D nodes[i];=0A=
          if (node.nodeType =3D=3D 1 && (!ofType || =
node._countedByPrototype)) node.nodeIndex =3D j++;=0A=
        }=0A=
      } else {=0A=
        for (var i =3D 0, j =3D 1, nodes =3D parentNode.childNodes; node =
=3D nodes[i]; i++)=0A=
          if (node.nodeType =3D=3D 1 && (!ofType || =
node._countedByPrototype)) node.nodeIndex =3D j++;=0A=
      }=0A=
    },=0A=
=0A=
    // filters out duplicates and extends all nodes=0A=
    unique: function(nodes) {=0A=
      if (nodes.length =3D=3D 0) return nodes;=0A=
      var results =3D [], n;=0A=
      for (var i =3D 0, l =3D nodes.length; i < l; i++)=0A=
        if (!(n =3D nodes[i])._countedByPrototype) {=0A=
          n._countedByPrototype =3D Prototype.emptyFunction;=0A=
          results.push(Element.extend(n));=0A=
        }=0A=
      return Selector.handlers.unmark(results);=0A=
    },=0A=
=0A=
    // COMBINATOR FUNCTIONS=0A=
    descendant: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        h.concat(results, node.getElementsByTagName('*'));=0A=
      return results;=0A=
    },=0A=
=0A=
    child: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        for (var j =3D 0, child; child =3D node.childNodes[j]; j++)=0A=
          if (child.nodeType =3D=3D 1 && child.tagName !=3D '!') =
results.push(child);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    adjacent: function(nodes) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        var next =3D this.nextElementSibling(node);=0A=
        if (next) results.push(next);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    laterSibling: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        h.concat(results, Element.nextSiblings(node));=0A=
      return results;=0A=
    },=0A=
=0A=
    nextElementSibling: function(node) {=0A=
      while (node =3D node.nextSibling)=0A=
	      if (node.nodeType =3D=3D 1) return node;=0A=
      return null;=0A=
    },=0A=
=0A=
    previousElementSibling: function(node) {=0A=
      while (node =3D node.previousSibling)=0A=
        if (node.nodeType =3D=3D 1) return node;=0A=
      return null;=0A=
    },=0A=
=0A=
    // TOKEN FUNCTIONS=0A=
    tagName: function(nodes, root, tagName, combinator) {=0A=
      var uTagName =3D tagName.toUpperCase();=0A=
      var results =3D [], h =3D Selector.handlers;=0A=
      if (nodes) {=0A=
        if (combinator) {=0A=
          // fastlane for ordinary descendant combinators=0A=
          if (combinator =3D=3D "descendant") {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              h.concat(results, node.getElementsByTagName(tagName));=0A=
            return results;=0A=
          } else nodes =3D this[combinator](nodes);=0A=
          if (tagName =3D=3D "*") return nodes;=0A=
        }=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.tagName.toUpperCase() =3D=3D=3D uTagName) =
results.push(node);=0A=
        return results;=0A=
      } else return root.getElementsByTagName(tagName);=0A=
    },=0A=
=0A=
    id: function(nodes, root, id, combinator) {=0A=
      var targetNode =3D $(id), h =3D Selector.handlers;=0A=
      if (!targetNode) return [];=0A=
      if (!nodes && root =3D=3D document) return [targetNode];=0A=
      if (nodes) {=0A=
        if (combinator) {=0A=
          if (combinator =3D=3D 'child') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (targetNode.parentNode =3D=3D node) return [targetNode];=0A=
          } else if (combinator =3D=3D 'descendant') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (Element.descendantOf(targetNode, node)) return =
[targetNode];=0A=
          } else if (combinator =3D=3D 'adjacent') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (Selector.handlers.previousElementSibling(targetNode) =
=3D=3D node)=0A=
                return [targetNode];=0A=
          } else nodes =3D h[combinator](nodes);=0A=
        }=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node =3D=3D targetNode) return [targetNode];=0A=
        return [];=0A=
      }=0A=
      return (targetNode && Element.descendantOf(targetNode, root)) ? =
[targetNode] : [];=0A=
    },=0A=
=0A=
    className: function(nodes, root, className, combinator) {=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      return Selector.handlers.byClassName(nodes, root, className);=0A=
    },=0A=
=0A=
    byClassName: function(nodes, root, className) {=0A=
      if (!nodes) nodes =3D Selector.handlers.descendant([root]);=0A=
      var needle =3D ' ' + className + ' ';=0A=
      for (var i =3D 0, results =3D [], node, nodeClassName; node =3D =
nodes[i]; i++) {=0A=
        nodeClassName =3D node.className;=0A=
        if (nodeClassName.length =3D=3D 0) continue;=0A=
        if (nodeClassName =3D=3D className || (' ' + nodeClassName + ' =
').include(needle))=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    attrPresence: function(nodes, root, attr, combinator) {=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      var results =3D [];=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        if (Element.hasAttribute(node, attr)) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    attr: function(nodes, root, attr, value, operator, combinator) {=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      var handler =3D Selector.operators[operator], results =3D [];=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++) {=0A=
        var nodeValue =3D Element.readAttribute(node, attr);=0A=
        if (nodeValue =3D=3D=3D null) continue;=0A=
        if (handler(nodeValue, value)) results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    pseudo: function(nodes, name, value, root, combinator) {=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      return Selector.pseudos[name](nodes, value, root);=0A=
    }=0A=
  },=0A=
=0A=
  pseudos: {=0A=
    'first-child': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (Selector.handlers.previousElementSibling(node)) continue;=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
    'last-child': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (Selector.handlers.nextElementSibling(node)) continue;=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
    'only-child': function(nodes, value, root) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!h.previousElementSibling(node) && =
!h.nextElementSibling(node))=0A=
          results.push(node);=0A=
      return results;=0A=
    },=0A=
    'nth-child':        function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root);=0A=
    },=0A=
    'nth-last-child':   function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, true);=0A=
    },=0A=
    'nth-of-type':      function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, false, true);=0A=
    },=0A=
    'nth-last-of-type': function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, true, true);=0A=
    },=0A=
    'first-of-type':    function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, "1", root, false, true);=0A=
    },=0A=
    'last-of-type':     function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, "1", root, true, true);=0A=
    },=0A=
    'only-of-type':     function(nodes, formula, root) {=0A=
      var p =3D Selector.pseudos;=0A=
      return p['last-of-type'](p['first-of-type'](nodes, formula, root), =
formula, root);=0A=
    },=0A=
=0A=
    // handles the an+b logic=0A=
    getIndices: function(a, b, total) {=0A=
      if (a =3D=3D 0) return b > 0 ? [b] : [];=0A=
      return $R(1, total).inject([], function(memo, i) {=0A=
        if (0 =3D=3D (i - b) % a && (i - b) / a >=3D 0) memo.push(i);=0A=
        return memo;=0A=
      });=0A=
    },=0A=
=0A=
    // handles nth(-last)-child, nth(-last)-of-type, and =
(first|last)-of-type=0A=
    nth: function(nodes, formula, root, reverse, ofType) {=0A=
      if (nodes.length =3D=3D 0) return [];=0A=
      if (formula =3D=3D 'even') formula =3D '2n+0';=0A=
      if (formula =3D=3D 'odd')  formula =3D '2n+1';=0A=
      var h =3D Selector.handlers, results =3D [], indexed =3D [], m;=0A=
      h.mark(nodes);=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++) {=0A=
        if (!node.parentNode._countedByPrototype) {=0A=
          h.index(node.parentNode, reverse, ofType);=0A=
          indexed.push(node.parentNode);=0A=
        }=0A=
      }=0A=
      if (formula.match(/^\d+$/)) { // just a number=0A=
        formula =3D Number(formula);=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.nodeIndex =3D=3D formula) results.push(node);=0A=
      } else if (m =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // =
an+b=0A=
        if (m[1] =3D=3D "-") m[1] =3D -1;=0A=
        var a =3D m[1] ? Number(m[1]) : 1;=0A=
        var b =3D m[2] ? Number(m[2]) : 0;=0A=
        var indices =3D Selector.pseudos.getIndices(a, b, nodes.length);=0A=
        for (var i =3D 0, node, l =3D indices.length; node =3D nodes[i]; =
i++) {=0A=
          for (var j =3D 0; j < l; j++)=0A=
            if (node.nodeIndex =3D=3D indices[j]) results.push(node);=0A=
        }=0A=
      }=0A=
      h.unmark(nodes);=0A=
      h.unmark(indexed);=0A=
      return results;=0A=
    },=0A=
=0A=
    'empty': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        // IE treats comments as element nodes=0A=
        if (node.tagName =3D=3D '!' || (node.firstChild && =
!node.innerHTML.match(/^\s*$/))) continue;=0A=
        results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    'not': function(nodes, selector, root) {=0A=
      var h =3D Selector.handlers, selectorType, m;=0A=
      var exclusions =3D new Selector(selector).findElements(root);=0A=
      h.mark(exclusions);=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!node._countedByPrototype) results.push(node);=0A=
      h.unmark(exclusions);=0A=
      return results;=0A=
    },=0A=
=0A=
    'enabled': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!node.disabled) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    'disabled': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (node.disabled) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    'checked': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (node.checked) results.push(node);=0A=
      return results;=0A=
    }=0A=
  },=0A=
=0A=
  operators: {=0A=
    '=3D':  function(nv, v) { return nv =3D=3D v; },=0A=
    '!=3D': function(nv, v) { return nv !=3D v; },=0A=
    '^=3D': function(nv, v) { return nv.startsWith(v); },=0A=
    '$=3D': function(nv, v) { return nv.endsWith(v); },=0A=
    '*=3D': function(nv, v) { return nv.include(v); },=0A=
    '~=3D': function(nv, v) { return (' ' + nv + ' ').include(' ' + v + =
' '); },=0A=
    '|=3D': function(nv, v) { return ('-' + nv.toUpperCase() + =
'-').include('-' + v.toUpperCase() + '-'); }=0A=
  },=0A=
=0A=
  split: function(expression) {=0A=
    var expressions =3D [];=0A=
    expression.scan(/(([\w#:.~>+()\s-]+|\*|\[.*?\])+)\s*(,|$)/, =
function(m) {=0A=
      expressions.push(m[1].strip());=0A=
    });=0A=
    return expressions;=0A=
  },=0A=
=0A=
  matchElements: function(elements, expression) {=0A=
    var matches =3D $$(expression), h =3D Selector.handlers;=0A=
    h.mark(matches);=0A=
    for (var i =3D 0, results =3D [], element; element =3D elements[i]; =
i++)=0A=
      if (element._countedByPrototype) results.push(element);=0A=
    h.unmark(matches);=0A=
    return results;=0A=
  },=0A=
=0A=
  findElement: function(elements, expression, index) {=0A=
    if (Object.isNumber(expression)) {=0A=
      index =3D expression; expression =3D false;=0A=
    }=0A=
    return Selector.matchElements(elements, expression || '*')[index || =
0];=0A=
  },=0A=
=0A=
  findChildElements: function(element, expressions) {=0A=
    expressions =3D Selector.split(expressions.join(','));=0A=
    var results =3D [], h =3D Selector.handlers;=0A=
    for (var i =3D 0, l =3D expressions.length, selector; i < l; i++) {=0A=
      selector =3D new Selector(expressions[i].strip());=0A=
      h.concat(results, selector.findElements(element));=0A=
    }=0A=
    return (l > 1) ? h.unique(results) : results;=0A=
  }=0A=
});=0A=
=0A=
if (Prototype.Browser.IE) {=0A=
  Object.extend(Selector.handlers, {=0A=
    // IE returns comment nodes on getElementsByTagName("*").=0A=
    // Filter them out.=0A=
    concat: function(a, b) {=0A=
      for (var i =3D 0, node; node =3D b[i]; i++)=0A=
        if (node.tagName !=3D=3D "!") a.push(node);=0A=
      return a;=0A=
    },=0A=
=0A=
    // IE improperly serializes _countedByPrototype in (inner|outer)HTML.=0A=
    unmark: function(nodes) {=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node.removeAttribute('_countedByPrototype');=0A=
      return nodes;=0A=
    }=0A=
  });=0A=
}=0A=
=0A=
function $$() {=0A=
  return Selector.findChildElements(document, $A(arguments));=0A=
}=0A=
var Form =3D {=0A=
  reset: function(form) {=0A=
    $(form).reset();=0A=
    return form;=0A=
  },=0A=
=0A=
  serializeElements: function(elements, options) {=0A=
    if (typeof options !=3D 'object') options =3D { hash: !!options };=0A=
    else if (Object.isUndefined(options.hash)) options.hash =3D true;=0A=
    var key, value, submitted =3D false, submit =3D options.submit;=0A=
=0A=
    var data =3D elements.inject({ }, function(result, element) {=0A=
      if (!element.disabled && element.name) {=0A=
        key =3D element.name; value =3D $(element).getValue();=0A=
        if (value !=3D null && (element.type !=3D 'submit' || =
(!submitted &&=0A=
            submit !=3D=3D false && (!submit || key =3D=3D submit) && =
(submitted =3D true)))) {=0A=
          if (key in result) {=0A=
            // a key is already present; construct an array of values=0A=
            if (!Object.isArray(result[key])) result[key] =3D =
[result[key]];=0A=
            result[key].push(value);=0A=
          }=0A=
          else result[key] =3D value;=0A=
        }=0A=
      }=0A=
      return result;=0A=
    });=0A=
=0A=
    return options.hash ? data : Object.toQueryString(data);=0A=
  }=0A=
};=0A=
=0A=
Form.Methods =3D {=0A=
  serialize: function(form, options) {=0A=
    return Form.serializeElements(Form.getElements(form), options);=0A=
  },=0A=
=0A=
  getElements: function(form) {=0A=
    return $A($(form).getElementsByTagName('*')).inject([],=0A=
      function(elements, child) {=0A=
        if (Form.Element.Serializers[child.tagName.toLowerCase()])=0A=
          elements.push(Element.extend(child));=0A=
        return elements;=0A=
      }=0A=
    );=0A=
  },=0A=
=0A=
  getInputs: function(form, typeName, name) {=0A=
    form =3D $(form);=0A=
    var inputs =3D form.getElementsByTagName('input');=0A=
=0A=
    if (!typeName && !name) return $A(inputs).map(Element.extend);=0A=
=0A=
    for (var i =3D 0, matchingInputs =3D [], length =3D inputs.length; i =
< length; i++) {=0A=
      var input =3D inputs[i];=0A=
      if ((typeName && input.type !=3D typeName) || (name && input.name =
!=3D name))=0A=
        continue;=0A=
      matchingInputs.push(Element.extend(input));=0A=
    }=0A=
=0A=
    return matchingInputs;=0A=
  },=0A=
=0A=
  disable: function(form) {=0A=
    form =3D $(form);=0A=
    Form.getElements(form).invoke('disable');=0A=
    return form;=0A=
  },=0A=
=0A=
  enable: function(form) {=0A=
    form =3D $(form);=0A=
    Form.getElements(form).invoke('enable');=0A=
    return form;=0A=
  },=0A=
=0A=
  findFirstElement: function(form) {=0A=
    var elements =3D $(form).getElements().findAll(function(element) {=0A=
      return 'hidden' !=3D element.type && !element.disabled;=0A=
    });=0A=
    var firstByIndex =3D elements.findAll(function(element) {=0A=
      return element.hasAttribute('tabIndex') && element.tabIndex >=3D 0;=0A=
    }).sortBy(function(element) { return element.tabIndex }).first();=0A=
=0A=
    return firstByIndex ? firstByIndex : elements.find(function(element) =
{=0A=
      return ['input', 'select', =
'textarea'].include(element.tagName.toLowerCase());=0A=
    });=0A=
  },=0A=
=0A=
  focusFirstElement: function(form) {=0A=
    form =3D $(form);=0A=
    form.findFirstElement().activate();=0A=
    return form;=0A=
  },=0A=
=0A=
  request: function(form, options) {=0A=
    form =3D $(form), options =3D Object.clone(options || { });=0A=
=0A=
    var params =3D options.parameters, action =3D =
form.readAttribute('action') || '';=0A=
    if (action.blank()) action =3D window.location.href;=0A=
    options.parameters =3D form.serialize(true);=0A=
=0A=
    if (params) {=0A=
      if (Object.isString(params)) params =3D params.toQueryParams();=0A=
      Object.extend(options.parameters, params);=0A=
    }=0A=
=0A=
    if (form.hasAttribute('method') && !options.method)=0A=
      options.method =3D form.method;=0A=
=0A=
    return new Ajax.Request(action, options);=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Form.Element =3D {=0A=
  focus: function(element) {=0A=
    $(element).focus();=0A=
    return element;=0A=
  },=0A=
=0A=
  select: function(element) {=0A=
    $(element).select();=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
Form.Element.Methods =3D {=0A=
  serialize: function(element) {=0A=
    element =3D $(element);=0A=
    if (!element.disabled && element.name) {=0A=
      var value =3D element.getValue();=0A=
      if (value !=3D undefined) {=0A=
        var pair =3D { };=0A=
        pair[element.name] =3D value;=0A=
        return Object.toQueryString(pair);=0A=
      }=0A=
    }=0A=
    return '';=0A=
  },=0A=
=0A=
  getValue: function(element) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    return Form.Element.Serializers[method](element);=0A=
  },=0A=
=0A=
  setValue: function(element, value) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    Form.Element.Serializers[method](element, value);=0A=
    return element;=0A=
  },=0A=
=0A=
  clear: function(element) {=0A=
    $(element).value =3D '';=0A=
    return element;=0A=
  },=0A=
=0A=
  present: function(element) {=0A=
    return $(element).value !=3D '';=0A=
  },=0A=
=0A=
  activate: function(element) {=0A=
    element =3D $(element);=0A=
    try {=0A=
      element.focus();=0A=
      if (element.select && (element.tagName.toLowerCase() !=3D 'input' =
||=0A=
          !['button', 'reset', 'submit'].include(element.type)))=0A=
        element.select();=0A=
    } catch (e) { }=0A=
    return element;=0A=
  },=0A=
=0A=
  disable: function(element) {=0A=
    element =3D $(element);=0A=
    element.blur();=0A=
    element.disabled =3D true;=0A=
    return element;=0A=
  },=0A=
=0A=
  enable: function(element) {=0A=
    element =3D $(element);=0A=
    element.disabled =3D false;=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Field =3D Form.Element;=0A=
var $F =3D Form.Element.Methods.getValue;=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Form.Element.Serializers =3D {=0A=
  input: function(element, value) {=0A=
    switch (element.type.toLowerCase()) {=0A=
      case 'checkbox':=0A=
      case 'radio':=0A=
        return Form.Element.Serializers.inputSelector(element, value);=0A=
      default:=0A=
        return Form.Element.Serializers.textarea(element, value);=0A=
    }=0A=
  },=0A=
=0A=
  inputSelector: function(element, value) {=0A=
    if (Object.isUndefined(value)) return element.checked ? =
element.value : null;=0A=
    else element.checked =3D !!value;=0A=
  },=0A=
=0A=
  textarea: function(element, value) {=0A=
    if (Object.isUndefined(value)) return element.value;=0A=
    else element.value =3D value;=0A=
  },=0A=
=0A=
  select: function(element, index) {=0A=
    if (Object.isUndefined(index))=0A=
      return this[element.type =3D=3D 'select-one' ?=0A=
        'selectOne' : 'selectMany'](element);=0A=
    else {=0A=
      var opt, value, single =3D !Object.isArray(index);=0A=
      for (var i =3D 0, length =3D element.length; i < length; i++) {=0A=
        opt =3D element.options[i];=0A=
        value =3D this.optionValue(opt);=0A=
        if (single) {=0A=
          if (value =3D=3D index) {=0A=
            opt.selected =3D true;=0A=
            return;=0A=
          }=0A=
        }=0A=
        else opt.selected =3D index.include(value);=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  selectOne: function(element) {=0A=
    var index =3D element.selectedIndex;=0A=
    return index >=3D 0 ? this.optionValue(element.options[index]) : =
null;=0A=
  },=0A=
=0A=
  selectMany: function(element) {=0A=
    var values, length =3D element.length;=0A=
    if (!length) return null;=0A=
=0A=
    for (var i =3D 0, values =3D []; i < length; i++) {=0A=
      var opt =3D element.options[i];=0A=
      if (opt.selected) values.push(this.optionValue(opt));=0A=
    }=0A=
    return values;=0A=
  },=0A=
=0A=
  optionValue: function(opt) {=0A=
    // extend element because hasAttribute may not be native=0A=
    return Element.extend(opt).hasAttribute('value') ? opt.value : =
opt.text;=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Abstract.TimedObserver =3D Class.create(PeriodicalExecuter, {=0A=
  initialize: function($super, element, frequency, callback) {=0A=
    $super(callback, frequency);=0A=
    this.element   =3D $(element);=0A=
    this.lastValue =3D this.getValue();=0A=
  },=0A=
=0A=
  execute: function() {=0A=
    var value =3D this.getValue();=0A=
    if (Object.isString(this.lastValue) && Object.isString(value) ?=0A=
        this.lastValue !=3D value : String(this.lastValue) !=3D =
String(value)) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Form.Element.Observer =3D Class.create(Abstract.TimedObserver, {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.Observer =3D Class.create(Abstract.TimedObserver, {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Abstract.EventObserver =3D Class.create({=0A=
  initialize: function(element, callback) {=0A=
    this.element  =3D $(element);=0A=
    this.callback =3D callback;=0A=
=0A=
    this.lastValue =3D this.getValue();=0A=
    if (this.element.tagName.toLowerCase() =3D=3D 'form')=0A=
      this.registerFormCallbacks();=0A=
    else=0A=
      this.registerCallback(this.element);=0A=
  },=0A=
=0A=
  onElementEvent: function() {=0A=
    var value =3D this.getValue();=0A=
    if (this.lastValue !=3D value) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  },=0A=
=0A=
  registerFormCallbacks: function() {=0A=
    Form.getElements(this.element).each(this.registerCallback, this);=0A=
  },=0A=
=0A=
  registerCallback: function(element) {=0A=
    if (element.type) {=0A=
      switch (element.type.toLowerCase()) {=0A=
        case 'checkbox':=0A=
        case 'radio':=0A=
          Event.observe(element, 'click', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
        default:=0A=
          Event.observe(element, 'change', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
      }=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Form.Element.EventObserver =3D Class.create(Abstract.EventObserver, {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.EventObserver =3D Class.create(Abstract.EventObserver, {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
if (!window.Event) var Event =3D { };=0A=
=0A=
Object.extend(Event, {=0A=
  KEY_BACKSPACE: 8,=0A=
  KEY_TAB:       9,=0A=
  KEY_RETURN:   13,=0A=
  KEY_ESC:      27,=0A=
  KEY_LEFT:     37,=0A=
  KEY_UP:       38,=0A=
  KEY_RIGHT:    39,=0A=
  KEY_DOWN:     40,=0A=
  KEY_DELETE:   46,=0A=
  KEY_HOME:     36,=0A=
  KEY_END:      35,=0A=
  KEY_PAGEUP:   33,=0A=
  KEY_PAGEDOWN: 34,=0A=
  KEY_INSERT:   45,=0A=
=0A=
  cache: { },=0A=
=0A=
  relatedTarget: function(event) {=0A=
    var element;=0A=
    switch(event.type) {=0A=
      case 'mouseover': element =3D event.fromElement; break;=0A=
      case 'mouseout':  element =3D event.toElement;   break;=0A=
      default: return null;=0A=
    }=0A=
    return Element.extend(element);=0A=
  }=0A=
});=0A=
=0A=
Event.Methods =3D (function() {=0A=
  var isButton;=0A=
=0A=
  if (Prototype.Browser.IE) {=0A=
    var buttonMap =3D { 0: 1, 1: 4, 2: 2 };=0A=
    isButton =3D function(event, code) {=0A=
      return event.button =3D=3D buttonMap[code];=0A=
    };=0A=
=0A=
  } else if (Prototype.Browser.WebKit) {=0A=
    isButton =3D function(event, code) {=0A=
      switch (code) {=0A=
        case 0: return event.which =3D=3D 1 && !event.metaKey;=0A=
        case 1: return event.which =3D=3D 1 && event.metaKey;=0A=
        default: return false;=0A=
      }=0A=
    };=0A=
=0A=
  } else {=0A=
    isButton =3D function(event, code) {=0A=
      return event.which ? (event.which =3D=3D=3D code + 1) : =
(event.button =3D=3D=3D code);=0A=
    };=0A=
  }=0A=
=0A=
  return {=0A=
    isLeftClick:   function(event) { return isButton(event, 0) },=0A=
    isMiddleClick: function(event) { return isButton(event, 1) },=0A=
    isRightClick:  function(event) { return isButton(event, 2) },=0A=
=0A=
    element: function(event) {=0A=
      var node =3D Event.extend(event).target;=0A=
      return Element.extend(node.nodeType =3D=3D Node.TEXT_NODE ? =
node.parentNode : node);=0A=
    },=0A=
=0A=
    findElement: function(event, expression) {=0A=
      var element =3D Event.element(event);=0A=
      if (!expression) return element;=0A=
      var elements =3D [element].concat(element.ancestors());=0A=
      return Selector.findElement(elements, expression, 0);=0A=
    },=0A=
=0A=
    pointer: function(event) {=0A=
      return {=0A=
        x: event.pageX || (event.clientX +=0A=
          (document.documentElement.scrollLeft || =
document.body.scrollLeft)),=0A=
        y: event.pageY || (event.clientY +=0A=
          (document.documentElement.scrollTop || =
document.body.scrollTop))=0A=
      };=0A=
    },=0A=
=0A=
    pointerX: function(event) { return Event.pointer(event).x },=0A=
    pointerY: function(event) { return Event.pointer(event).y },=0A=
=0A=
    stop: function(event) {=0A=
      Event.extend(event);=0A=
      event.preventDefault();=0A=
      event.stopPropagation();=0A=
      event.stopped =3D true;=0A=
    }=0A=
  };=0A=
})();=0A=
=0A=
Event.extend =3D (function() {=0A=
  var methods =3D Object.keys(Event.Methods).inject({ }, function(m, =
name) {=0A=
    m[name] =3D Event.Methods[name].methodize();=0A=
    return m;=0A=
  });=0A=
=0A=
  if (Prototype.Browser.IE) {=0A=
    Object.extend(methods, {=0A=
      stopPropagation: function() { this.cancelBubble =3D true },=0A=
      preventDefault:  function() { this.returnValue =3D false },=0A=
      inspect: function() { return "[object Event]" }=0A=
    });=0A=
=0A=
    return function(event) {=0A=
      if (!event) return false;=0A=
      if (event._extendedByPrototype) return event;=0A=
=0A=
      event._extendedByPrototype =3D Prototype.emptyFunction;=0A=
      var pointer =3D Event.pointer(event);=0A=
      Object.extend(event, {=0A=
        target: event.srcElement,=0A=
        relatedTarget: Event.relatedTarget(event),=0A=
        pageX:  pointer.x,=0A=
        pageY:  pointer.y=0A=
      });=0A=
      return Object.extend(event, methods);=0A=
    };=0A=
=0A=
  } else {=0A=
    Event.prototype =3D Event.prototype || =
document.createEvent("HTMLEvents").__proto__;=0A=
    Object.extend(Event.prototype, methods);=0A=
    return Prototype.K;=0A=
  }=0A=
})();=0A=
=0A=
Object.extend(Event, (function() {=0A=
  var cache =3D Event.cache;=0A=
=0A=
  function getEventID(element) {=0A=
    if (element._prototypeEventID) return element._prototypeEventID[0];=0A=
    arguments.callee.id =3D arguments.callee.id || 1;=0A=
    return element._prototypeEventID =3D [++arguments.callee.id];=0A=
  }=0A=
=0A=
  function getDOMEventName(eventName) {=0A=
    if (eventName && eventName.include(':')) return "dataavailable";=0A=
    return eventName;=0A=
  }=0A=
=0A=
  function getCacheForID(id) {=0A=
    return cache[id] =3D cache[id] || { };=0A=
  }=0A=
=0A=
  function getWrappersForEventName(id, eventName) {=0A=
    var c =3D getCacheForID(id);=0A=
    return c[eventName] =3D c[eventName] || [];=0A=
  }=0A=
=0A=
  function createWrapper(element, eventName, handler) {=0A=
    var id =3D getEventID(element);=0A=
    var c =3D getWrappersForEventName(id, eventName);=0A=
    if (c.pluck("handler").include(handler)) return false;=0A=
=0A=
    var wrapper =3D function(event) {=0A=
      if (!Event || !Event.extend ||=0A=
        (event.eventName && event.eventName !=3D eventName))=0A=
          return false;=0A=
=0A=
      Event.extend(event);=0A=
      handler.call(element, event);=0A=
    };=0A=
=0A=
    wrapper.handler =3D handler;=0A=
    c.push(wrapper);=0A=
    return wrapper;=0A=
  }=0A=
=0A=
  function findWrapper(id, eventName, handler) {=0A=
    var c =3D getWrappersForEventName(id, eventName);=0A=
    return c.find(function(wrapper) { return wrapper.handler =3D=3D =
handler });=0A=
  }=0A=
=0A=
  function destroyWrapper(id, eventName, handler) {=0A=
    var c =3D getCacheForID(id);=0A=
    if (!c[eventName]) return false;=0A=
    c[eventName] =3D c[eventName].without(findWrapper(id, eventName, =
handler));=0A=
  }=0A=
=0A=
  function destroyCache() {=0A=
    for (var id in cache)=0A=
      for (var eventName in cache[id])=0A=
        cache[id][eventName] =3D null;=0A=
  }=0A=
=0A=
  if (window.attachEvent) {=0A=
    window.attachEvent("onunload", destroyCache);=0A=
  }=0A=
=0A=
  return {=0A=
    observe: function(element, eventName, handler) {=0A=
      element =3D $(element);=0A=
      var name =3D getDOMEventName(eventName);=0A=
=0A=
      var wrapper =3D createWrapper(element, eventName, handler);=0A=
      if (!wrapper) return element;=0A=
=0A=
      if (element.addEventListener) {=0A=
        element.addEventListener(name, wrapper, false);=0A=
      } else {=0A=
        element.attachEvent("on" + name, wrapper);=0A=
      }=0A=
=0A=
      return element;=0A=
    },=0A=
=0A=
    stopObserving: function(element, eventName, handler) {=0A=
      element =3D $(element);=0A=
      var id =3D getEventID(element), name =3D =
getDOMEventName(eventName);=0A=
=0A=
      if (!handler && eventName) {=0A=
        getWrappersForEventName(id, eventName).each(function(wrapper) {=0A=
          element.stopObserving(eventName, wrapper.handler);=0A=
        });=0A=
        return element;=0A=
=0A=
      } else if (!eventName) {=0A=
        Object.keys(getCacheForID(id)).each(function(eventName) {=0A=
          element.stopObserving(eventName);=0A=
        });=0A=
        return element;=0A=
      }=0A=
=0A=
      var wrapper =3D findWrapper(id, eventName, handler);=0A=
      if (!wrapper) return element;=0A=
=0A=
      if (element.removeEventListener) {=0A=
        element.removeEventListener(name, wrapper, false);=0A=
      } else {=0A=
        element.detachEvent("on" + name, wrapper);=0A=
      }=0A=
=0A=
      destroyWrapper(id, eventName, handler);=0A=
=0A=
      return element;=0A=
    },=0A=
=0A=
    fire: function(element, eventName, memo) {=0A=
      element =3D $(element);=0A=
      if (element =3D=3D document && document.createEvent && =
!element.dispatchEvent)=0A=
        element =3D document.documentElement;=0A=
=0A=
      var event;=0A=
      if (document.createEvent) {=0A=
        event =3D document.createEvent("HTMLEvents");=0A=
        event.initEvent("dataavailable", true, true);=0A=
      } else {=0A=
        event =3D document.createEventObject();=0A=
        event.eventType =3D "ondataavailable";=0A=
      }=0A=
=0A=
      event.eventName =3D eventName;=0A=
      event.memo =3D memo || { };=0A=
=0A=
      if (document.createEvent) {=0A=
        element.dispatchEvent(event);=0A=
      } else {=0A=
        element.fireEvent(event.eventType, event);=0A=
      }=0A=
=0A=
      return Event.extend(event);=0A=
    }=0A=
  };=0A=
})());=0A=
=0A=
Object.extend(Event, Event.Methods);=0A=
=0A=
Element.addMethods({=0A=
  fire:          Event.fire,=0A=
  observe:       Event.observe,=0A=
  stopObserving: Event.stopObserving=0A=
});=0A=
=0A=
Object.extend(document, {=0A=
  fire:          Element.Methods.fire.methodize(),=0A=
  observe:       Element.Methods.observe.methodize(),=0A=
  stopObserving: Element.Methods.stopObserving.methodize(),=0A=
  loaded:        false=0A=
});=0A=
=0A=
(function() {=0A=
  /* Support for the DOMContentLoaded event is based on work by Dan Webb,=0A=
     Matthias Miller, Dean Edwards and John Resig. */=0A=
=0A=
  var timer;=0A=
=0A=
  function fireContentLoadedEvent() {=0A=
    if (document.loaded) return;=0A=
    if (timer) window.clearInterval(timer);=0A=
    document.fire("dom:loaded");=0A=
    document.loaded =3D true;=0A=
  }=0A=
=0A=
  if (document.addEventListener) {=0A=
    if (Prototype.Browser.WebKit) {=0A=
      timer =3D window.setInterval(function() {=0A=
        if (/loaded|complete/.test(document.readyState))=0A=
          fireContentLoadedEvent();=0A=
      }, 0);=0A=
=0A=
      Event.observe(window, "load", fireContentLoadedEvent);=0A=
=0A=
    } else {=0A=
      document.addEventListener("DOMContentLoaded",=0A=
        fireContentLoadedEvent, false);=0A=
    }=0A=
=0A=
  } else {=0A=
    document.write("<script id=3D__onDOMContentLoaded defer =
src=3D//:><\/script>");=0A=
    $("__onDOMContentLoaded").onreadystatechange =3D function() {=0A=
      if (this.readyState =3D=3D "complete") {=0A=
        this.onreadystatechange =3D null;=0A=
        fireContentLoadedEvent();=0A=
      }=0A=
    };=0A=
  }=0A=
})();=0A=
/*------------------------------- DEPRECATED =
-------------------------------*/=0A=
=0A=
Hash.toQueryString =3D Object.toQueryString;=0A=
=0A=
var Toggle =3D { display: Element.toggle };=0A=
=0A=
Element.Methods.childOf =3D Element.Methods.descendantOf;=0A=
=0A=
var Insertion =3D {=0A=
  Before: function(element, content) {=0A=
    return Element.insert(element, {before:content});=0A=
  },=0A=
=0A=
  Top: function(element, content) {=0A=
    return Element.insert(element, {top:content});=0A=
  },=0A=
=0A=
  Bottom: function(element, content) {=0A=
    return Element.insert(element, {bottom:content});=0A=
  },=0A=
=0A=
  After: function(element, content) {=0A=
    return Element.insert(element, {after:content});=0A=
  }=0A=
};=0A=
=0A=
var $continue =3D new Error('"throw $continue" is deprecated, use =
"return" instead');=0A=
=0A=
// This should be moved to script.aculo.us; notice the deprecated methods=0A=
// further below, that map to the newer Element methods.=0A=
var Position =3D {=0A=
  // set to true if needed, warning: firefox performance problems=0A=
  // NOT neeeded for page scrolling, only if draggable contained in=0A=
  // scrollable elements=0A=
  includeScrollOffsets: false,=0A=
=0A=
  // must be called before calling withinIncludingScrolloffset, every =
time the=0A=
  // page is scrolled=0A=
  prepare: function() {=0A=
    this.deltaX =3D  window.pageXOffset=0A=
                || document.documentElement.scrollLeft=0A=
                || document.body.scrollLeft=0A=
                || 0;=0A=
    this.deltaY =3D  window.pageYOffset=0A=
                || document.documentElement.scrollTop=0A=
                || document.body.scrollTop=0A=
                || 0;=0A=
  },=0A=
=0A=
  // caches x/y coordinate pair to use with overlap=0A=
  within: function(element, x, y) {=0A=
    if (this.includeScrollOffsets)=0A=
      return this.withinIncludingScrolloffsets(element, x, y);=0A=
    this.xcomp =3D x;=0A=
    this.ycomp =3D y;=0A=
    this.offset =3D Element.cumulativeOffset(element);=0A=
=0A=
    return (y >=3D this.offset[1] &&=0A=
            y <  this.offset[1] + element.offsetHeight &&=0A=
            x >=3D this.offset[0] &&=0A=
            x <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  withinIncludingScrolloffsets: function(element, x, y) {=0A=
    var offsetcache =3D Element.cumulativeScrollOffset(element);=0A=
=0A=
    this.xcomp =3D x + offsetcache[0] - this.deltaX;=0A=
    this.ycomp =3D y + offsetcache[1] - this.deltaY;=0A=
    this.offset =3D Element.cumulativeOffset(element);=0A=
=0A=
    return (this.ycomp >=3D this.offset[1] &&=0A=
            this.ycomp <  this.offset[1] + element.offsetHeight &&=0A=
            this.xcomp >=3D this.offset[0] &&=0A=
            this.xcomp <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  // within must be called directly before=0A=
  overlap: function(mode, element) {=0A=
    if (!mode) return 0;=0A=
    if (mode =3D=3D 'vertical')=0A=
      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /=0A=
        element.offsetHeight;=0A=
    if (mode =3D=3D 'horizontal')=0A=
      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /=0A=
        element.offsetWidth;=0A=
  },=0A=
=0A=
  // Deprecation layer -- use newer Element methods now (1.5.2).=0A=
=0A=
  cumulativeOffset: Element.Methods.cumulativeOffset,=0A=
=0A=
  positionedOffset: Element.Methods.positionedOffset,=0A=
=0A=
  absolutize: function(element) {=0A=
    Position.prepare();=0A=
    return Element.absolutize(element);=0A=
  },=0A=
=0A=
  relativize: function(element) {=0A=
    Position.prepare();=0A=
    return Element.relativize(element);=0A=
  },=0A=
=0A=
  realOffset: Element.Methods.cumulativeScrollOffset,=0A=
=0A=
  offsetParent: Element.Methods.getOffsetParent,=0A=
=0A=
  page: Element.Methods.viewportOffset,=0A=
=0A=
  clone: function(source, target, options) {=0A=
    options =3D options || { };=0A=
    return Element.clonePosition(target, source, options);=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
if (!document.getElementsByClassName) document.getElementsByClassName =
=3D function(instanceMethods){=0A=
  function iter(name) {=0A=
    return name.blank() ? null : "[contains(concat(' ', @class, ' '), ' =
" + name + " ')]";=0A=
  }=0A=
=0A=
  instanceMethods.getElementsByClassName =3D =
Prototype.BrowserFeatures.XPath ?=0A=
  function(element, className) {=0A=
    className =3D className.toString().strip();=0A=
    var cond =3D /\s/.test(className) ? $w(className).map(iter).join('') =
: iter(className);=0A=
    return cond ? document._getElementsByXPath('.//*' + cond, element) : =
[];=0A=
  } : function(element, className) {=0A=
    className =3D className.toString().strip();=0A=
    var elements =3D [], classNames =3D (/\s/.test(className) ? =
$w(className) : null);=0A=
    if (!classNames && !className) return elements;=0A=
=0A=
    var nodes =3D $(element).getElementsByTagName('*');=0A=
    className =3D ' ' + className + ' ';=0A=
=0A=
    for (var i =3D 0, child, cn; child =3D nodes[i]; i++) {=0A=
      if (child.className && (cn =3D ' ' + child.className + ' ') && =
(cn.include(className) ||=0A=
          (classNames && classNames.all(function(name) {=0A=
            return !name.toString().blank() && cn.include(' ' + name + ' =
');=0A=
          }))))=0A=
        elements.push(Element.extend(child));=0A=
    }=0A=
    return elements;=0A=
  };=0A=
=0A=
  return function(className, parentElement) {=0A=
    return $(parentElement || =
document.body).getElementsByClassName(className);=0A=
  };=0A=
}(Element.Methods);=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.ClassNames =3D Class.create();=0A=
Element.ClassNames.prototype =3D {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
  },=0A=
=0A=
  _each: function(iterator) {=0A=
    this.element.className.split(/\s+/).select(function(name) {=0A=
      return name.length > 0;=0A=
    })._each(iterator);=0A=
  },=0A=
=0A=
  set: function(className) {=0A=
    this.element.className =3D className;=0A=
  },=0A=
=0A=
  add: function(classNameToAdd) {=0A=
    if (this.include(classNameToAdd)) return;=0A=
    this.set($A(this).concat(classNameToAdd).join(' '));=0A=
  },=0A=
=0A=
  remove: function(classNameToRemove) {=0A=
    if (!this.include(classNameToRemove)) return;=0A=
    this.set($A(this).without(classNameToRemove).join(' '));=0A=
  },=0A=
=0A=
  toString: function() {=0A=
    return $A(this).join(' ');=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Element.ClassNames.prototype, Enumerable);=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.addMethods();
------=_NextPart_000_0021_01C8F7DA.3C475C60
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://devimages.apple.com/global/scripts/lib/scriptaculous.js

// script.aculo.us scriptaculous.js v1.8.0, Tue Nov 06 15:01:40 +0300 =
2007=0A=
=0A=
// Copyright (c) 2005-2007 Thomas Fuchs (http://script.aculo.us, =
http://mir.aculo.us)=0A=
// =0A=
// Permission is hereby granted, free of charge, to any person obtaining=0A=
// a copy of this software and associated documentation files (the=0A=
// "Software"), to deal in the Software without restriction, including=0A=
// without limitation the rights to use, copy, modify, merge, publish,=0A=
// distribute, sublicense, and/or sell copies of the Software, and to=0A=
// permit persons to whom the Software is furnished to do so, subject to=0A=
// the following conditions:=0A=
// =0A=
// The above copyright notice and this permission notice shall be=0A=
// included in all copies or substantial portions of the Software.=0A=
//=0A=
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,=0A=
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF=0A=
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND=0A=
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE=0A=
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION=0A=
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION=0A=
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.=0A=
//=0A=
// For details, see the script.aculo.us web site: http://script.aculo.us/=0A=
=0A=
var Scriptaculous =3D {=0A=
  Version: '1.8.0',=0A=
  REQUIRED_PROTOTYPE: '1.6.0'=0A=
}=0A=
=0A=
var Builder =3D {=0A=
  NODEMAP: {=0A=
    AREA: 'map',=0A=
    CAPTION: 'table',=0A=
    COL: 'table',=0A=
    COLGROUP: 'table',=0A=
    LEGEND: 'fieldset',=0A=
    OPTGROUP: 'select',=0A=
    OPTION: 'select',=0A=
    PARAM: 'object',=0A=
    TBODY: 'table',=0A=
    TD: 'table',=0A=
    TFOOT: 'table',=0A=
    TH: 'table',=0A=
    THEAD: 'table',=0A=
    TR: 'table'=0A=
  },=0A=
  // note: For Firefox < 1.5, OPTION and OPTGROUP tags are currently =
broken,=0A=
  //       due to a Firefox bug=0A=
  node: function(elementName) {=0A=
    elementName =3D elementName.toUpperCase();=0A=
    =0A=
    // try innerHTML approach=0A=
    var parentTag =3D this.NODEMAP[elementName] || 'div';=0A=
    var parentElement =3D document.createElement(parentTag);=0A=
    try { // prevent IE "feature": http://dev.rubyonrails.org/ticket/2707=0A=
      parentElement.innerHTML =3D "<" + elementName + "></" + =
elementName + ">";=0A=
    } catch(e) {}=0A=
    var element =3D parentElement.firstChild || null;=0A=
      =0A=
    // see if browser added wrapping tags=0A=
    if(element && (element.tagName.toUpperCase() !=3D elementName))=0A=
      element =3D element.getElementsByTagName(elementName)[0];=0A=
    =0A=
    // fallback to createElement approach=0A=
    if(!element) element =3D document.createElement(elementName);=0A=
    =0A=
    // abort if nothing could be created=0A=
    if(!element) return;=0A=
=0A=
    // attributes (or text)=0A=
    if(arguments[1])=0A=
      if(this._isStringOrNumber(arguments[1]) ||=0A=
        (arguments[1] instanceof Array) ||=0A=
        arguments[1].tagName) {=0A=
          this._children(element, arguments[1]);=0A=
        } else {=0A=
          var attrs =3D this._attributes(arguments[1]);=0A=
          if(attrs.length) {=0A=
            try { // prevent IE "feature": =
http://dev.rubyonrails.org/ticket/2707=0A=
              parentElement.innerHTML =3D "<" +elementName + " " +=0A=
                attrs + "></" + elementName + ">";=0A=
            } catch(e) {}=0A=
            element =3D parentElement.firstChild || null;=0A=
            // workaround firefox 1.0.X bug=0A=
            if(!element) {=0A=
              element =3D document.createElement(elementName);=0A=
              for(attr in arguments[1]) =0A=
                element[attr =3D=3D 'class' ? 'className' : attr] =3D =
arguments[1][attr];=0A=
            }=0A=
            if(element.tagName.toUpperCase() !=3D elementName)=0A=
              element =3D =
parentElement.getElementsByTagName(elementName)[0];=0A=
          }=0A=
        } =0A=
=0A=
    // text, or array of children=0A=
    if(arguments[2])=0A=
      this._children(element, arguments[2]);=0A=
=0A=
     return element;=0A=
  },=0A=
  _text: function(text) {=0A=
     return document.createTextNode(text);=0A=
  },=0A=
=0A=
  ATTR_MAP: {=0A=
    'className': 'class',=0A=
    'htmlFor': 'for'=0A=
  },=0A=
=0A=
  _attributes: function(attributes) {=0A=
    var attrs =3D [];=0A=
    for(attribute in attributes)=0A=
      attrs.push((attribute in this.ATTR_MAP ? this.ATTR_MAP[attribute] =
: attribute) +=0A=
          '=3D"' + =
attributes[attribute].toString().escapeHTML().gsub(/"/,'&quot;') + '"');=0A=
    return attrs.join(" ");=0A=
  },=0A=
  _children: function(element, children) {=0A=
    if(children.tagName) {=0A=
      element.appendChild(children);=0A=
      return;=0A=
    }=0A=
    if(typeof children=3D=3D'object') { // array can hold nodes and text=0A=
      children.flatten().each( function(e) {=0A=
        if(typeof e=3D=3D'object')=0A=
          element.appendChild(e)=0A=
        else=0A=
          if(Builder._isStringOrNumber(e))=0A=
            element.appendChild(Builder._text(e));=0A=
      });=0A=
    } else=0A=
      if(Builder._isStringOrNumber(children))=0A=
        element.appendChild(Builder._text(children));=0A=
  },=0A=
  _isStringOrNumber: function(param) {=0A=
    return(typeof param=3D=3D'string' || typeof param=3D=3D'number');=0A=
  },=0A=
  build: function(html) {=0A=
    var element =3D this.node('div');=0A=
    $(element).update(html.strip());=0A=
    return element.down();=0A=
  },=0A=
  dump: function(scope) { =0A=
    if(typeof scope !=3D 'object' && typeof scope !=3D 'function') scope =
=3D window; //global scope =0A=
  =0A=
    var tags =3D ("A ABBR ACRONYM ADDRESS APPLET AREA B BASE BASEFONT =
BDO BIG BLOCKQUOTE BODY " +=0A=
      "BR BUTTON CAPTION CENTER CITE CODE COL COLGROUP DD DEL DFN DIR =
DIV DL DT EM FIELDSET " +=0A=
      "FONT FORM FRAME FRAMESET H1 H2 H3 H4 H5 H6 HEAD HR HTML I IFRAME =
IMG INPUT INS ISINDEX "+=0A=
      "KBD LABEL LEGEND LI LINK MAP MENU META NOFRAMES NOSCRIPT OBJECT =
OL OPTGROUP OPTION P "+=0A=
      "PARAM PRE Q S SAMP SCRIPT SELECT SMALL SPAN STRIKE STRONG STYLE =
SUB SUP TABLE TBODY TD "+=0A=
      "TEXTAREA TFOOT TH THEAD TITLE TR TT U UL VAR").split(/\s+/);=0A=
  =0A=
    tags.each( function(tag){ =0A=
      scope[tag] =3D function() { =0A=
        return Builder.node.apply(Builder, [tag].concat($A(arguments))); =
 =0A=
      } =0A=
    });=0A=
  }=0A=
}=0A=
=0A=
String.prototype.parseColor =3D function() {  =0A=
  var color =3D '#';=0A=
  if (this.slice(0,4) =3D=3D 'rgb(') {  =0A=
    var cols =3D this.slice(4,this.length-1).split(',');  =0A=
    var i=3D0; do { color +=3D parseInt(cols[i]).toColorPart() } while =
(++i<3);  =0A=
  } else {  =0A=
    if (this.slice(0,1) =3D=3D '#') {  =0A=
      if (this.length=3D=3D4) for(var i=3D1;i<4;i++) color +=3D =
(this.charAt(i) + this.charAt(i)).toLowerCase();  =0A=
      if (this.length=3D=3D7) color =3D this.toLowerCase();  =0A=
    }  =0A=
  }  =0A=
  return (color.length=3D=3D7 ? color : (arguments[0] || this));  =0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.collectTextNodes =3D function(element) {  =0A=
  return $A($(element).childNodes).collect( function(node) {=0A=
    return (node.nodeType=3D=3D3 ? node.nodeValue : =0A=
      (node.hasChildNodes() ? Element.collectTextNodes(node) : ''));=0A=
  }).flatten().join('');=0A=
};=0A=
=0A=
Element.collectTextNodesIgnoreClass =3D function(element, className) {  =0A=
  return $A($(element).childNodes).collect( function(node) {=0A=
    return (node.nodeType=3D=3D3 ? node.nodeValue : =0A=
      ((node.hasChildNodes() && !Element.hasClassName(node,className)) ? =0A=
        Element.collectTextNodesIgnoreClass(node, className) : ''));=0A=
  }).flatten().join('');=0A=
};=0A=
=0A=
Element.setContentZoom =3D function(element, percent) {=0A=
  element =3D $(element);  =0A=
  element.setStyle({fontSize: (percent/100) + 'em'});   =0A=
  if (Prototype.Browser.WebKit) window.scrollBy(0,0);=0A=
  return element;=0A=
};=0A=
=0A=
Element.getInlineOpacity =3D function(element){=0A=
  return $(element).style.opacity || '';=0A=
};=0A=
=0A=
Element.forceRerendering =3D function(element) {=0A=
  try {=0A=
    element =3D $(element);=0A=
    var n =3D document.createTextNode(' ');=0A=
    element.appendChild(n);=0A=
    element.removeChild(n);=0A=
  } catch(e) { }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Effect =3D {=0A=
  _elementDoesNotExistError: {=0A=
    name: 'ElementDoesNotExistError',=0A=
    message: 'The specified DOM element does not exist, but is required =
for this effect to operate'=0A=
  },=0A=
  Transitions: {=0A=
    linear: Prototype.K,=0A=
    sinoidal: function(pos) {=0A=
      return (-Math.cos(pos*Math.PI)/2) + 0.5;=0A=
    },=0A=
    reverse: function(pos) {=0A=
      return 1-pos;=0A=
    },=0A=
    flicker: function(pos) {=0A=
      var pos =3D ((-Math.cos(pos*Math.PI)/4) + 0.75) + Math.random()/4;=0A=
      return pos > 1 ? 1 : pos;=0A=
    },=0A=
    wobble: function(pos) {=0A=
      return (-Math.cos(pos*Math.PI*(9*pos))/2) + 0.5;=0A=
    },=0A=
    pulse: function(pos, pulses) { =0A=
      pulses =3D pulses || 5; =0A=
      return (=0A=
        ((pos % (1/pulses)) * pulses).round() =3D=3D 0 ? =0A=
              ((pos * pulses * 2) - (pos * pulses * 2).floor()) : =0A=
          1 - ((pos * pulses * 2) - (pos * pulses * 2).floor())=0A=
        );=0A=
    },=0A=
    spring: function(pos) { =0A=
      return 1 - (Math.cos(pos * 4.5 * Math.PI) * Math.exp(-pos * 6)); =0A=
    },=0A=
    none: function(pos) {=0A=
      return 0;=0A=
    },=0A=
    full: function(pos) {=0A=
      return 1;=0A=
    }=0A=
  },=0A=
  DefaultOptions: {=0A=
    duration:   1.0,   // seconds=0A=
    fps:        100,   // 100=3D assume 66fps max.=0A=
    sync:       false, // true for combining=0A=
    from:       0.0,=0A=
    to:         1.0,=0A=
    delay:      0.0,=0A=
    queue:      'parallel'=0A=
  },=0A=
  tagifyText: function(element) {=0A=
    var tagifyStyle =3D 'position:relative';=0A=
    if (Prototype.Browser.IE) tagifyStyle +=3D ';zoom:1';=0A=
    =0A=
    element =3D $(element);=0A=
    $A(element.childNodes).each( function(child) {=0A=
      if (child.nodeType=3D=3D3) {=0A=
        child.nodeValue.toArray().each( function(character) {=0A=
          element.insertBefore(=0A=
            new Element('span', {style: tagifyStyle}).update(=0A=
              character =3D=3D ' ' ? String.fromCharCode(160) : =
character), =0A=
              child);=0A=
        });=0A=
        Element.remove(child);=0A=
      }=0A=
    });=0A=
  },=0A=
  multiple: function(element, effect) {=0A=
    var elements;=0A=
    if (((typeof element =3D=3D 'object') || =0A=
        Object.isFunction(element)) && =0A=
       (element.length))=0A=
      elements =3D element;=0A=
    else=0A=
      elements =3D $(element).childNodes;=0A=
      =0A=
    var options =3D Object.extend({=0A=
      speed: 0.1,=0A=
      delay: 0.0=0A=
    }, arguments[2] || { });=0A=
    var masterDelay =3D options.delay;=0A=
=0A=
    $A(elements).each( function(element, index) {=0A=
      new effect(element, Object.extend(options, { delay: index * =
options.speed + masterDelay }));=0A=
    });=0A=
  },=0A=
  PAIRS: {=0A=
    'slide':  ['SlideDown','SlideUp'],=0A=
    'blind':  ['BlindDown','BlindUp'],=0A=
    'appear': ['Appear','Fade']=0A=
  },=0A=
  toggle: function(element, effect) {=0A=
    element =3D $(element);=0A=
    effect =3D (effect || 'appear').toLowerCase();=0A=
    var options =3D Object.extend({=0A=
      queue: { position:'end', scope:(element.id || 'global'), limit: 1 }=0A=
    }, arguments[2] || { });=0A=
    Effect[element.visible() ? =0A=
      Effect.PAIRS[effect][1] : Effect.PAIRS[effect][0]](element, =
options);=0A=
  }=0A=
};=0A=
=0A=
Effect.DefaultOptions.transition =3D Effect.Transitions.sinoidal;=0A=
=0A=
/* ------------- core effects ------------- */=0A=
=0A=
Effect.ScopedQueue =3D Class.create(Enumerable, {=0A=
  initialize: function() {=0A=
    this.effects  =3D [];=0A=
    this.interval =3D null;    =0A=
  },=0A=
  _each: function(iterator) {=0A=
    this.effects._each(iterator);=0A=
  },=0A=
  add: function(effect) {=0A=
    var timestamp =3D new Date().getTime();=0A=
    =0A=
    var position =3D Object.isString(effect.options.queue) ? =0A=
      effect.options.queue : effect.options.queue.position;=0A=
    =0A=
    switch(position) {=0A=
      case 'front':=0A=
        // move unstarted effects after this effect  =0A=
        this.effects.findAll(function(e){ return e.state=3D=3D'idle' =
}).each( function(e) {=0A=
            e.startOn  +=3D effect.finishOn;=0A=
            e.finishOn +=3D effect.finishOn;=0A=
          });=0A=
        break;=0A=
      case 'with-last':=0A=
        timestamp =3D this.effects.pluck('startOn').max() || timestamp;=0A=
        break;=0A=
      case 'end':=0A=
        // start effect after last queued effect has finished=0A=
        timestamp =3D this.effects.pluck('finishOn').max() || timestamp;=0A=
        break;=0A=
    }=0A=
    =0A=
    effect.startOn  +=3D timestamp;=0A=
    effect.finishOn +=3D timestamp;=0A=
=0A=
    if (!effect.options.queue.limit || (this.effects.length < =
effect.options.queue.limit))=0A=
      this.effects.push(effect);=0A=
    =0A=
    if (!this.interval)=0A=
      this.interval =3D setInterval(this.loop.bind(this), 15);=0A=
  },=0A=
  remove: function(effect) {=0A=
    this.effects =3D this.effects.reject(function(e) { return =
e=3D=3Deffect });=0A=
    if (this.effects.length =3D=3D 0) {=0A=
      clearInterval(this.interval);=0A=
      this.interval =3D null;=0A=
    }=0A=
  },=0A=
  loop: function() {=0A=
    var timePos =3D new Date().getTime();=0A=
    for(var i=3D0, len=3Dthis.effects.length;i<len;i++) =0A=
      this.effects[i] && this.effects[i].loop(timePos);=0A=
  }=0A=
});=0A=
=0A=
Effect.Queues =3D {=0A=
  instances: $H(),=0A=
  get: function(queueName) {=0A=
    if (!Object.isString(queueName)) return queueName;=0A=
    =0A=
    return this.instances.get(queueName) ||=0A=
      this.instances.set(queueName, new Effect.ScopedQueue());=0A=
  }=0A=
};=0A=
Effect.Queue =3D Effect.Queues.get('global');=0A=
=0A=
Effect.Base =3D Class.create({=0A=
  position: null,=0A=
  start: function(options) {=0A=
    function codeForEvent(options,eventName){=0A=
      return (=0A=
        (options[eventName+'Internal'] ? =
'this.options.'+eventName+'Internal(this);' : '') +=0A=
        (options[eventName] ? 'this.options.'+eventName+'(this);' : '')=0A=
      );=0A=
    }=0A=
    if (options && options.transition =3D=3D=3D false) =
options.transition =3D Effect.Transitions.linear;=0A=
    this.options      =3D Object.extend(Object.extend({ =
},Effect.DefaultOptions), options || { });=0A=
    this.currentFrame =3D 0;=0A=
    this.state        =3D 'idle';=0A=
    this.startOn      =3D this.options.delay*1000;=0A=
    this.finishOn     =3D this.startOn+(this.options.duration*1000);=0A=
    this.fromToDelta  =3D this.options.to-this.options.from;=0A=
    this.totalTime    =3D this.finishOn-this.startOn;=0A=
    this.totalFrames  =3D this.options.fps*this.options.duration;=0A=
    =0A=
    eval('this.render =3D function(pos){ '+=0A=
      'if (this.state=3D=3D"idle"){this.state=3D"running";'+=0A=
      codeForEvent(this.options,'beforeSetup')+=0A=
      (this.setup ? 'this.setup();':'')+ =0A=
      codeForEvent(this.options,'afterSetup')+=0A=
      '};if (this.state=3D=3D"running"){'+=0A=
      =
'pos=3Dthis.options.transition(pos)*'+this.fromToDelta+'+'+this.options.f=
rom+';'+=0A=
      'this.position=3Dpos;'+=0A=
      codeForEvent(this.options,'beforeUpdate')+=0A=
      (this.update ? 'this.update(pos);':'')+=0A=
      codeForEvent(this.options,'afterUpdate')+=0A=
      '}}');=0A=
    =0A=
    this.event('beforeStart');=0A=
    if (!this.options.sync)=0A=
      Effect.Queues.get(Object.isString(this.options.queue) ? =0A=
        'global' : this.options.queue.scope).add(this);=0A=
  },=0A=
  loop: function(timePos) {=0A=
    if (timePos >=3D this.startOn) {=0A=
      if (timePos >=3D this.finishOn) {=0A=
        this.render(1.0);=0A=
        this.cancel();=0A=
        this.event('beforeFinish');=0A=
        if (this.finish) this.finish(); =0A=
        this.event('afterFinish');=0A=
        return;  =0A=
      }=0A=
      var pos   =3D (timePos - this.startOn) / this.totalTime,=0A=
          frame =3D (pos * this.totalFrames).round();=0A=
      if (frame > this.currentFrame) {=0A=
        this.render(pos);=0A=
        this.currentFrame =3D frame;=0A=
      }=0A=
    }=0A=
  },=0A=
  cancel: function() {=0A=
    if (!this.options.sync)=0A=
      Effect.Queues.get(Object.isString(this.options.queue) ? =0A=
        'global' : this.options.queue.scope).remove(this);=0A=
    this.state =3D 'finished';=0A=
  },=0A=
  event: function(eventName) {=0A=
    if (this.options[eventName + 'Internal']) this.options[eventName + =
'Internal'](this);=0A=
    if (this.options[eventName]) this.options[eventName](this);=0A=
  },=0A=
  inspect: function() {=0A=
    var data =3D $H();=0A=
    for(property in this)=0A=
      if (!Object.isFunction(this[property])) data.set(property, =
this[property]);=0A=
    return '#<Effect:' + data.inspect() + ',options:' + =
$H(this.options).inspect() + '>';=0A=
  }=0A=
});=0A=
=0A=
Effect.Parallel =3D Class.create(Effect.Base, {=0A=
  initialize: function(effects) {=0A=
    this.effects =3D effects || [];=0A=
    this.start(arguments[1]);=0A=
  },=0A=
  update: function(position) {=0A=
    this.effects.invoke('render', position);=0A=
  },=0A=
  finish: function(position) {=0A=
    this.effects.each( function(effect) {=0A=
      effect.render(1.0);=0A=
      effect.cancel();=0A=
      effect.event('beforeFinish');=0A=
      if (effect.finish) effect.finish(position);=0A=
      effect.event('afterFinish');=0A=
    });=0A=
  }=0A=
});=0A=
=0A=
Effect.Tween =3D Class.create(Effect.Base, {=0A=
  initialize: function(object, from, to) {=0A=
    object =3D Object.isString(object) ? $(object) : object;=0A=
    var args =3D $A(arguments), method =3D args.last(), =0A=
      options =3D args.length =3D=3D 5 ? args[3] : null;=0A=
    this.method =3D Object.isFunction(method) ? method.bind(object) :=0A=
      Object.isFunction(object[method]) ? object[method].bind(object) : =0A=
      function(value) { object[method] =3D value };=0A=
    this.start(Object.extend({ from: from, to: to }, options || { }));=0A=
  },=0A=
  update: function(position) {=0A=
    this.method(position);=0A=
  }=0A=
});=0A=
=0A=
Effect.Event =3D Class.create(Effect.Base, {=0A=
  initialize: function() {=0A=
    this.start(Object.extend({ duration: 0 }, arguments[0] || { }));=0A=
  },=0A=
  update: Prototype.emptyFunction=0A=
});=0A=
=0A=
Effect.Opacity =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    // make this work on IE on elements without 'layout'=0A=
    if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))=0A=
      this.element.setStyle({zoom: 1});=0A=
    var options =3D Object.extend({=0A=
      from: this.element.getOpacity() || 0.0,=0A=
      to:   1.0=0A=
    }, arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setOpacity(position);=0A=
  }=0A=
});=0A=
=0A=
Effect.Move =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      x:    0,=0A=
      y:    0,=0A=
      mode: 'relative'=0A=
    }, arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    this.element.makePositioned();=0A=
    this.originalLeft =3D parseFloat(this.element.getStyle('left') || =
'0');=0A=
    this.originalTop  =3D parseFloat(this.element.getStyle('top')  || =
'0');=0A=
    if (this.options.mode =3D=3D 'absolute') {=0A=
      this.options.x =3D this.options.x - this.originalLeft;=0A=
      this.options.y =3D this.options.y - this.originalTop;=0A=
    }=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setStyle({=0A=
      left: (this.options.x  * position + this.originalLeft).round() + =
'px',=0A=
      top:  (this.options.y  * position + this.originalTop).round()  + =
'px'=0A=
    });=0A=
  }=0A=
});=0A=
=0A=
// for backwards compatibility=0A=
Effect.MoveBy =3D function(element, toTop, toLeft) {=0A=
  return new Effect.Move(element, =0A=
    Object.extend({ x: toLeft, y: toTop }, arguments[3] || { }));=0A=
};=0A=
=0A=
Effect.Scale =3D Class.create(Effect.Base, {=0A=
  initialize: function(element, percent) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      scaleX: true,=0A=
      scaleY: true,=0A=
      scaleContent: true,=0A=
      scaleFromCenter: false,=0A=
      scaleMode: 'box',        // 'box' or 'contents' or { } with =
provided values=0A=
      scaleFrom: 100.0,=0A=
      scaleTo:   percent=0A=
    }, arguments[2] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    this.restoreAfterFinish =3D this.options.restoreAfterFinish || false;=0A=
    this.elementPositioning =3D this.element.getStyle('position');=0A=
    =0A=
    this.originalStyle =3D { };=0A=
    ['top','left','width','height','fontSize'].each( function(k) {=0A=
      this.originalStyle[k] =3D this.element.style[k];=0A=
    }.bind(this));=0A=
      =0A=
    this.originalTop  =3D this.element.offsetTop;=0A=
    this.originalLeft =3D this.element.offsetLeft;=0A=
    =0A=
    var fontSize =3D this.element.getStyle('font-size') || '100%';=0A=
    ['em','px','%','pt'].each( function(fontSizeType) {=0A=
      if (fontSize.indexOf(fontSizeType)>0) {=0A=
        this.fontSize     =3D parseFloat(fontSize);=0A=
        this.fontSizeType =3D fontSizeType;=0A=
      }=0A=
    }.bind(this));=0A=
    =0A=
    this.factor =3D (this.options.scaleTo - this.options.scaleFrom)/100;=0A=
    =0A=
    this.dims =3D null;=0A=
    if (this.options.scaleMode=3D=3D'box')=0A=
      this.dims =3D [this.element.offsetHeight, =
this.element.offsetWidth];=0A=
    if (/^content/.test(this.options.scaleMode))=0A=
      this.dims =3D [this.element.scrollHeight, =
this.element.scrollWidth];=0A=
    if (!this.dims)=0A=
      this.dims =3D [this.options.scaleMode.originalHeight,=0A=
                   this.options.scaleMode.originalWidth];=0A=
  },=0A=
  update: function(position) {=0A=
    var currentScale =3D (this.options.scaleFrom/100.0) + (this.factor * =
position);=0A=
    if (this.options.scaleContent && this.fontSize)=0A=
      this.element.setStyle({fontSize: this.fontSize * currentScale + =
this.fontSizeType });=0A=
    this.setDimensions(this.dims[0] * currentScale, this.dims[1] * =
currentScale);=0A=
  },=0A=
  finish: function(position) {=0A=
    if (this.restoreAfterFinish) =
this.element.setStyle(this.originalStyle);=0A=
  },=0A=
  setDimensions: function(height, width) {=0A=
    var d =3D { };=0A=
    if (this.options.scaleX) d.width =3D width.round() + 'px';=0A=
    if (this.options.scaleY) d.height =3D height.round() + 'px';=0A=
    if (this.options.scaleFromCenter) {=0A=
      var topd  =3D (height - this.dims[0])/2;=0A=
      var leftd =3D (width  - this.dims[1])/2;=0A=
      if (this.elementPositioning =3D=3D 'absolute') {=0A=
        if (this.options.scaleY) d.top =3D this.originalTop-topd + 'px';=0A=
        if (this.options.scaleX) d.left =3D this.originalLeft-leftd + =
'px';=0A=
      } else {=0A=
        if (this.options.scaleY) d.top =3D -topd + 'px';=0A=
        if (this.options.scaleX) d.left =3D -leftd + 'px';=0A=
      }=0A=
    }=0A=
    this.element.setStyle(d);=0A=
  }=0A=
});=0A=
=0A=
Effect.Highlight =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({ startcolor: '#ffff99' }, =
arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    // Prevent executing on elements not in the layout flow=0A=
    if (this.element.getStyle('display')=3D=3D'none') { this.cancel(); =
return; }=0A=
    // Disable background image during the effect=0A=
    this.oldStyle =3D { };=0A=
    if (!this.options.keepBackgroundImage) {=0A=
      this.oldStyle.backgroundImage =3D =
this.element.getStyle('background-image');=0A=
      this.element.setStyle({backgroundImage: 'none'});=0A=
    }=0A=
    if (!this.options.endcolor)=0A=
      this.options.endcolor =3D =
this.element.getStyle('background-color').parseColor('#ffffff');=0A=
    if (!this.options.restorecolor)=0A=
      this.options.restorecolor =3D =
this.element.getStyle('background-color');=0A=
    // init color calculations=0A=
    this._base  =3D $R(0,2).map(function(i){ return =
parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16) }.bind(this));=0A=
    this._delta =3D $R(0,2).map(function(i){ return =
parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i] =
}.bind(this));=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setStyle({backgroundColor: =
$R(0,2).inject('#',function(m,v,i){=0A=
      return =
m+((this._base[i]+(this._delta[i]*position)).round().toColorPart()); =
}.bind(this)) });=0A=
  },=0A=
  finish: function() {=0A=
    this.element.setStyle(Object.extend(this.oldStyle, {=0A=
      backgroundColor: this.options.restorecolor=0A=
    }));=0A=
  }=0A=
});=0A=
=0A=
Effect.ScrollTo =3D function(element) {=0A=
  var options =3D arguments[1] || { },=0A=
    scrollOffsets =3D document.viewport.getScrollOffsets(),=0A=
    elementOffsets =3D $(element).cumulativeOffset(),=0A=
    max =3D (window.height || document.body.scrollHeight) - =
document.viewport.getHeight();  =0A=
=0A=
  if (options.offset) elementOffsets[1] +=3D options.offset;=0A=
=0A=
  return new Effect.Tween(null,=0A=
    scrollOffsets.top,=0A=
    elementOffsets[1] > max ? max : elementOffsets[1],=0A=
    options,=0A=
    function(p){ scrollTo(scrollOffsets.left, p.round()) }=0A=
  );=0A=
};=0A=
=0A=
/* ------------- combination effects ------------- */=0A=
=0A=
Effect.Fade =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  var options =3D Object.extend({=0A=
    from: element.getOpacity() || 1.0,=0A=
    to:   0.0,=0A=
    afterFinishInternal: function(effect) { =0A=
      if (effect.options.to!=3D0) return;=0A=
      effect.element.hide().setStyle({opacity: oldOpacity}); =0A=
    }=0A=
  }, arguments[1] || { });=0A=
  return new Effect.Opacity(element,options);=0A=
};=0A=
=0A=
Effect.Appear =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
  from: (element.getStyle('display') =3D=3D 'none' ? 0.0 : =
element.getOpacity() || 0.0),=0A=
  to:   1.0,=0A=
  // force Safari to render floated elements properly=0A=
  afterFinishInternal: function(effect) {=0A=
    effect.element.forceRerendering();=0A=
  },=0A=
  beforeSetup: function(effect) {=0A=
    effect.element.setOpacity(effect.options.from).show(); =0A=
  }}, arguments[1] || { });=0A=
  return new Effect.Opacity(element,options);=0A=
};=0A=
=0A=
Effect.Puff =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D { =0A=
    opacity: element.getInlineOpacity(), =0A=
    position: element.getStyle('position'),=0A=
    top:  element.style.top,=0A=
    left: element.style.left,=0A=
    width: element.style.width,=0A=
    height: element.style.height=0A=
  };=0A=
  return new Effect.Parallel(=0A=
   [ new Effect.Scale(element, 200, =0A=
      { sync: true, scaleFromCenter: true, scaleContent: true, =
restoreAfterFinish: true }), =0A=
     new Effect.Opacity(element, { sync: true, to: 0.0 } ) ], =0A=
     Object.extend({ duration: 1.0, =0A=
      beforeSetupInternal: function(effect) {=0A=
        Position.absolutize(effect.effects[0].element)=0A=
      },=0A=
      afterFinishInternal: function(effect) {=0A=
         effect.effects[0].element.hide().setStyle(oldStyle); }=0A=
     }, arguments[1] || { })=0A=
   );=0A=
};=0A=
=0A=
Effect.BlindUp =3D function(element) {=0A=
  element =3D $(element);=0A=
  element.makeClipping();=0A=
  return new Effect.Scale(element, 0,=0A=
    Object.extend({ scaleContent: false, =0A=
      scaleX: false, =0A=
      restoreAfterFinish: true,=0A=
      afterFinishInternal: function(effect) {=0A=
        effect.element.hide().undoClipping();=0A=
      } =0A=
    }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
Effect.BlindDown =3D function(element) {=0A=
  element =3D $(element);=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, 100, Object.extend({ =0A=
    scaleContent: false, =0A=
    scaleX: false,=0A=
    scaleFrom: 0,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makeClipping().setStyle({height: '0px'}).show(); =0A=
    },  =0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.undoClipping();=0A=
    }=0A=
  }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.SwitchOff =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  return new Effect.Appear(element, Object.extend({=0A=
    duration: 0.4,=0A=
    from: 0,=0A=
    transition: Effect.Transitions.flicker,=0A=
    afterFinishInternal: function(effect) {=0A=
      new Effect.Scale(effect.element, 1, { =0A=
        duration: 0.3, scaleFromCenter: true,=0A=
        scaleX: false, scaleContent: false, restoreAfterFinish: true,=0A=
        beforeSetup: function(effect) { =0A=
          effect.element.makePositioned().makeClipping();=0A=
        },=0A=
        afterFinishInternal: function(effect) {=0A=
          =
effect.element.hide().undoClipping().undoPositioned().setStyle({opacity: =
oldOpacity});=0A=
        }=0A=
      })=0A=
    }=0A=
  }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.DropOut =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    top: element.getStyle('top'),=0A=
    left: element.getStyle('left'),=0A=
    opacity: element.getInlineOpacity() };=0A=
  return new Effect.Parallel(=0A=
    [ new Effect.Move(element, {x: 0, y: 100, sync: true }), =0A=
      new Effect.Opacity(element, { sync: true, to: 0.0 }) ],=0A=
    Object.extend(=0A=
      { duration: 0.5,=0A=
        beforeSetup: function(effect) {=0A=
          effect.effects[0].element.makePositioned(); =0A=
        },=0A=
        afterFinishInternal: function(effect) {=0A=
          =
effect.effects[0].element.hide().undoPositioned().setStyle(oldStyle);=0A=
        } =0A=
      }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.Shake =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    distance: 20,=0A=
    duration: 0.5=0A=
  }, arguments[1] || {});=0A=
  var distance =3D parseFloat(options.distance);=0A=
  var split =3D parseFloat(options.duration) / 10.0;=0A=
  var oldStyle =3D {=0A=
    top: element.getStyle('top'),=0A=
    left: element.getStyle('left') };=0A=
    return new Effect.Move(element,=0A=
      { x:  distance, y: 0, duration: split, afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance, y: 0, duration: split, afterFinishInternal: =
function(effect) {=0A=
        effect.element.undoPositioned().setStyle(oldStyle);=0A=
  }}) }}) }}) }}) }}) }});=0A=
};=0A=
=0A=
Effect.SlideDown =3D function(element) {=0A=
  element =3D $(element).cleanWhitespace();=0A=
  // SlideDown need to have the content of the element wrapped in a =
container element with fixed height!=0A=
  var oldInnerBottom =3D element.down().getStyle('bottom');=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, 100, Object.extend({ =0A=
    scaleContent: false, =0A=
    scaleX: false, =0A=
    scaleFrom: window.opera ? 0 : 1,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makePositioned();=0A=
      effect.element.down().makePositioned();=0A=
      if (window.opera) effect.element.setStyle({top: ''});=0A=
      effect.element.makeClipping().setStyle({height: '0px'}).show(); =0A=
    },=0A=
    afterUpdateInternal: function(effect) {=0A=
      effect.element.down().setStyle({bottom:=0A=
        (effect.dims[0] - effect.element.clientHeight) + 'px' }); =0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.undoClipping().undoPositioned();=0A=
      effect.element.down().undoPositioned().setStyle({bottom: =
oldInnerBottom}); }=0A=
    }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
Effect.SlideUp =3D function(element) {=0A=
  element =3D $(element).cleanWhitespace();=0A=
  var oldInnerBottom =3D element.down().getStyle('bottom');=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, window.opera ? 0 : 1,=0A=
   Object.extend({ scaleContent: false, =0A=
    scaleX: false, =0A=
    scaleMode: 'box',=0A=
    scaleFrom: 100,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makePositioned();=0A=
      effect.element.down().makePositioned();=0A=
      if (window.opera) effect.element.setStyle({top: ''});=0A=
      effect.element.makeClipping().show();=0A=
    },  =0A=
    afterUpdateInternal: function(effect) {=0A=
      effect.element.down().setStyle({bottom:=0A=
        (effect.dims[0] - effect.element.clientHeight) + 'px' });=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.hide().undoClipping().undoPositioned();=0A=
      effect.element.down().undoPositioned().setStyle({bottom: =
oldInnerBottom});=0A=
    }=0A=
   }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
// Bug in opera makes the TD containing this element expand for a =
instance after finish =0A=
Effect.Squish =3D function(element) {=0A=
  return new Effect.Scale(element, window.opera ? 1 : 0, { =0A=
    restoreAfterFinish: true,=0A=
    beforeSetup: function(effect) {=0A=
      effect.element.makeClipping(); =0A=
    },  =0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.hide().undoClipping(); =0A=
    }=0A=
  });=0A=
};=0A=
=0A=
Effect.Grow =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    direction: 'center',=0A=
    moveTransition: Effect.Transitions.sinoidal,=0A=
    scaleTransition: Effect.Transitions.sinoidal,=0A=
    opacityTransition: Effect.Transitions.full=0A=
  }, arguments[1] || { });=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    height: element.style.height,=0A=
    width: element.style.width,=0A=
    opacity: element.getInlineOpacity() };=0A=
=0A=
  var dims =3D element.getDimensions();    =0A=
  var initialMoveX, initialMoveY;=0A=
  var moveX, moveY;=0A=
  =0A=
  switch (options.direction) {=0A=
    case 'top-left':=0A=
      initialMoveX =3D initialMoveY =3D moveX =3D moveY =3D 0; =0A=
      break;=0A=
    case 'top-right':=0A=
      initialMoveX =3D dims.width;=0A=
      initialMoveY =3D moveY =3D 0;=0A=
      moveX =3D -dims.width;=0A=
      break;=0A=
    case 'bottom-left':=0A=
      initialMoveX =3D moveX =3D 0;=0A=
      initialMoveY =3D dims.height;=0A=
      moveY =3D -dims.height;=0A=
      break;=0A=
    case 'bottom-right':=0A=
      initialMoveX =3D dims.width;=0A=
      initialMoveY =3D dims.height;=0A=
      moveX =3D -dims.width;=0A=
      moveY =3D -dims.height;=0A=
      break;=0A=
    case 'center':=0A=
      initialMoveX =3D dims.width / 2;=0A=
      initialMoveY =3D dims.height / 2;=0A=
      moveX =3D -dims.width / 2;=0A=
      moveY =3D -dims.height / 2;=0A=
      break;=0A=
  }=0A=
  =0A=
  return new Effect.Move(element, {=0A=
    x: initialMoveX,=0A=
    y: initialMoveY,=0A=
    duration: 0.01, =0A=
    beforeSetup: function(effect) {=0A=
      effect.element.hide().makeClipping().makePositioned();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      new Effect.Parallel(=0A=
        [ new Effect.Opacity(effect.element, { sync: true, to: 1.0, =
from: 0.0, transition: options.opacityTransition }),=0A=
          new Effect.Move(effect.element, { x: moveX, y: moveY, sync: =
true, transition: options.moveTransition }),=0A=
          new Effect.Scale(effect.element, 100, {=0A=
            scaleMode: { originalHeight: dims.height, originalWidth: =
dims.width }, =0A=
            sync: true, scaleFrom: window.opera ? 1 : 0, transition: =
options.scaleTransition, restoreAfterFinish: true})=0A=
        ], Object.extend({=0A=
             beforeSetup: function(effect) {=0A=
               effect.effects[0].element.setStyle({height: =
'0px'}).show(); =0A=
             },=0A=
             afterFinishInternal: function(effect) {=0A=
               =
effect.effects[0].element.undoClipping().undoPositioned().setStyle(oldSty=
le); =0A=
             }=0A=
           }, options)=0A=
      )=0A=
    }=0A=
  });=0A=
};=0A=
=0A=
Effect.Shrink =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    direction: 'center',=0A=
    moveTransition: Effect.Transitions.sinoidal,=0A=
    scaleTransition: Effect.Transitions.sinoidal,=0A=
    opacityTransition: Effect.Transitions.none=0A=
  }, arguments[1] || { });=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    height: element.style.height,=0A=
    width: element.style.width,=0A=
    opacity: element.getInlineOpacity() };=0A=
=0A=
  var dims =3D element.getDimensions();=0A=
  var moveX, moveY;=0A=
  =0A=
  switch (options.direction) {=0A=
    case 'top-left':=0A=
      moveX =3D moveY =3D 0;=0A=
      break;=0A=
    case 'top-right':=0A=
      moveX =3D dims.width;=0A=
      moveY =3D 0;=0A=
      break;=0A=
    case 'bottom-left':=0A=
      moveX =3D 0;=0A=
      moveY =3D dims.height;=0A=
      break;=0A=
    case 'bottom-right':=0A=
      moveX =3D dims.width;=0A=
      moveY =3D dims.height;=0A=
      break;=0A=
    case 'center':  =0A=
      moveX =3D dims.width / 2;=0A=
      moveY =3D dims.height / 2;=0A=
      break;=0A=
  }=0A=
  =0A=
  return new Effect.Parallel(=0A=
    [ new Effect.Opacity(element, { sync: true, to: 0.0, from: 1.0, =
transition: options.opacityTransition }),=0A=
      new Effect.Scale(element, window.opera ? 1 : 0, { sync: true, =
transition: options.scaleTransition, restoreAfterFinish: true}),=0A=
      new Effect.Move(element, { x: moveX, y: moveY, sync: true, =
transition: options.moveTransition })=0A=
    ], Object.extend({            =0A=
         beforeStartInternal: function(effect) {=0A=
           effect.effects[0].element.makePositioned().makeClipping(); =0A=
         },=0A=
         afterFinishInternal: function(effect) {=0A=
           =
effect.effects[0].element.hide().undoClipping().undoPositioned().setStyle=
(oldStyle); }=0A=
       }, options)=0A=
  );=0A=
};=0A=
=0A=
Effect.Pulsate =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options    =3D arguments[1] || { };=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  var transition =3D options.transition || Effect.Transitions.sinoidal;=0A=
  var reverser   =3D function(pos){ return =
transition(1-Effect.Transitions.pulse(pos, options.pulses)) };=0A=
  reverser.bind(transition);=0A=
  return new Effect.Opacity(element, =0A=
    Object.extend(Object.extend({  duration: 2.0, from: 0,=0A=
      afterFinishInternal: function(effect) { =
effect.element.setStyle({opacity: oldOpacity}); }=0A=
    }, options), {transition: reverser}));=0A=
};=0A=
=0A=
Effect.Fold =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    width: element.style.width,=0A=
    height: element.style.height };=0A=
  element.makeClipping();=0A=
  return new Effect.Scale(element, 5, Object.extend({   =0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    afterFinishInternal: function(effect) {=0A=
    new Effect.Scale(element, 1, { =0A=
      scaleContent: false, =0A=
      scaleY: false,=0A=
      afterFinishInternal: function(effect) {=0A=
        effect.element.hide().undoClipping().setStyle(oldStyle);=0A=
      } });=0A=
  }}, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.Morph =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      style: { }=0A=
    }, arguments[1] || { });=0A=
    =0A=
    if (!Object.isString(options.style)) this.style =3D =
$H(options.style);=0A=
    else {=0A=
      if (options.style.include(':'))=0A=
        this.style =3D options.style.parseStyle();=0A=
      else {=0A=
        this.element.addClassName(options.style);=0A=
        this.style =3D $H(this.element.getStyles());=0A=
        this.element.removeClassName(options.style);=0A=
        var css =3D this.element.getStyles();=0A=
        this.style =3D this.style.reject(function(style) {=0A=
          return style.value =3D=3D css[style.key];=0A=
        });=0A=
        options.afterFinishInternal =3D function(effect) {=0A=
          effect.element.addClassName(effect.options.style);=0A=
          effect.transforms.each(function(transform) {=0A=
            effect.element.style[transform.style] =3D '';=0A=
          });=0A=
        }=0A=
      }=0A=
    }=0A=
    this.start(options);=0A=
  },=0A=
  =0A=
  setup: function(){=0A=
    function parseColor(color){=0A=
      if (!color || ['rgba(0, 0, 0, 0)','transparent'].include(color)) =
color =3D '#ffffff';=0A=
      color =3D color.parseColor();=0A=
      return $R(0,2).map(function(i){=0A=
        return parseInt( color.slice(i*2+1,i*2+3), 16 ) =0A=
      });=0A=
    }=0A=
    this.transforms =3D this.style.map(function(pair){=0A=
      var property =3D pair[0], value =3D pair[1], unit =3D null;=0A=
=0A=
      if (value.parseColor('#zzzzzz') !=3D '#zzzzzz') {=0A=
        value =3D value.parseColor();=0A=
        unit  =3D 'color';=0A=
      } else if (property =3D=3D 'opacity') {=0A=
        value =3D parseFloat(value);=0A=
        if (Prototype.Browser.IE && =
(!this.element.currentStyle.hasLayout))=0A=
          this.element.setStyle({zoom: 1});=0A=
      } else if (Element.CSS_LENGTH.test(value)) {=0A=
          var components =3D value.match(/^([\+\-]?[0-9\.]+)(.*)$/);=0A=
          value =3D parseFloat(components[1]);=0A=
          unit =3D (components.length =3D=3D 3) ? components[2] : null;=0A=
      }=0A=
=0A=
      var originalValue =3D this.element.getStyle(property);=0A=
      return { =0A=
        style: property.camelize(), =0A=
        originalValue: unit=3D=3D'color' ? parseColor(originalValue) : =
parseFloat(originalValue || 0), =0A=
        targetValue: unit=3D=3D'color' ? parseColor(value) : value,=0A=
        unit: unit=0A=
      };=0A=
    }.bind(this)).reject(function(transform){=0A=
      return (=0A=
        (transform.originalValue =3D=3D transform.targetValue) ||=0A=
        (=0A=
          transform.unit !=3D 'color' &&=0A=
          (isNaN(transform.originalValue) || =
isNaN(transform.targetValue))=0A=
        )=0A=
      )=0A=
    });=0A=
  },=0A=
  update: function(position) {=0A=
    var style =3D { }, transform, i =3D this.transforms.length;=0A=
    while(i--)=0A=
      style[(transform =3D this.transforms[i]).style] =3D =0A=
        transform.unit=3D=3D'color' ? '#'+=0A=
          (Math.round(transform.originalValue[0]+=0A=
            =
(transform.targetValue[0]-transform.originalValue[0])*position)).toColorP=
art() +=0A=
          (Math.round(transform.originalValue[1]+=0A=
            =
(transform.targetValue[1]-transform.originalValue[1])*position)).toColorP=
art() +=0A=
          (Math.round(transform.originalValue[2]+=0A=
            =
(transform.targetValue[2]-transform.originalValue[2])*position)).toColorP=
art() :=0A=
        (transform.originalValue +=0A=
          (transform.targetValue - transform.originalValue) * =
position).toFixed(3) + =0A=
            (transform.unit =3D=3D=3D null ? '' : transform.unit);=0A=
    this.element.setStyle(style, true);=0A=
  }=0A=
});=0A=
=0A=
Effect.Transform =3D Class.create({=0A=
  initialize: function(tracks){=0A=
    this.tracks  =3D [];=0A=
    this.options =3D arguments[1] || { };=0A=
    this.addTracks(tracks);=0A=
  },=0A=
  addTracks: function(tracks){=0A=
    tracks.each(function(track){=0A=
      track =3D $H(track);=0A=
      var data =3D track.values().first();=0A=
      this.tracks.push($H({=0A=
        ids:     track.keys().first(),=0A=
        effect:  Effect.Morph,=0A=
        options: { style: data }=0A=
      }));=0A=
    }.bind(this));=0A=
    return this;=0A=
  },=0A=
  play: function(){=0A=
    return new Effect.Parallel(=0A=
      this.tracks.map(function(track){=0A=
        var ids =3D track.get('ids'), effect =3D track.get('effect'), =
options =3D track.get('options');=0A=
        var elements =3D [$(ids) || $$(ids)].flatten();=0A=
        return elements.map(function(e){ return new effect(e, =
Object.extend({ sync:true }, options)) });=0A=
      }).flatten(),=0A=
      this.options=0A=
    );=0A=
  }=0A=
});=0A=
=0A=
Element.CSS_PROPERTIES =3D $w(=0A=
  'backgroundColor backgroundPosition borderBottomColor =
borderBottomStyle ' + =0A=
  'borderBottomWidth borderLeftColor borderLeftStyle borderLeftWidth ' +=0A=
  'borderRightColor borderRightStyle borderRightWidth borderSpacing ' +=0A=
  'borderTopColor borderTopStyle borderTopWidth bottom clip color ' +=0A=
  'fontSize fontWeight height left letterSpacing lineHeight ' +=0A=
  'marginBottom marginLeft marginRight marginTop markerOffset maxHeight =
'+=0A=
  'maxWidth minHeight minWidth opacity outlineColor outlineOffset ' +=0A=
  'outlineWidth paddingBottom paddingLeft paddingRight paddingTop ' +=0A=
  'right textIndent top width wordSpacing zIndex');=0A=
  =0A=
Element.CSS_LENGTH =3D =
/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;=0A=
=0A=
String.__parseStyleElement =3D document.createElement('div');=0A=
String.prototype.parseStyle =3D function(){=0A=
  var style, styleRules =3D $H();=0A=
  if (Prototype.Browser.WebKit)=0A=
    style =3D new Element('div',{style:this}).style;=0A=
  else {=0A=
    String.__parseStyleElement.innerHTML =3D '<div style=3D"' + this + =
'"></div>';=0A=
    style =3D String.__parseStyleElement.childNodes[0].style;=0A=
  }=0A=
  =0A=
  Element.CSS_PROPERTIES.each(function(property){=0A=
    if (style[property]) styleRules.set(property, style[property]); =0A=
  });=0A=
  =0A=
  if (Prototype.Browser.IE && this.include('opacity'))=0A=
    styleRules.set('opacity', =
this.match(/opacity:\s*((?:0|1)?(?:\.\d*)?)/)[1]);=0A=
=0A=
  return styleRules;=0A=
};=0A=
=0A=
if (document.defaultView && document.defaultView.getComputedStyle) {=0A=
  Element.getStyles =3D function(element) {=0A=
    var css =3D document.defaultView.getComputedStyle($(element), null);=0A=
    return Element.CSS_PROPERTIES.inject({ }, function(styles, property) =
{=0A=
      styles[property] =3D css[property];=0A=
      return styles;=0A=
    });=0A=
  };=0A=
} else {=0A=
  Element.getStyles =3D function(element) {=0A=
    element =3D $(element);=0A=
    var css =3D element.currentStyle, styles;=0A=
    styles =3D Element.CSS_PROPERTIES.inject({ }, function(hash, =
property) {=0A=
      hash.set(property, css[property]);=0A=
      return hash;=0A=
    });=0A=
    if (!styles.opacity) styles.set('opacity', element.getOpacity());=0A=
    return styles;=0A=
  };=0A=
};=0A=
=0A=
Effect.Methods =3D {=0A=
  morph: function(element, style) {=0A=
    element =3D $(element);=0A=
    new Effect.Morph(element, Object.extend({ style: style }, =
arguments[2] || { }));=0A=
    return element;=0A=
  },=0A=
  visualEffect: function(element, effect, options) {=0A=
    element =3D $(element)=0A=
    var s =3D effect.dasherize().camelize(), klass =3D =
s.charAt(0).toUpperCase() + s.substring(1);=0A=
    new Effect[klass](element, options);=0A=
    return element;=0A=
  },=0A=
  highlight: function(element, options) {=0A=
    element =3D $(element);=0A=
    new Effect.Highlight(element, options);=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
$w('fade appear grow shrink fold blindUp blindDown slideUp slideDown '+=0A=
  'pulsate shake puff squish switchOff dropOut').each(=0A=
  function(effect) { =0A=
    Effect.Methods[effect] =3D function(element, options){=0A=
      element =3D $(element);=0A=
      Effect[effect.charAt(0).toUpperCase() + =
effect.substring(1)](element, options);=0A=
      return element;=0A=
    }=0A=
  }=0A=
);=0A=
=0A=
$w('getInlineOpacity forceRerendering setContentZoom collectTextNodes =
collectTextNodesIgnoreClass getStyles').each( =0A=
  function(f) { Effect.Methods[f] =3D Element[f]; }=0A=
);=0A=
=0A=
Element.addMethods(Effect.Methods);=0A=
=0A=
if(typeof Effect =3D=3D 'undefined')=0A=
  throw("controls.js requires including script.aculo.us' effects.js =
library");=0A=
=0A=
var Autocompleter =3D { }=0A=
Autocompleter.Base =3D Class.create({=0A=
  baseInitialize: function(element, update, options) {=0A=
    element          =3D $(element)=0A=
    this.element     =3D element; =0A=
    this.update      =3D $(update);  =0A=
    this.hasFocus    =3D false; =0A=
    this.changed     =3D false; =0A=
    this.active      =3D false; =0A=
    this.index       =3D 0;     =0A=
    this.entryCount  =3D 0;=0A=
    this.oldElementValue =3D this.element.value;=0A=
=0A=
    if(this.setOptions)=0A=
      this.setOptions(options);=0A=
    else=0A=
      this.options =3D options || { };=0A=
=0A=
    this.options.paramName    =3D this.options.paramName || =
this.element.name;=0A=
    this.options.tokens       =3D this.options.tokens || [];=0A=
    this.options.frequency    =3D this.options.frequency || 0.4;=0A=
    this.options.minChars     =3D this.options.minChars || 1;=0A=
    this.options.onShow       =3D this.options.onShow || =0A=
      function(element, update){ =0A=
        if(!update.style.position || =
update.style.position=3D=3D'absolute') {=0A=
          update.style.position =3D 'absolute';=0A=
          Position.clone(element, update, {=0A=
            setHeight: false, =0A=
            offsetTop: element.offsetHeight=0A=
          });=0A=
        }=0A=
        Effect.Appear(update,{duration:0.15});=0A=
      };=0A=
    this.options.onHide =3D this.options.onHide || =0A=
      function(element, update){ new Effect.Fade(update,{duration:0.15}) =
};=0A=
=0A=
    if(typeof(this.options.tokens) =3D=3D 'string') =0A=
      this.options.tokens =3D new Array(this.options.tokens);=0A=
    // Force carriage returns as token delimiters anyway=0A=
    if (!this.options.tokens.include('\n'))=0A=
      this.options.tokens.push('\n');=0A=
=0A=
    this.observer =3D null;=0A=
    =0A=
    this.element.setAttribute('autocomplete','off');=0A=
=0A=
    Element.hide(this.update);=0A=
=0A=
    Event.observe(this.element, 'blur', =
this.onBlur.bindAsEventListener(this));=0A=
    Event.observe(this.element, 'keypress', =
this.onKeyPress.bindAsEventListener(this));=0A=
  },=0A=
=0A=
  show: function() {=0A=
    if(Element.getStyle(this.update, 'display')=3D=3D'none') =
this.options.onShow(this.element, this.update);=0A=
    if(!this.iefix && =0A=
      (Prototype.Browser.IE) &&=0A=
      (Element.getStyle(this.update, 'position')=3D=3D'absolute')) {=0A=
      new Insertion.After(this.update, =0A=
       '<iframe id=3D"' + this.update.id + '_iefix" '+=0A=
       =
'style=3D"display:none;position:absolute;filter:progid:DXImageTransform.M=
icrosoft.Alpha(opacity=3D0);" ' +=0A=
       'src=3D"javascript:false;" frameborder=3D"0" =
scrolling=3D"no"></iframe>');=0A=
      this.iefix =3D $(this.update.id+'_iefix');=0A=
    }=0A=
    if(this.iefix) setTimeout(this.fixIEOverlapping.bind(this), 50);=0A=
  },=0A=
  =0A=
  fixIEOverlapping: function() {=0A=
    Position.clone(this.update, this.iefix, =
{setTop:(!this.update.style.height)});=0A=
    this.iefix.style.zIndex =3D 1;=0A=
    this.update.style.zIndex =3D 2;=0A=
    Element.show(this.iefix);=0A=
  },=0A=
=0A=
  hide: function() {=0A=
    this.stopIndicator();=0A=
    if(Element.getStyle(this.update, 'display')!=3D'none') =
this.options.onHide(this.element, this.update);=0A=
    if(this.iefix) Element.hide(this.iefix);=0A=
  },=0A=
=0A=
  startIndicator: function() {=0A=
    if(this.options.indicator) Element.show(this.options.indicator);=0A=
  },=0A=
=0A=
  stopIndicator: function() {=0A=
    if(this.options.indicator) Element.hide(this.options.indicator);=0A=
  },=0A=
=0A=
  onKeyPress: function(event) {=0A=
    if(this.active)=0A=
      switch(event.keyCode) {=0A=
       case Event.KEY_TAB:=0A=
       case Event.KEY_RETURN:=0A=
         this.selectEntry();=0A=
         Event.stop(event);=0A=
       case Event.KEY_ESC:=0A=
         this.hide();=0A=
         this.active =3D false;=0A=
         Event.stop(event);=0A=
         return;=0A=
       case Event.KEY_LEFT:=0A=
       case Event.KEY_RIGHT:=0A=
         return;=0A=
       case Event.KEY_UP:=0A=
         this.markPrevious();=0A=
         this.render();=0A=
         if(Prototype.Browser.WebKit) Event.stop(event);=0A=
         return;=0A=
       case Event.KEY_DOWN:=0A=
         this.markNext();=0A=
         this.render();=0A=
         if(Prototype.Browser.WebKit) Event.stop(event);=0A=
         return;=0A=
      }=0A=
     else =0A=
       if(event.keyCode=3D=3DEvent.KEY_TAB || =
event.keyCode=3D=3DEvent.KEY_RETURN || =0A=
         (Prototype.Browser.WebKit > 0 && event.keyCode =3D=3D 0)) =
return;=0A=
=0A=
    this.changed =3D true;=0A=
    this.hasFocus =3D true;=0A=
=0A=
    if(this.observer) clearTimeout(this.observer);=0A=
      this.observer =3D =0A=
        setTimeout(this.onObserverEvent.bind(this), =
this.options.frequency*1000);=0A=
  },=0A=
=0A=
  activate: function() {=0A=
    this.changed =3D false;=0A=
    this.hasFocus =3D true;=0A=
    this.getUpdatedChoices();=0A=
  },=0A=
=0A=
  onHover: function(event) {=0A=
    var element =3D Event.findElement(event, 'LI');=0A=
    if(this.index !=3D element.autocompleteIndex) =0A=
    {=0A=
        this.index =3D element.autocompleteIndex;=0A=
        this.render();=0A=
    }=0A=
    Event.stop(event);=0A=
  },=0A=
  =0A=
  onClick: function(event) {=0A=
    var element =3D Event.findElement(event, 'LI');=0A=
    this.index =3D element.autocompleteIndex;=0A=
    this.selectEntry();=0A=
    this.hide();=0A=
  },=0A=
  =0A=
  onBlur: function(event) {=0A=
    // needed to make click events working=0A=
    setTimeout(this.hide.bind(this), 250);=0A=
    this.hasFocus =3D false;=0A=
    this.active =3D false;     =0A=
  }, =0A=
  =0A=
  render: function() {=0A=
    if(this.entryCount > 0) {=0A=
      for (var i =3D 0; i < this.entryCount; i++)=0A=
        this.index=3D=3Di ? =0A=
          Element.addClassName(this.getEntry(i),"selected") : =0A=
          Element.removeClassName(this.getEntry(i),"selected");=0A=
      if(this.hasFocus) { =0A=
        this.show();=0A=
        this.active =3D true;=0A=
      }=0A=
    } else {=0A=
      this.active =3D false;=0A=
      this.hide();=0A=
    }=0A=
  },=0A=
  =0A=
  markPrevious: function() {=0A=
    if(this.index > 0) this.index--=0A=
      else this.index =3D this.entryCount-1;=0A=
    this.getEntry(this.index).scrollIntoView(true);=0A=
  },=0A=
  =0A=
  markNext: function() {=0A=
    if(this.index < this.entryCount-1) this.index++=0A=
      else this.index =3D 0;=0A=
    this.getEntry(this.index).scrollIntoView(false);=0A=
  },=0A=
  =0A=
  getEntry: function(index) {=0A=
    return this.update.firstChild.childNodes[index];=0A=
  },=0A=
  =0A=
  getCurrentEntry: function() {=0A=
    return this.getEntry(this.index);=0A=
  },=0A=
  =0A=
  selectEntry: function() {=0A=
    this.active =3D false;=0A=
    this.updateElement(this.getCurrentEntry());=0A=
  },=0A=
=0A=
  updateElement: function(selectedElement) {=0A=
    if (this.options.updateElement) {=0A=
      this.options.updateElement(selectedElement);=0A=
      return;=0A=
    }=0A=
    var value =3D '';=0A=
    if (this.options.select) {=0A=
      var nodes =3D $(selectedElement).select('.' + this.options.select) =
|| [];=0A=
      if(nodes.length>0) value =3D Element.collectTextNodes(nodes[0], =
this.options.select);=0A=
    } else=0A=
      value =3D Element.collectTextNodesIgnoreClass(selectedElement, =
'informal');=0A=
    =0A=
    var bounds =3D this.getTokenBounds();=0A=
    if (bounds[0] !=3D -1) {=0A=
      var newValue =3D this.element.value.substr(0, bounds[0]);=0A=
      var whitespace =3D =
this.element.value.substr(bounds[0]).match(/^\s+/);=0A=
      if (whitespace)=0A=
        newValue +=3D whitespace[0];=0A=
      this.element.value =3D newValue + value + =
this.element.value.substr(bounds[1]);=0A=
    } else {=0A=
      this.element.value =3D value;=0A=
    }=0A=
    this.oldElementValue =3D this.element.value;=0A=
    this.element.focus();=0A=
    =0A=
    if (this.options.afterUpdateElement)=0A=
      this.options.afterUpdateElement(this.element, selectedElement);=0A=
  },=0A=
=0A=
  updateChoices: function(choices) {=0A=
    if(!this.changed && this.hasFocus) {=0A=
      this.update.innerHTML =3D choices;=0A=
      Element.cleanWhitespace(this.update);=0A=
      Element.cleanWhitespace(this.update.down());=0A=
=0A=
      if(this.update.firstChild && this.update.down().childNodes) {=0A=
        this.entryCount =3D =0A=
          this.update.down().childNodes.length;=0A=
        for (var i =3D 0; i < this.entryCount; i++) {=0A=
          var entry =3D this.getEntry(i);=0A=
          entry.autocompleteIndex =3D i;=0A=
          this.addObservers(entry);=0A=
        }=0A=
      } else { =0A=
        this.entryCount =3D 0;=0A=
      }=0A=
=0A=
      this.stopIndicator();=0A=
      this.index =3D 0;=0A=
      =0A=
      if(this.entryCount=3D=3D1 && this.options.autoSelect) {=0A=
        this.selectEntry();=0A=
        this.hide();=0A=
      } else {=0A=
        this.render();=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  addObservers: function(element) {=0A=
    Event.observe(element, "mouseover", =
this.onHover.bindAsEventListener(this));=0A=
    Event.observe(element, "click", =
this.onClick.bindAsEventListener(this));=0A=
  },=0A=
=0A=
  onObserverEvent: function() {=0A=
    this.changed =3D false;   =0A=
    this.tokenBounds =3D null;=0A=
    if(this.getToken().length>=3Dthis.options.minChars) {=0A=
      this.getUpdatedChoices();=0A=
    } else {=0A=
      this.active =3D false;=0A=
      this.hide();=0A=
    }=0A=
    this.oldElementValue =3D this.element.value;=0A=
  },=0A=
=0A=
  getToken: function() {=0A=
    var bounds =3D this.getTokenBounds();=0A=
    return this.element.value.substring(bounds[0], bounds[1]).strip();=0A=
  },=0A=
=0A=
  getTokenBounds: function() {=0A=
    if (null !=3D this.tokenBounds) return this.tokenBounds;=0A=
    var value =3D this.element.value;=0A=
    if (value.strip().empty()) return [-1, 0];=0A=
    var diff =3D arguments.callee.getFirstDifferencePos(value, =
this.oldElementValue);=0A=
    var offset =3D (diff =3D=3D this.oldElementValue.length ? 1 : 0);=0A=
    var prevTokenPos =3D -1, nextTokenPos =3D value.length;=0A=
    var tp;=0A=
    for (var index =3D 0, l =3D this.options.tokens.length; index < l; =
++index) {=0A=
      tp =3D value.lastIndexOf(this.options.tokens[index], diff + offset =
- 1);=0A=
      if (tp > prevTokenPos) prevTokenPos =3D tp;=0A=
      tp =3D value.indexOf(this.options.tokens[index], diff + offset);=0A=
      if (-1 !=3D tp && tp < nextTokenPos) nextTokenPos =3D tp;=0A=
    }=0A=
    return (this.tokenBounds =3D [prevTokenPos + 1, nextTokenPos]);=0A=
  }=0A=
});=0A=
=0A=
Autocompleter.Base.prototype.getTokenBounds.getFirstDifferencePos =3D =
function(newS, oldS) {=0A=
  var boundary =3D Math.min(newS.length, oldS.length);=0A=
  for (var index =3D 0; index < boundary; ++index)=0A=
    if (newS[index] !=3D oldS[index])=0A=
      return index;=0A=
  return boundary;=0A=
};=0A=
=0A=
Ajax.Autocompleter =3D Class.create(Autocompleter.Base, {=0A=
  initialize: function(element, update, url, options) {=0A=
    this.baseInitialize(element, update, options);=0A=
    this.options.asynchronous  =3D true;=0A=
    this.options.onComplete    =3D this.onComplete.bind(this);=0A=
    this.options.defaultParams =3D this.options.parameters || null;=0A=
    this.url                   =3D url;=0A=
  },=0A=
=0A=
  getUpdatedChoices: function() {=0A=
    this.startIndicator();=0A=
    =0A=
    var entry =3D encodeURIComponent(this.options.paramName) + '=3D' + =0A=
      encodeURIComponent(this.getToken());=0A=
=0A=
    this.options.parameters =3D this.options.callback ?=0A=
      this.options.callback(this.element, entry) : entry;=0A=
=0A=
    if(this.options.defaultParams) =0A=
      this.options.parameters +=3D '&' + this.options.defaultParams;=0A=
    =0A=
    new Ajax.Request(this.url, this.options);=0A=
  },=0A=
=0A=
  onComplete: function(request) {=0A=
    this.updateChoices(request.responseText);=0A=
  }=0A=
});=0A=
=0A=
// The local array autocompleter. Used when you'd prefer to=0A=
// inject an array of autocompletion options into the page, rather=0A=
// than sending out Ajax queries, which can be quite slow sometimes.=0A=
//=0A=
// The constructor takes four parameters. The first two are, as usual,=0A=
// the id of the monitored textbox, and id of the autocompletion menu.=0A=
// The third is the array you want to autocomplete from, and the fourth=0A=
// is the options block.=0A=
//=0A=
// Extra local autocompletion options:=0A=
// - choices - How many autocompletion choices to offer=0A=
//=0A=
// - partialSearch - If false, the autocompleter will match entered=0A=
//                    text only at the beginning of strings in the =0A=
//                    autocomplete array. Defaults to true, which will=0A=
//                    match text at the beginning of any *word* in the=0A=
//                    strings in the autocomplete array. If you want to=0A=
//                    search anywhere in the string, additionally set=0A=
//                    the option fullSearch to true (default: off).=0A=
//=0A=
// - fullSsearch - Search anywhere in autocomplete array strings.=0A=
//=0A=
// - partialChars - How many characters to enter before triggering=0A=
//                   a partial match (unlike minChars, which defines=0A=
//                   how many characters are required to do any match=0A=
//                   at all). Defaults to 2.=0A=
//=0A=
// - ignoreCase - Whether to ignore case when autocompleting.=0A=
//                 Defaults to true.=0A=
//=0A=
// It's possible to pass in a custom function as the 'selector' =0A=
// option, if you prefer to write your own autocompletion logic.=0A=
// In that case, the other options above will not apply unless=0A=
// you support them.=0A=
=0A=
Autocompleter.Local =3D Class.create(Autocompleter.Base, {=0A=
  initialize: function(element, update, array, options) {=0A=
    this.baseInitialize(element, update, options);=0A=
    this.options.array =3D array;=0A=
  },=0A=
=0A=
  getUpdatedChoices: function() {=0A=
    this.updateChoices(this.options.selector(this));=0A=
  },=0A=
=0A=
  setOptions: function(options) {=0A=
    this.options =3D Object.extend({=0A=
      choices: 10,=0A=
      partialSearch: true,=0A=
      partialChars: 2,=0A=
      ignoreCase: true,=0A=
      fullSearch: false,=0A=
      selector: function(instance) {=0A=
        var ret       =3D []; // Beginning matches=0A=
        var partial   =3D []; // Inside matches=0A=
        var entry     =3D instance.getToken();=0A=
        var count     =3D 0;=0A=
=0A=
        for (var i =3D 0; i < instance.options.array.length &&  =0A=
          ret.length < instance.options.choices ; i++) { =0A=
=0A=
          var elem =3D instance.options.array[i];=0A=
          var foundPos =3D instance.options.ignoreCase ? =0A=
            elem.toLowerCase().indexOf(entry.toLowerCase()) : =0A=
            elem.indexOf(entry);=0A=
=0A=
          while (foundPos !=3D -1) {=0A=
            if (foundPos =3D=3D 0 && elem.length !=3D entry.length) { =0A=
              ret.push("<li><strong>" + elem.substr(0, entry.length) + =
"</strong>" + =0A=
                elem.substr(entry.length) + "</li>");=0A=
              break;=0A=
            } else if (entry.length >=3D instance.options.partialChars =
&& =0A=
              instance.options.partialSearch && foundPos !=3D -1) {=0A=
              if (instance.options.fullSearch || =
/\s/.test(elem.substr(foundPos-1,1))) {=0A=
                partial.push("<li>" + elem.substr(0, foundPos) + =
"<strong>" +=0A=
                  elem.substr(foundPos, entry.length) + "</strong>" + =
elem.substr(=0A=
                  foundPos + entry.length) + "</li>");=0A=
                break;=0A=
              }=0A=
            }=0A=
=0A=
            foundPos =3D instance.options.ignoreCase ? =0A=
              elem.toLowerCase().indexOf(entry.toLowerCase(), foundPos + =
1) : =0A=
              elem.indexOf(entry, foundPos + 1);=0A=
=0A=
          }=0A=
        }=0A=
        if (partial.length)=0A=
          ret =3D ret.concat(partial.slice(0, instance.options.choices - =
ret.length))=0A=
        return "<ul>" + ret.join('') + "</ul>";=0A=
      }=0A=
    }, options || { });=0A=
  }=0A=
});=0A=
=0A=
// AJAX in-place editor and collection editor=0A=
// Full rewrite by Christophe Porteneuve <tdd@tddsworld.com> (April =
2007).=0A=
=0A=
// Use this if you notice weird scrolling problems on some browsers,=0A=
// the DOM might be a bit confused when this gets called so do this=0A=
// waits 1 ms (with setTimeout) until it does the activation=0A=
Field.scrollFreeActivate =3D function(field) {=0A=
  setTimeout(function() {=0A=
    Field.activate(field);=0A=
  }, 1);=0A=
}=0A=
=0A=
Ajax.InPlaceEditor =3D Class.create({=0A=
  initialize: function(element, url, options) {=0A=
    this.url =3D url;=0A=
    this.element =3D element =3D $(element);=0A=
    this.prepareOptions();=0A=
    this._controls =3D { };=0A=
    arguments.callee.dealWithDeprecatedOptions(options); // DEPRECATION =
LAYER!!!=0A=
    Object.extend(this.options, options || { });=0A=
    if (!this.options.formId && this.element.id) {=0A=
      this.options.formId =3D this.element.id + '-inplaceeditor';=0A=
      if ($(this.options.formId))=0A=
        this.options.formId =3D '';=0A=
    }=0A=
    if (this.options.externalControl)=0A=
      this.options.externalControl =3D $(this.options.externalControl);=0A=
    if (!this.options.externalControl)=0A=
      this.options.externalControlOnly =3D false;=0A=
    this._originalBackground =3D =
this.element.getStyle('background-color') || 'transparent';=0A=
    this.element.title =3D this.options.clickToEditText;=0A=
    this._boundCancelHandler =3D this.handleFormCancellation.bind(this);=0A=
    this._boundComplete =3D (this.options.onComplete || =
Prototype.emptyFunction).bind(this);=0A=
    this._boundFailureHandler =3D this.handleAJAXFailure.bind(this);=0A=
    this._boundSubmitHandler =3D this.handleFormSubmission.bind(this);=0A=
    this._boundWrapperHandler =3D this.wrapUp.bind(this);=0A=
    this.registerListeners();=0A=
  },=0A=
  checkForEscapeOrReturn: function(e) {=0A=
    if (!this._editing || e.ctrlKey || e.altKey || e.shiftKey) return;=0A=
    if (Event.KEY_ESC =3D=3D e.keyCode)=0A=
      this.handleFormCancellation(e);=0A=
    else if (Event.KEY_RETURN =3D=3D e.keyCode)=0A=
      this.handleFormSubmission(e);=0A=
  },=0A=
  createControl: function(mode, handler, extraClasses) {=0A=
    var control =3D this.options[mode + 'Control'];=0A=
    var text =3D this.options[mode + 'Text'];=0A=
    if ('button' =3D=3D control) {=0A=
      var btn =3D document.createElement('input');=0A=
      btn.type =3D 'submit';=0A=
      btn.value =3D text;=0A=
      btn.className =3D 'editor_' + mode + '_button';=0A=
      if ('cancel' =3D=3D mode)=0A=
        btn.onclick =3D this._boundCancelHandler;=0A=
      this._form.appendChild(btn);=0A=
      this._controls[mode] =3D btn;=0A=
    } else if ('link' =3D=3D control) {=0A=
      var link =3D document.createElement('a');=0A=
      link.href =3D '#';=0A=
      link.appendChild(document.createTextNode(text));=0A=
      link.onclick =3D 'cancel' =3D=3D mode ? this._boundCancelHandler : =
this._boundSubmitHandler;=0A=
      link.className =3D 'editor_' + mode + '_link';=0A=
      if (extraClasses)=0A=
        link.className +=3D ' ' + extraClasses;=0A=
      this._form.appendChild(link);=0A=
      this._controls[mode] =3D link;=0A=
    }=0A=
  },=0A=
  createEditField: function() {=0A=
    var text =3D (this.options.loadTextURL ? this.options.loadingText : =
this.getText());=0A=
    var fld;=0A=
    if (1 >=3D this.options.rows && !/\r|\n/.test(this.getText())) {=0A=
      fld =3D document.createElement('input');=0A=
      fld.type =3D 'text';=0A=
      var size =3D this.options.size || this.options.cols || 0;=0A=
      if (0 < size) fld.size =3D size;=0A=
    } else {=0A=
      fld =3D document.createElement('textarea');=0A=
      fld.rows =3D (1 >=3D this.options.rows ? this.options.autoRows : =
this.options.rows);=0A=
      fld.cols =3D this.options.cols || 40;=0A=
    }=0A=
    fld.name =3D this.options.paramName;=0A=
    fld.value =3D text; // No HTML breaks conversion anymore=0A=
    fld.className =3D 'editor_field';=0A=
    if (this.options.submitOnBlur)=0A=
      fld.onblur =3D this._boundSubmitHandler;=0A=
    this._controls.editor =3D fld;=0A=
    if (this.options.loadTextURL)=0A=
      this.loadExternalText();=0A=
    this._form.appendChild(this._controls.editor);=0A=
  },=0A=
  createForm: function() {=0A=
    var ipe =3D this;=0A=
    function addText(mode, condition) {=0A=
      var text =3D ipe.options['text' + mode + 'Controls'];=0A=
      if (!text || condition =3D=3D=3D false) return;=0A=
      ipe._form.appendChild(document.createTextNode(text));=0A=
    };=0A=
    this._form =3D $(document.createElement('form'));=0A=
    this._form.id =3D this.options.formId;=0A=
    this._form.addClassName(this.options.formClassName);=0A=
    this._form.onsubmit =3D this._boundSubmitHandler;=0A=
    this.createEditField();=0A=
    if ('textarea' =3D=3D this._controls.editor.tagName.toLowerCase())=0A=
      this._form.appendChild(document.createElement('br'));=0A=
    if (this.options.onFormCustomization)=0A=
      this.options.onFormCustomization(this, this._form);=0A=
    addText('Before', this.options.okControl || =
this.options.cancelControl);=0A=
    this.createControl('ok', this._boundSubmitHandler);=0A=
    addText('Between', this.options.okControl && =
this.options.cancelControl);=0A=
    this.createControl('cancel', this._boundCancelHandler, =
'editor_cancel');=0A=
    addText('After', this.options.okControl || =
this.options.cancelControl);=0A=
  },=0A=
  destroy: function() {=0A=
    if (this._oldInnerHTML)=0A=
      this.element.innerHTML =3D this._oldInnerHTML;=0A=
    this.leaveEditMode();=0A=
    this.unregisterListeners();=0A=
  },=0A=
  enterEditMode: function(e) {=0A=
    if (this._saving || this._editing) return;=0A=
    this._editing =3D true;=0A=
    this.triggerCallback('onEnterEditMode');=0A=
    if (this.options.externalControl)=0A=
      this.options.externalControl.hide();=0A=
    this.element.hide();=0A=
    this.createForm();=0A=
    this.element.parentNode.insertBefore(this._form, this.element);=0A=
    if (!this.options.loadTextURL)=0A=
      this.postProcessEditField();=0A=
    if (e) Event.stop(e);=0A=
  },=0A=
  enterHover: function(e) {=0A=
    if (this.options.hoverClassName)=0A=
      this.element.addClassName(this.options.hoverClassName);=0A=
    if (this._saving) return;=0A=
    this.triggerCallback('onEnterHover');=0A=
  },=0A=
  getText: function() {=0A=
    return this.element.innerHTML;=0A=
  },=0A=
  handleAJAXFailure: function(transport) {=0A=
    this.triggerCallback('onFailure', transport);=0A=
    if (this._oldInnerHTML) {=0A=
      this.element.innerHTML =3D this._oldInnerHTML;=0A=
      this._oldInnerHTML =3D null;=0A=
    }=0A=
  },=0A=
  handleFormCancellation: function(e) {=0A=
    this.wrapUp();=0A=
    if (e) Event.stop(e);=0A=
  },=0A=
  handleFormSubmission: function(e) {=0A=
    var form =3D this._form;=0A=
    var value =3D $F(this._controls.editor);=0A=
    this.prepareSubmission();=0A=
    var params =3D this.options.callback(form, value) || '';=0A=
    if (Object.isString(params))=0A=
      params =3D params.toQueryParams();=0A=
    params.editorId =3D this.element.id;=0A=
    if (this.options.htmlResponse) {=0A=
      var options =3D Object.extend({ evalScripts: true }, =
this.options.ajaxOptions);=0A=
      Object.extend(options, {=0A=
        parameters: params,=0A=
        onComplete: this._boundWrapperHandler,=0A=
        onFailure: this._boundFailureHandler=0A=
      });=0A=
      new Ajax.Updater({ success: this.element }, this.url, options);=0A=
    } else {=0A=
      var options =3D Object.extend({ method: 'get' }, =
this.options.ajaxOptions);=0A=
      Object.extend(options, {=0A=
        parameters: params,=0A=
        onComplete: this._boundWrapperHandler,=0A=
        onFailure: this._boundFailureHandler=0A=
      });=0A=
      new Ajax.Request(this.url, options);=0A=
    }=0A=
    if (e) Event.stop(e);=0A=
  },=0A=
  leaveEditMode: function() {=0A=
    this.element.removeClassName(this.options.savingClassName);=0A=
    this.removeForm();=0A=
    this.leaveHover();=0A=
    this.element.style.backgroundColor =3D this._originalBackground;=0A=
    this.element.show();=0A=
    if (this.options.externalControl)=0A=
      this.options.externalControl.show();=0A=
    this._saving =3D false;=0A=
    this._editing =3D false;=0A=
    this._oldInnerHTML =3D null;=0A=
    this.triggerCallback('onLeaveEditMode');=0A=
  },=0A=
  leaveHover: function(e) {=0A=
    if (this.options.hoverClassName)=0A=
      this.element.removeClassName(this.options.hoverClassName);=0A=
    if (this._saving) return;=0A=
    this.triggerCallback('onLeaveHover');=0A=
  },=0A=
  loadExternalText: function() {=0A=
    this._form.addClassName(this.options.loadingClassName);=0A=
    this._controls.editor.disabled =3D true;=0A=
    var options =3D Object.extend({ method: 'get' }, =
this.options.ajaxOptions);=0A=
    Object.extend(options, {=0A=
      parameters: 'editorId=3D' + encodeURIComponent(this.element.id),=0A=
      onComplete: Prototype.emptyFunction,=0A=
      onSuccess: function(transport) {=0A=
        this._form.removeClassName(this.options.loadingClassName);=0A=
        var text =3D transport.responseText;=0A=
        if (this.options.stripLoadedTextTags)=0A=
          text =3D text.stripTags();=0A=
        this._controls.editor.value =3D text;=0A=
        this._controls.editor.disabled =3D false;=0A=
        this.postProcessEditField();=0A=
      }.bind(this),=0A=
      onFailure: this._boundFailureHandler=0A=
    });=0A=
    new Ajax.Request(this.options.loadTextURL, options);=0A=
  },=0A=
  postProcessEditField: function() {=0A=
    var fpc =3D this.options.fieldPostCreation;=0A=
    if (fpc)=0A=
      $(this._controls.editor)['focus' =3D=3D fpc ? 'focus' : =
'activate']();=0A=
  },=0A=
  prepareOptions: function() {=0A=
    this.options =3D Object.clone(Ajax.InPlaceEditor.DefaultOptions);=0A=
    Object.extend(this.options, Ajax.InPlaceEditor.DefaultCallbacks);=0A=
    [this._extraDefaultOptions].flatten().compact().each(function(defs) {=0A=
      Object.extend(this.options, defs);=0A=
    }.bind(this));=0A=
  },=0A=
  prepareSubmission: function() {=0A=
    this._saving =3D true;=0A=
    this.removeForm();=0A=
    this.leaveHover();=0A=
    this.showSaving();=0A=
  },=0A=
  registerListeners: function() {=0A=
    this._listeners =3D { };=0A=
    var listener;=0A=
    $H(Ajax.InPlaceEditor.Listeners).each(function(pair) {=0A=
      listener =3D this[pair.value].bind(this);=0A=
      this._listeners[pair.key] =3D listener;=0A=
      if (!this.options.externalControlOnly)=0A=
        this.element.observe(pair.key, listener);=0A=
      if (this.options.externalControl)=0A=
        this.options.externalControl.observe(pair.key, listener);=0A=
    }.bind(this));=0A=
  },=0A=
  removeForm: function() {=0A=
    if (!this._form) return;=0A=
    this._form.remove();=0A=
    this._form =3D null;=0A=
    this._controls =3D { };=0A=
  },=0A=
  showSaving: function() {=0A=
    this._oldInnerHTML =3D this.element.innerHTML;=0A=
    this.element.innerHTML =3D this.options.savingText;=0A=
    this.element.addClassName(this.options.savingClassName);=0A=
    this.element.style.backgroundColor =3D this._originalBackground;=0A=
    this.element.show();=0A=
  },=0A=
  triggerCallback: function(cbName, arg) {=0A=
    if ('function' =3D=3D typeof this.options[cbName]) {=0A=
      this.options[cbName](this, arg);=0A=
    }=0A=
  },=0A=
  unregisterListeners: function() {=0A=
    $H(this._listeners).each(function(pair) {=0A=
      if (!this.options.externalControlOnly)=0A=
        this.element.stopObserving(pair.key, pair.value);=0A=
      if (this.options.externalControl)=0A=
        this.options.externalControl.stopObserving(pair.key, pair.value);=0A=
    }.bind(this));=0A=
  },=0A=
  wrapUp: function(transport) {=0A=
    this.leaveEditMode();=0A=
    // Can't use triggerCallback due to backward compatibility: requires=0A=
    // binding + direct element=0A=
    this._boundComplete(transport, this.element);=0A=
  }=0A=
});=0A=
=0A=
Object.extend(Ajax.InPlaceEditor.prototype, {=0A=
  dispose: Ajax.InPlaceEditor.prototype.destroy=0A=
});=0A=
=0A=
Ajax.InPlaceCollectionEditor =3D Class.create(Ajax.InPlaceEditor, {=0A=
  initialize: function($super, element, url, options) {=0A=
    this._extraDefaultOptions =3D =
Ajax.InPlaceCollectionEditor.DefaultOptions;=0A=
    $super(element, url, options);=0A=
  },=0A=
=0A=
  createEditField: function() {=0A=
    var list =3D document.createElement('select');=0A=
    list.name =3D this.options.paramName;=0A=
    list.size =3D 1;=0A=
    this._controls.editor =3D list;=0A=
    this._collection =3D this.options.collection || [];=0A=
    if (this.options.loadCollectionURL)=0A=
      this.loadCollection();=0A=
    else=0A=
      this.checkForExternalText();=0A=
    this._form.appendChild(this._controls.editor);=0A=
  },=0A=
=0A=
  loadCollection: function() {=0A=
    this._form.addClassName(this.options.loadingClassName);=0A=
    this.showLoadingText(this.options.loadingCollectionText);=0A=
    var options =3D Object.extend({ method: 'get' }, =
this.options.ajaxOptions);=0A=
    Object.extend(options, {=0A=
      parameters: 'editorId=3D' + encodeURIComponent(this.element.id),=0A=
      onComplete: Prototype.emptyFunction,=0A=
      onSuccess: function(transport) {=0A=
        var js =3D transport.responseText.strip();=0A=
        if (!/^\[.*\]$/.test(js)) // TODO: improve sanity check=0A=
          throw 'Server returned an invalid collection representation.';=0A=
        this._collection =3D eval(js);=0A=
        this.checkForExternalText();=0A=
      }.bind(this),=0A=
      onFailure: this.onFailure=0A=
    });=0A=
    new Ajax.Request(this.options.loadCollectionURL, options);=0A=
  },=0A=
=0A=
  showLoadingText: function(text) {=0A=
    this._controls.editor.disabled =3D true;=0A=
    var tempOption =3D this._controls.editor.firstChild;=0A=
    if (!tempOption) {=0A=
      tempOption =3D document.createElement('option');=0A=
      tempOption.value =3D '';=0A=
      this._controls.editor.appendChild(tempOption);=0A=
      tempOption.selected =3D true;=0A=
    }=0A=
    tempOption.update((text || '').stripScripts().stripTags());=0A=
  },=0A=
=0A=
  checkForExternalText: function() {=0A=
    this._text =3D this.getText();=0A=
    if (this.options.loadTextURL)=0A=
      this.loadExternalText();=0A=
    else=0A=
      this.buildOptionList();=0A=
  },=0A=
=0A=
  loadExternalText: function() {=0A=
    this.showLoadingText(this.options.loadingText);=0A=
    var options =3D Object.extend({ method: 'get' }, =
this.options.ajaxOptions);=0A=
    Object.extend(options, {=0A=
      parameters: 'editorId=3D' + encodeURIComponent(this.element.id),=0A=
      onComplete: Prototype.emptyFunction,=0A=
      onSuccess: function(transport) {=0A=
        this._text =3D transport.responseText.strip();=0A=
        this.buildOptionList();=0A=
      }.bind(this),=0A=
      onFailure: this.onFailure=0A=
    });=0A=
    new Ajax.Request(this.options.loadTextURL, options);=0A=
  },=0A=
=0A=
  buildOptionList: function() {=0A=
    this._form.removeClassName(this.options.loadingClassName);=0A=
    this._collection =3D this._collection.map(function(entry) {=0A=
      return 2 =3D=3D=3D entry.length ? entry : [entry, entry].flatten();=0A=
    });=0A=
    var marker =3D ('value' in this.options) ? this.options.value : =
this._text;=0A=
    var textFound =3D this._collection.any(function(entry) {=0A=
      return entry[0] =3D=3D marker;=0A=
    }.bind(this));=0A=
    this._controls.editor.update('');=0A=
    var option;=0A=
    this._collection.each(function(entry, index) {=0A=
      option =3D document.createElement('option');=0A=
      option.value =3D entry[0];=0A=
      option.selected =3D textFound ? entry[0] =3D=3D marker : 0 =3D=3D =
index;=0A=
      option.appendChild(document.createTextNode(entry[1]));=0A=
      this._controls.editor.appendChild(option);=0A=
    }.bind(this));=0A=
    this._controls.editor.disabled =3D false;=0A=
    Field.scrollFreeActivate(this._controls.editor);=0A=
  }=0A=
});=0A=
=0A=
//**** DEPRECATION LAYER FOR InPlace[Collection]Editor! ****=0A=
//**** This only  exists for a while,  in order to  let ****=0A=
//**** users adapt to  the new API.  Read up on the new ****=0A=
//**** API and convert your code to it ASAP!            ****=0A=
=0A=
Ajax.InPlaceEditor.prototype.initialize.dealWithDeprecatedOptions =3D =
function(options) {=0A=
  if (!options) return;=0A=
  function fallback(name, expr) {=0A=
    if (name in options || expr =3D=3D=3D undefined) return;=0A=
    options[name] =3D expr;=0A=
  };=0A=
  fallback('cancelControl', (options.cancelLink ? 'link' : =
(options.cancelButton ? 'button' :=0A=
    options.cancelLink =3D=3D options.cancelButton =3D=3D false ? false =
: undefined)));=0A=
  fallback('okControl', (options.okLink ? 'link' : (options.okButton ? =
'button' :=0A=
    options.okLink =3D=3D options.okButton =3D=3D false ? false : =
undefined)));=0A=
  fallback('highlightColor', options.highlightcolor);=0A=
  fallback('highlightEndColor', options.highlightendcolor);=0A=
};=0A=
=0A=
Object.extend(Ajax.InPlaceEditor, {=0A=
  DefaultOptions: {=0A=
    ajaxOptions: { },=0A=
    autoRows: 3,                                // Use when multi-line =
w/ rows =3D=3D 1=0A=
    cancelControl: 'link',                      // 'link'|'button'|false=0A=
    cancelText: 'cancel',=0A=
    clickToEditText: 'Click to edit',=0A=
    externalControl: null,                      // id|elt=0A=
    externalControlOnly: false,=0A=
    fieldPostCreation: 'activate',              // =
'activate'|'focus'|false=0A=
    formClassName: 'inplaceeditor-form',=0A=
    formId: null,                               // id|elt=0A=
    highlightColor: '#ffff99',=0A=
    highlightEndColor: '#ffffff',=0A=
    hoverClassName: '',=0A=
    htmlResponse: true,=0A=
    loadingClassName: 'inplaceeditor-loading',=0A=
    loadingText: 'Loading...',=0A=
    okControl: 'button',                        // 'link'|'button'|false=0A=
    okText: 'ok',=0A=
    paramName: 'value',=0A=
    rows: 1,                                    // If 1 and multi-line, =
uses autoRows=0A=
    savingClassName: 'inplaceeditor-saving',=0A=
    savingText: 'Saving...',=0A=
    size: 0,=0A=
    stripLoadedTextTags: false,=0A=
    submitOnBlur: false,=0A=
    textAfterControls: '',=0A=
    textBeforeControls: '',=0A=
    textBetweenControls: ''=0A=
  },=0A=
  DefaultCallbacks: {=0A=
    callback: function(form) {=0A=
      return Form.serialize(form);=0A=
    },=0A=
    onComplete: function(transport, element) {=0A=
      // For backward compatibility, this one is bound to the IPE, and =
passes=0A=
      // the element directly.  It was too often customized, so we don't =
break it.=0A=
      new Effect.Highlight(element, {=0A=
        startcolor: this.options.highlightColor, keepBackgroundImage: =
true });=0A=
    },=0A=
    onEnterEditMode: null,=0A=
    onEnterHover: function(ipe) {=0A=
      ipe.element.style.backgroundColor =3D ipe.options.highlightColor;=0A=
      if (ipe._effect)=0A=
        ipe._effect.cancel();=0A=
    },=0A=
    onFailure: function(transport, ipe) {=0A=
      alert('Error communication with the server: ' + =
transport.responseText.stripTags());=0A=
    },=0A=
    onFormCustomization: null, // Takes the IPE and its generated form, =
after editor, before controls.=0A=
    onLeaveEditMode: null,=0A=
    onLeaveHover: function(ipe) {=0A=
      ipe._effect =3D new Effect.Highlight(ipe.element, {=0A=
        startcolor: ipe.options.highlightColor, endcolor: =
ipe.options.highlightEndColor,=0A=
        restorecolor: ipe._originalBackground, keepBackgroundImage: true=0A=
      });=0A=
    }=0A=
  },=0A=
  Listeners: {=0A=
    click: 'enterEditMode',=0A=
    keydown: 'checkForEscapeOrReturn',=0A=
    mouseover: 'enterHover',=0A=
    mouseout: 'leaveHover'=0A=
  }=0A=
});=0A=
=0A=
Ajax.InPlaceCollectionEditor.DefaultOptions =3D {=0A=
  loadingCollectionText: 'Loading options...'=0A=
};=0A=
=0A=
// Delayed observer, like Form.Element.Observer, =0A=
// but waits for delay after last key input=0A=
// Ideal for live-search fields=0A=
=0A=
Form.Element.DelayedObserver =3D Class.create({=0A=
  initialize: function(element, delay, callback) {=0A=
    this.delay     =3D delay || 0.5;=0A=
    this.element   =3D $(element);=0A=
    this.callback  =3D callback;=0A=
    this.timer     =3D null;=0A=
    this.lastValue =3D $F(this.element); =0A=
    =
Event.observe(this.element,'keyup',this.delayedListener.bindAsEventListen=
er(this));=0A=
  },=0A=
  delayedListener: function(event) {=0A=
    if(this.lastValue =3D=3D $F(this.element)) return;=0A=
    if(this.timer) clearTimeout(this.timer);=0A=
    this.timer =3D setTimeout(this.onTimerEvent.bind(this), this.delay * =
1000);=0A=
    this.lastValue =3D $F(this.element);=0A=
  },=0A=
  onTimerEvent: function() {=0A=
    this.timer =3D null;=0A=
    this.callback(this.element, $F(this.element));=0A=
  }=0A=
});=0A=
=0A=
if (!Control) var Control =3D { };=0A=
=0A=
// options:=0A=
//  axis: 'vertical', or 'horizontal' (default)=0A=
//=0A=
// callbacks:=0A=
//  onChange(value)=0A=
//  onSlide(value)=0A=
Control.Slider =3D Class.create({=0A=
  initialize: function(handle, track, options) {=0A=
    var slider =3D this;=0A=
    =0A=
    if (Object.isArray(handle)) {=0A=
      this.handles =3D handle.collect( function(e) { return $(e) });=0A=
    } else {=0A=
      this.handles =3D [$(handle)];=0A=
    }=0A=
    =0A=
    this.track   =3D $(track);=0A=
    this.options =3D options || { };=0A=
=0A=
    this.axis      =3D this.options.axis || 'horizontal';=0A=
    this.increment =3D this.options.increment || 1;=0A=
    this.step      =3D parseInt(this.options.step || '1');=0A=
    this.range     =3D this.options.range || $R(0,1);=0A=
    =0A=
    this.value     =3D 0; // assure backwards compat=0A=
    this.values    =3D this.handles.map( function() { return 0 });=0A=
    this.spans     =3D this.options.spans ? =
this.options.spans.map(function(s){ return $(s) }) : false;=0A=
    this.options.startSpan =3D $(this.options.startSpan || null);=0A=
    this.options.endSpan   =3D $(this.options.endSpan || null);=0A=
=0A=
    this.restricted =3D this.options.restricted || false;=0A=
=0A=
    this.maximum   =3D this.options.maximum || this.range.end;=0A=
    this.minimum   =3D this.options.minimum || this.range.start;=0A=
=0A=
    // Will be used to align the handle onto the track, if necessary=0A=
    this.alignX =3D parseInt(this.options.alignX || '0');=0A=
    this.alignY =3D parseInt(this.options.alignY || '0');=0A=
    =0A=
    this.trackLength =3D this.maximumOffset() - this.minimumOffset();=0A=
=0A=
    this.handleLength =3D this.isVertical() ? =0A=
      (this.handles[0].offsetHeight !=3D 0 ? =0A=
        this.handles[0].offsetHeight : =
this.handles[0].style.height.replace(/px$/,"")) : =0A=
      (this.handles[0].offsetWidth !=3D 0 ? this.handles[0].offsetWidth =
: =0A=
        this.handles[0].style.width.replace(/px$/,""));=0A=
=0A=
    this.active   =3D false;=0A=
    this.dragging =3D false;=0A=
    this.disabled =3D false;=0A=
=0A=
    if (this.options.disabled) this.setDisabled();=0A=
=0A=
    // Allowed values array=0A=
    this.allowedValues =3D this.options.values ? =
this.options.values.sortBy(Prototype.K) : false;=0A=
    if (this.allowedValues) {=0A=
      this.minimum =3D this.allowedValues.min();=0A=
      this.maximum =3D this.allowedValues.max();=0A=
    }=0A=
=0A=
    this.eventMouseDown =3D this.startDrag.bindAsEventListener(this);=0A=
    this.eventMouseUp   =3D this.endDrag.bindAsEventListener(this);=0A=
    this.eventMouseMove =3D this.update.bindAsEventListener(this);=0A=
=0A=
    // Initialize handles in reverse (make sure first handle is active)=0A=
    this.handles.each( function(h,i) {=0A=
      i =3D slider.handles.length-1-i;=0A=
      slider.setValue(parseFloat(=0A=
        (Object.isArray(slider.options.sliderValue) ? =0A=
          slider.options.sliderValue[i] : slider.options.sliderValue) || =0A=
         slider.range.start), i);=0A=
      h.makePositioned().observe("mousedown", slider.eventMouseDown);=0A=
    });=0A=
    =0A=
    this.track.observe("mousedown", this.eventMouseDown);=0A=
    document.observe("mouseup", this.eventMouseUp);=0A=
    document.observe("mousemove", this.eventMouseMove);=0A=
    =0A=
    this.initialized =3D true;=0A=
  },=0A=
  dispose: function() {=0A=
    var slider =3D this;    =0A=
    Event.stopObserving(this.track, "mousedown", this.eventMouseDown);=0A=
    Event.stopObserving(document, "mouseup", this.eventMouseUp);=0A=
    Event.stopObserving(document, "mousemove", this.eventMouseMove);=0A=
    this.handles.each( function(h) {=0A=
      Event.stopObserving(h, "mousedown", slider.eventMouseDown);=0A=
    });=0A=
  },=0A=
  setDisabled: function(){=0A=
    this.disabled =3D true;=0A=
  },=0A=
  setEnabled: function(){=0A=
    this.disabled =3D false;=0A=
  },  =0A=
  getNearestValue: function(value){=0A=
    if (this.allowedValues){=0A=
      if (value >=3D this.allowedValues.max()) =
return(this.allowedValues.max());=0A=
      if (value <=3D this.allowedValues.min()) =
return(this.allowedValues.min());=0A=
      =0A=
      var offset =3D Math.abs(this.allowedValues[0] - value);=0A=
      var newValue =3D this.allowedValues[0];=0A=
      this.allowedValues.each( function(v) {=0A=
        var currentOffset =3D Math.abs(v - value);=0A=
        if (currentOffset <=3D offset){=0A=
          newValue =3D v;=0A=
          offset =3D currentOffset;=0A=
        } =0A=
      });=0A=
      return newValue;=0A=
    }=0A=
    if (value > this.range.end) return this.range.end;=0A=
    if (value < this.range.start) return this.range.start;=0A=
    return value;=0A=
  },=0A=
  setValue: function(sliderValue, handleIdx){=0A=
    if (!this.active) {=0A=
      this.activeHandleIdx =3D handleIdx || 0;=0A=
      this.activeHandle    =3D this.handles[this.activeHandleIdx];=0A=
      this.updateStyles();=0A=
    }=0A=
    handleIdx =3D handleIdx || this.activeHandleIdx || 0;=0A=
    if (this.initialized && this.restricted) {=0A=
      if ((handleIdx>0) && (sliderValue<this.values[handleIdx-1]))=0A=
        sliderValue =3D this.values[handleIdx-1];=0A=
      if ((handleIdx < (this.handles.length-1)) && =
(sliderValue>this.values[handleIdx+1]))=0A=
        sliderValue =3D this.values[handleIdx+1];=0A=
    }=0A=
    sliderValue =3D this.getNearestValue(sliderValue);=0A=
    this.values[handleIdx] =3D sliderValue;=0A=
    this.value =3D this.values[0]; // assure backwards compat=0A=
    =0A=
    this.handles[handleIdx].style[this.isVertical() ? 'top' : 'left'] =
=3D =0A=
      this.translateToPx(sliderValue);=0A=
    =0A=
    this.drawSpans();=0A=
    if (!this.dragging || !this.event) this.updateFinished();=0A=
  },=0A=
  setValueBy: function(delta, handleIdx) {=0A=
    this.setValue(this.values[handleIdx || this.activeHandleIdx || 0] + =
delta, =0A=
      handleIdx || this.activeHandleIdx || 0);=0A=
  },=0A=
  translateToPx: function(value) {=0A=
    return Math.round(=0A=
      =
((this.trackLength-this.handleLength)/(this.range.end-this.range.start)) =
* =0A=
      (value - this.range.start)) + "px";=0A=
  },=0A=
  translateToValue: function(offset) {=0A=
    return ((offset/(this.trackLength-this.handleLength) * =0A=
      (this.range.end-this.range.start)) + this.range.start);=0A=
  },=0A=
  getRange: function(range) {=0A=
    var v =3D this.values.sortBy(Prototype.K); =0A=
    range =3D range || 0;=0A=
    return $R(v[range],v[range+1]);=0A=
  },=0A=
  minimumOffset: function(){=0A=
    return(this.isVertical() ? this.alignY : this.alignX);=0A=
  },=0A=
  maximumOffset: function(){=0A=
    return(this.isVertical() ? =0A=
      (this.track.offsetHeight !=3D 0 ? this.track.offsetHeight :=0A=
        this.track.style.height.replace(/px$/,"")) - this.alignY : =0A=
      (this.track.offsetWidth !=3D 0 ? this.track.offsetWidth : =0A=
        this.track.style.width.replace(/px$/,"")) - this.alignX);=0A=
  },  =0A=
  isVertical:  function(){=0A=
    return (this.axis =3D=3D 'vertical');=0A=
  },=0A=
  drawSpans: function() {=0A=
    var slider =3D this;=0A=
    if (this.spans)=0A=
      $R(0, this.spans.length-1).each(function(r) { =
slider.setSpan(slider.spans[r], slider.getRange(r)) });=0A=
    if (this.options.startSpan)=0A=
      this.setSpan(this.options.startSpan,=0A=
        $R(0, this.values.length>1 ? this.getRange(0).min() : this.value =
));=0A=
    if (this.options.endSpan)=0A=
      this.setSpan(this.options.endSpan, =0A=
        $R(this.values.length>1 ? =
this.getRange(this.spans.length-1).max() : this.value, this.maximum));=0A=
  },=0A=
  setSpan: function(span, range) {=0A=
    if (this.isVertical()) {=0A=
      span.style.top =3D this.translateToPx(range.start);=0A=
      span.style.height =3D this.translateToPx(range.end - range.start + =
this.range.start);=0A=
    } else {=0A=
      span.style.left =3D this.translateToPx(range.start);=0A=
      span.style.width =3D this.translateToPx(range.end - range.start + =
this.range.start);=0A=
    }=0A=
  },=0A=
  updateStyles: function() {=0A=
    this.handles.each( function(h){ Element.removeClassName(h, =
'selected') });=0A=
    Element.addClassName(this.activeHandle, 'selected');=0A=
  },=0A=
  startDrag: function(event) {=0A=
    if (Event.isLeftClick(event)) {=0A=
      if (!this.disabled){=0A=
        this.active =3D true;=0A=
        =0A=
        var handle =3D Event.element(event);=0A=
        var pointer  =3D [Event.pointerX(event), Event.pointerY(event)];=0A=
        var track =3D handle;=0A=
        if (track=3D=3Dthis.track) {=0A=
          var offsets  =3D Position.cumulativeOffset(this.track); =0A=
          this.event =3D event;=0A=
          this.setValue(this.translateToValue( =0A=
           (this.isVertical() ? pointer[1]-offsets[1] : =
pointer[0]-offsets[0])-(this.handleLength/2)=0A=
          ));=0A=
          var offsets  =3D Position.cumulativeOffset(this.activeHandle);=0A=
          this.offsetX =3D (pointer[0] - offsets[0]);=0A=
          this.offsetY =3D (pointer[1] - offsets[1]);=0A=
        } else {=0A=
          // find the handle (prevents issues with Safari)=0A=
          while((this.handles.indexOf(handle) =3D=3D -1) && =
handle.parentNode) =0A=
            handle =3D handle.parentNode;=0A=
            =0A=
          if (this.handles.indexOf(handle)!=3D-1) {=0A=
            this.activeHandle    =3D handle;=0A=
            this.activeHandleIdx =3D =
this.handles.indexOf(this.activeHandle);=0A=
            this.updateStyles();=0A=
            =0A=
            var offsets  =3D =
Position.cumulativeOffset(this.activeHandle);=0A=
            this.offsetX =3D (pointer[0] - offsets[0]);=0A=
            this.offsetY =3D (pointer[1] - offsets[1]);=0A=
          }=0A=
        }=0A=
      }=0A=
      Event.stop(event);=0A=
    }=0A=
  },=0A=
  update: function(event) {=0A=
   if (this.active) {=0A=
      if (!this.dragging) this.dragging =3D true;=0A=
      this.draw(event);=0A=
      if (Prototype.Browser.WebKit) window.scrollBy(0,0);=0A=
      Event.stop(event);=0A=
   }=0A=
  },=0A=
  draw: function(event) {=0A=
    var pointer =3D [Event.pointerX(event), Event.pointerY(event)];=0A=
    var offsets =3D Position.cumulativeOffset(this.track);=0A=
    pointer[0] -=3D this.offsetX + offsets[0];=0A=
    pointer[1] -=3D this.offsetY + offsets[1];=0A=
    this.event =3D event;=0A=
    this.setValue(this.translateToValue( this.isVertical() ? pointer[1] =
: pointer[0] ));=0A=
    if (this.initialized && this.options.onSlide)=0A=
      this.options.onSlide(this.values.length>1 ? this.values : =
this.value, this);=0A=
  },=0A=
  endDrag: function(event) {=0A=
    if (this.active && this.dragging) {=0A=
      this.finishDrag(event, true);=0A=
      Event.stop(event);=0A=
    }=0A=
    this.active =3D false;=0A=
    this.dragging =3D false;=0A=
  },  =0A=
  finishDrag: function(event, success) {=0A=
    this.active =3D false;=0A=
    this.dragging =3D false;=0A=
    this.updateFinished();=0A=
  },=0A=
  updateFinished: function() {=0A=
    if (this.initialized && this.options.onChange) =0A=
      this.options.onChange(this.values.length>1 ? this.values : =
this.value, this);=0A=
    this.event =3D null;=0A=
  }=0A=
});=0A=
=0A=
if(Object.isUndefined(Effect))=0A=
  throw("dragdrop.js requires including script.aculo.us' effects.js =
library");=0A=
=0A=
var Droppables =3D {=0A=
  drops: [],=0A=
=0A=
  remove: function(element) {=0A=
    this.drops =3D this.drops.reject(function(d) { return =
d.element=3D=3D$(element) });=0A=
  },=0A=
=0A=
  add: function(element) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend({=0A=
      greedy:     true,=0A=
      hoverclass: null,=0A=
      tree:       false=0A=
    }, arguments[1] || { });=0A=
=0A=
    // cache containers=0A=
    if(options.containment) {=0A=
      options._containers =3D [];=0A=
      var containment =3D options.containment;=0A=
      if(Object.isArray(containment)) {=0A=
        containment.each( function(c) { options._containers.push($(c)) =
});=0A=
      } else {=0A=
        options._containers.push($(containment));=0A=
      }=0A=
    }=0A=
    =0A=
    if(options.accept) options.accept =3D [options.accept].flatten();=0A=
=0A=
    Element.makePositioned(element); // fix IE=0A=
    options.element =3D element;=0A=
=0A=
    this.drops.push(options);=0A=
  },=0A=
  =0A=
  findDeepestChild: function(drops) {=0A=
    deepest =3D drops[0];=0A=
      =0A=
    for (i =3D 1; i < drops.length; ++i)=0A=
      if (Element.isParent(drops[i].element, deepest.element))=0A=
        deepest =3D drops[i];=0A=
    =0A=
    return deepest;=0A=
  },=0A=
=0A=
  isContained: function(element, drop) {=0A=
    var containmentNode;=0A=
    if(drop.tree) {=0A=
      containmentNode =3D element.treeNode; =0A=
    } else {=0A=
      containmentNode =3D element.parentNode;=0A=
    }=0A=
    return drop._containers.detect(function(c) { return containmentNode =
=3D=3D c });=0A=
  },=0A=
  =0A=
  isAffected: function(point, element, drop) {=0A=
    return (=0A=
      (drop.element!=3Delement) &&=0A=
      ((!drop._containers) ||=0A=
        this.isContained(element, drop)) &&=0A=
      ((!drop.accept) ||=0A=
        (Element.classNames(element).detect( =0A=
          function(v) { return drop.accept.include(v) } ) )) &&=0A=
      Position.within(drop.element, point[0], point[1]) );=0A=
  },=0A=
=0A=
  deactivate: function(drop) {=0A=
    if(drop.hoverclass)=0A=
      Element.removeClassName(drop.element, drop.hoverclass);=0A=
    this.last_active =3D null;=0A=
  },=0A=
=0A=
  activate: function(drop) {=0A=
    if(drop.hoverclass)=0A=
      Element.addClassName(drop.element, drop.hoverclass);=0A=
    this.last_active =3D drop;=0A=
  },=0A=
=0A=
  show: function(point, element) {=0A=
    if(!this.drops.length) return;=0A=
    var drop, affected =3D [];=0A=
    =0A=
    this.drops.each( function(drop) {=0A=
      if(Droppables.isAffected(point, element, drop))=0A=
        affected.push(drop);=0A=
    });=0A=
        =0A=
    if(affected.length>0)=0A=
      drop =3D Droppables.findDeepestChild(affected);=0A=
=0A=
    if(this.last_active && this.last_active !=3D drop) =
this.deactivate(this.last_active);=0A=
    if (drop) {=0A=
      Position.within(drop.element, point[0], point[1]);=0A=
      if(drop.onHover)=0A=
        drop.onHover(element, drop.element, =
Position.overlap(drop.overlap, drop.element));=0A=
      =0A=
      if (drop !=3D this.last_active) Droppables.activate(drop);=0A=
    }=0A=
  },=0A=
=0A=
  fire: function(event, element) {=0A=
    if(!this.last_active) return;=0A=
    Position.prepare();=0A=
=0A=
    if (this.isAffected([Event.pointerX(event), Event.pointerY(event)], =
element, this.last_active))=0A=
      if (this.last_active.onDrop) {=0A=
        this.last_active.onDrop(element, this.last_active.element, =
event); =0A=
        return true; =0A=
      }=0A=
  },=0A=
=0A=
  reset: function() {=0A=
    if(this.last_active)=0A=
      this.deactivate(this.last_active);=0A=
  }=0A=
}=0A=
=0A=
var Draggables =3D {=0A=
  drags: [],=0A=
  observers: [],=0A=
  =0A=
  register: function(draggable) {=0A=
    if(this.drags.length =3D=3D 0) {=0A=
      this.eventMouseUp   =3D this.endDrag.bindAsEventListener(this);=0A=
      this.eventMouseMove =3D this.updateDrag.bindAsEventListener(this);=0A=
      this.eventKeypress  =3D this.keyPress.bindAsEventListener(this);=0A=
      =0A=
      Event.observe(document, "mouseup", this.eventMouseUp);=0A=
      Event.observe(document, "mousemove", this.eventMouseMove);=0A=
      Event.observe(document, "keypress", this.eventKeypress);=0A=
    }=0A=
    this.drags.push(draggable);=0A=
  },=0A=
  =0A=
  unregister: function(draggable) {=0A=
    this.drags =3D this.drags.reject(function(d) { return =
d=3D=3Ddraggable });=0A=
    if(this.drags.length =3D=3D 0) {=0A=
      Event.stopObserving(document, "mouseup", this.eventMouseUp);=0A=
      Event.stopObserving(document, "mousemove", this.eventMouseMove);=0A=
      Event.stopObserving(document, "keypress", this.eventKeypress);=0A=
    }=0A=
  },=0A=
  =0A=
  activate: function(draggable) {=0A=
    if(draggable.options.delay) { =0A=
      this._timeout =3D setTimeout(function() { =0A=
        Draggables._timeout =3D null; =0A=
        window.focus(); =0A=
        Draggables.activeDraggable =3D draggable; =0A=
      }.bind(this), draggable.options.delay); =0A=
    } else {=0A=
      window.focus(); // allows keypress events if window isn't =
currently focused, fails for Safari=0A=
      this.activeDraggable =3D draggable;=0A=
    }=0A=
  },=0A=
  =0A=
  deactivate: function() {=0A=
    this.activeDraggable =3D null;=0A=
  },=0A=
  =0A=
  updateDrag: function(event) {=0A=
    if(!this.activeDraggable) return;=0A=
    var pointer =3D [Event.pointerX(event), Event.pointerY(event)];=0A=
    // Mozilla-based browsers fire successive mousemove events with=0A=
    // the same coordinates, prevent needless redrawing (moz bug?)=0A=
    if(this._lastPointer && (this._lastPointer.inspect() =3D=3D =
pointer.inspect())) return;=0A=
    this._lastPointer =3D pointer;=0A=
    =0A=
    this.activeDraggable.updateDrag(event, pointer);=0A=
  },=0A=
  =0A=
  endDrag: function(event) {=0A=
    if(this._timeout) { =0A=
      clearTimeout(this._timeout); =0A=
      this._timeout =3D null; =0A=
    }=0A=
    if(!this.activeDraggable) return;=0A=
    this._lastPointer =3D null;=0A=
    this.activeDraggable.endDrag(event);=0A=
    this.activeDraggable =3D null;=0A=
  },=0A=
  =0A=
  keyPress: function(event) {=0A=
    if(this.activeDraggable)=0A=
      this.activeDraggable.keyPress(event);=0A=
  },=0A=
  =0A=
  addObserver: function(observer) {=0A=
    this.observers.push(observer);=0A=
    this._cacheObserverCallbacks();=0A=
  },=0A=
  =0A=
  removeObserver: function(element) {  // element instead of observer =
fixes mem leaks=0A=
    this.observers =3D this.observers.reject( function(o) { return =
o.element=3D=3Delement });=0A=
    this._cacheObserverCallbacks();=0A=
  },=0A=
  =0A=
  notify: function(eventName, draggable, event) {  // 'onStart', =
'onEnd', 'onDrag'=0A=
    if(this[eventName+'Count'] > 0)=0A=
      this.observers.each( function(o) {=0A=
        if(o[eventName]) o[eventName](eventName, draggable, event);=0A=
      });=0A=
    if(draggable.options[eventName]) =
draggable.options[eventName](draggable, event);=0A=
  },=0A=
  =0A=
  _cacheObserverCallbacks: function() {=0A=
    ['onStart','onEnd','onDrag'].each( function(eventName) {=0A=
      Draggables[eventName+'Count'] =3D Draggables.observers.select(=0A=
        function(o) { return o[eventName]; }=0A=
      ).length;=0A=
    });=0A=
  }=0A=
}=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Draggable =3D Class.create({=0A=
  initialize: function(element) {=0A=
    var defaults =3D {=0A=
      handle: false,=0A=
      reverteffect: function(element, top_offset, left_offset) {=0A=
        var dur =3D =
Math.sqrt(Math.abs(top_offset^2)+Math.abs(left_offset^2))*0.02;=0A=
        new Effect.Move(element, { x: -left_offset, y: -top_offset, =
duration: dur,=0A=
          queue: {scope:'_draggable', position:'end'}=0A=
        });=0A=
      },=0A=
      endeffect: function(element) {=0A=
        var toOpacity =3D Object.isNumber(element._opacity) ? =
element._opacity : 1.0;=0A=
        new Effect.Opacity(element, {duration:0.2, from:0.7, =
to:toOpacity, =0A=
          queue: {scope:'_draggable', position:'end'},=0A=
          afterFinish: function(){ =0A=
            Draggable._dragging[element] =3D false =0A=
          }=0A=
        }); =0A=
      },=0A=
      zindex: 1000,=0A=
      revert: false,=0A=
      quiet: false,=0A=
      scroll: false,=0A=
      scrollSensitivity: 20,=0A=
      scrollSpeed: 15,=0A=
      snap: false,  // false, or xy or [x,y] or function(x,y){ return =
[x,y] }=0A=
      delay: 0=0A=
    };=0A=
    =0A=
    if(!arguments[1] || Object.isUndefined(arguments[1].endeffect))=0A=
      Object.extend(defaults, {=0A=
        starteffect: function(element) {=0A=
          element._opacity =3D Element.getOpacity(element);=0A=
          Draggable._dragging[element] =3D true;=0A=
          new Effect.Opacity(element, {duration:0.2, =
from:element._opacity, to:0.7}); =0A=
        }=0A=
      });=0A=
    =0A=
    var options =3D Object.extend(defaults, arguments[1] || { });=0A=
=0A=
    this.element =3D $(element);=0A=
    =0A=
    if(options.handle && Object.isString(options.handle))=0A=
      this.handle =3D this.element.down('.'+options.handle, 0);=0A=
    =0A=
    if(!this.handle) this.handle =3D $(options.handle);=0A=
    if(!this.handle) this.handle =3D this.element;=0A=
    =0A=
    if(options.scroll && !options.scroll.scrollTo && =
!options.scroll.outerHTML) {=0A=
      options.scroll =3D $(options.scroll);=0A=
      this._isScrollChild =3D Element.childOf(this.element, =
options.scroll);=0A=
    }=0A=
=0A=
    Element.makePositioned(this.element); // fix IE    =0A=
=0A=
    this.options  =3D options;=0A=
    this.dragging =3D false;   =0A=
=0A=
    this.eventMouseDown =3D this.initDrag.bindAsEventListener(this);=0A=
    Event.observe(this.handle, "mousedown", this.eventMouseDown);=0A=
    =0A=
    Draggables.register(this);=0A=
  },=0A=
  =0A=
  destroy: function() {=0A=
    Event.stopObserving(this.handle, "mousedown", this.eventMouseDown);=0A=
    Draggables.unregister(this);=0A=
  },=0A=
  =0A=
  currentDelta: function() {=0A=
    return([=0A=
      parseInt(Element.getStyle(this.element,'left') || '0'),=0A=
      parseInt(Element.getStyle(this.element,'top') || '0')]);=0A=
  },=0A=
  =0A=
  initDrag: function(event) {=0A=
    if(!Object.isUndefined(Draggable._dragging[this.element]) &&=0A=
      Draggable._dragging[this.element]) return;=0A=
    if(Event.isLeftClick(event)) {    =0A=
      // abort on form elements, fixes a Firefox issue=0A=
      var src =3D Event.element(event);=0A=
      if((tag_name =3D src.tagName.toUpperCase()) && (=0A=
        tag_name=3D=3D'INPUT' ||=0A=
        tag_name=3D=3D'SELECT' ||=0A=
        tag_name=3D=3D'OPTION' ||=0A=
        tag_name=3D=3D'BUTTON' ||=0A=
        tag_name=3D=3D'TEXTAREA')) return;=0A=
        =0A=
      var pointer =3D [Event.pointerX(event), Event.pointerY(event)];=0A=
      var pos     =3D Position.cumulativeOffset(this.element);=0A=
      this.offset =3D [0,1].map( function(i) { return (pointer[i] - =
pos[i]) });=0A=
      =0A=
      Draggables.activate(this);=0A=
      Event.stop(event);=0A=
    }=0A=
  },=0A=
  =0A=
  startDrag: function(event) {=0A=
    this.dragging =3D true;=0A=
    if(!this.delta)=0A=
      this.delta =3D this.currentDelta();=0A=
    =0A=
    if(this.options.zindex) {=0A=
      this.originalZ =3D =
parseInt(Element.getStyle(this.element,'z-index') || 0);=0A=
      this.element.style.zIndex =3D this.options.zindex;=0A=
    }=0A=
    =0A=
    if(this.options.ghosting) {=0A=
      this._clone =3D this.element.cloneNode(true);=0A=
      this.element._originallyAbsolute =3D =
(this.element.getStyle('position') =3D=3D 'absolute');=0A=
      if (!this.element._originallyAbsolute)=0A=
        Position.absolutize(this.element);=0A=
      this.element.parentNode.insertBefore(this._clone, this.element);=0A=
    }=0A=
    =0A=
    if(this.options.scroll) {=0A=
      if (this.options.scroll =3D=3D window) {=0A=
        var where =3D this._getWindowScroll(this.options.scroll);=0A=
        this.originalScrollLeft =3D where.left;=0A=
        this.originalScrollTop =3D where.top;=0A=
      } else {=0A=
        this.originalScrollLeft =3D this.options.scroll.scrollLeft;=0A=
        this.originalScrollTop =3D this.options.scroll.scrollTop;=0A=
      }=0A=
    }=0A=
    =0A=
    Draggables.notify('onStart', this, event);=0A=
        =0A=
    if(this.options.starteffect) this.options.starteffect(this.element);=0A=
  },=0A=
  =0A=
  updateDrag: function(event, pointer) {=0A=
    if(!this.dragging) this.startDrag(event);=0A=
    =0A=
    if(!this.options.quiet){=0A=
      Position.prepare();=0A=
      Droppables.show(pointer, this.element);=0A=
    }=0A=
    =0A=
    Draggables.notify('onDrag', this, event);=0A=
    =0A=
    this.draw(pointer);=0A=
    if(this.options.change) this.options.change(this);=0A=
    =0A=
    if(this.options.scroll) {=0A=
      this.stopScrolling();=0A=
      =0A=
      var p;=0A=
      if (this.options.scroll =3D=3D window) {=0A=
        with(this._getWindowScroll(this.options.scroll)) { p =3D [ left, =
top, left+width, top+height ]; }=0A=
      } else {=0A=
        p =3D Position.page(this.options.scroll);=0A=
        p[0] +=3D this.options.scroll.scrollLeft + Position.deltaX;=0A=
        p[1] +=3D this.options.scroll.scrollTop + Position.deltaY;=0A=
        p.push(p[0]+this.options.scroll.offsetWidth);=0A=
        p.push(p[1]+this.options.scroll.offsetHeight);=0A=
      }=0A=
      var speed =3D [0,0];=0A=
      if(pointer[0] < (p[0]+this.options.scrollSensitivity)) speed[0] =
=3D pointer[0]-(p[0]+this.options.scrollSensitivity);=0A=
      if(pointer[1] < (p[1]+this.options.scrollSensitivity)) speed[1] =
=3D pointer[1]-(p[1]+this.options.scrollSensitivity);=0A=
      if(pointer[0] > (p[2]-this.options.scrollSensitivity)) speed[0] =
=3D pointer[0]-(p[2]-this.options.scrollSensitivity);=0A=
      if(pointer[1] > (p[3]-this.options.scrollSensitivity)) speed[1] =
=3D pointer[1]-(p[3]-this.options.scrollSensitivity);=0A=
      this.startScrolling(speed);=0A=
    }=0A=
    =0A=
    // fix AppleWebKit rendering=0A=
    if(Prototype.Browser.WebKit) window.scrollBy(0,0);=0A=
    =0A=
    Event.stop(event);=0A=
  },=0A=
  =0A=
  finishDrag: function(event, success) {=0A=
    this.dragging =3D false;=0A=
    =0A=
    if(this.options.quiet){=0A=
      Position.prepare();=0A=
      var pointer =3D [Event.pointerX(event), Event.pointerY(event)];=0A=
      Droppables.show(pointer, this.element);=0A=
    }=0A=
=0A=
    if(this.options.ghosting) {=0A=
      if (!this.element._originallyAbsolute)=0A=
        Position.relativize(this.element);=0A=
      delete this.element._originallyAbsolute;=0A=
      Element.remove(this._clone);=0A=
      this._clone =3D null;=0A=
    }=0A=
=0A=
    var dropped =3D false; =0A=
    if(success) { =0A=
      dropped =3D Droppables.fire(event, this.element); =0A=
      if (!dropped) dropped =3D false; =0A=
    }=0A=
    if(dropped && this.options.onDropped) =
this.options.onDropped(this.element);=0A=
    Draggables.notify('onEnd', this, event);=0A=
=0A=
    var revert =3D this.options.revert;=0A=
    if(revert && Object.isFunction(revert)) revert =3D =
revert(this.element);=0A=
    =0A=
    var d =3D this.currentDelta();=0A=
    if(revert && this.options.reverteffect) {=0A=
      if (dropped =3D=3D 0 || revert !=3D 'failure')=0A=
        this.options.reverteffect(this.element,=0A=
          d[1]-this.delta[1], d[0]-this.delta[0]);=0A=
    } else {=0A=
      this.delta =3D d;=0A=
    }=0A=
=0A=
    if(this.options.zindex)=0A=
      this.element.style.zIndex =3D this.originalZ;=0A=
=0A=
    if(this.options.endeffect) =0A=
      this.options.endeffect(this.element);=0A=
      =0A=
    Draggables.deactivate(this);=0A=
    Droppables.reset();=0A=
  },=0A=
  =0A=
  keyPress: function(event) {=0A=
    if(event.keyCode!=3DEvent.KEY_ESC) return;=0A=
    this.finishDrag(event, false);=0A=
    Event.stop(event);=0A=
  },=0A=
  =0A=
  endDrag: function(event) {=0A=
    if(!this.dragging) return;=0A=
    this.stopScrolling();=0A=
    this.finishDrag(event, true);=0A=
    Event.stop(event);=0A=
  },=0A=
  =0A=
  draw: function(point) {=0A=
    var pos =3D Position.cumulativeOffset(this.element);=0A=
    if(this.options.ghosting) {=0A=
      var r   =3D Position.realOffset(this.element);=0A=
      pos[0] +=3D r[0] - Position.deltaX; pos[1] +=3D r[1] - =
Position.deltaY;=0A=
    }=0A=
    =0A=
    var d =3D this.currentDelta();=0A=
    pos[0] -=3D d[0]; pos[1] -=3D d[1];=0A=
    =0A=
    if(this.options.scroll && (this.options.scroll !=3D window && =
this._isScrollChild)) {=0A=
      pos[0] -=3D this.options.scroll.scrollLeft-this.originalScrollLeft;=0A=
      pos[1] -=3D this.options.scroll.scrollTop-this.originalScrollTop;=0A=
    }=0A=
    =0A=
    var p =3D [0,1].map(function(i){ =0A=
      return (point[i]-pos[i]-this.offset[i]) =0A=
    }.bind(this));=0A=
    =0A=
    if(this.options.snap) {=0A=
      if(Object.isFunction(this.options.snap)) {=0A=
        p =3D this.options.snap(p[0],p[1],this);=0A=
      } else {=0A=
      if(Object.isArray(this.options.snap)) {=0A=
        p =3D p.map( function(v, i) {=0A=
          return (v/this.options.snap[i]).round()*this.options.snap[i] =
}.bind(this))=0A=
      } else {=0A=
        p =3D p.map( function(v) {=0A=
          return (v/this.options.snap).round()*this.options.snap =
}.bind(this))=0A=
      }=0A=
    }}=0A=
    =0A=
    var style =3D this.element.style;=0A=
    if((!this.options.constraint) || =
(this.options.constraint=3D=3D'horizontal'))=0A=
      style.left =3D p[0] + "px";=0A=
    if((!this.options.constraint) || =
(this.options.constraint=3D=3D'vertical'))=0A=
      style.top  =3D p[1] + "px";=0A=
    =0A=
    if(style.visibility=3D=3D"hidden") style.visibility =3D ""; // fix =
gecko rendering=0A=
  },=0A=
  =0A=
  stopScrolling: function() {=0A=
    if(this.scrollInterval) {=0A=
      clearInterval(this.scrollInterval);=0A=
      this.scrollInterval =3D null;=0A=
      Draggables._lastScrollPointer =3D null;=0A=
    }=0A=
  },=0A=
  =0A=
  startScrolling: function(speed) {=0A=
    if(!(speed[0] || speed[1])) return;=0A=
    this.scrollSpeed =3D =
[speed[0]*this.options.scrollSpeed,speed[1]*this.options.scrollSpeed];=0A=
    this.lastScrolled =3D new Date();=0A=
    this.scrollInterval =3D setInterval(this.scroll.bind(this), 10);=0A=
  },=0A=
  =0A=
  scroll: function() {=0A=
    var current =3D new Date();=0A=
    var delta =3D current - this.lastScrolled;=0A=
    this.lastScrolled =3D current;=0A=
    if(this.options.scroll =3D=3D window) {=0A=
      with (this._getWindowScroll(this.options.scroll)) {=0A=
        if (this.scrollSpeed[0] || this.scrollSpeed[1]) {=0A=
          var d =3D delta / 1000;=0A=
          this.options.scroll.scrollTo( left + d*this.scrollSpeed[0], =
top + d*this.scrollSpeed[1] );=0A=
        }=0A=
      }=0A=
    } else {=0A=
      this.options.scroll.scrollLeft +=3D this.scrollSpeed[0] * delta / =
1000;=0A=
      this.options.scroll.scrollTop  +=3D this.scrollSpeed[1] * delta / =
1000;=0A=
    }=0A=
    =0A=
    Position.prepare();=0A=
    Droppables.show(Draggables._lastPointer, this.element);=0A=
    Draggables.notify('onDrag', this);=0A=
    if (this._isScrollChild) {=0A=
      Draggables._lastScrollPointer =3D Draggables._lastScrollPointer || =
$A(Draggables._lastPointer);=0A=
      Draggables._lastScrollPointer[0] +=3D this.scrollSpeed[0] * delta =
/ 1000;=0A=
      Draggables._lastScrollPointer[1] +=3D this.scrollSpeed[1] * delta =
/ 1000;=0A=
      if (Draggables._lastScrollPointer[0] < 0)=0A=
        Draggables._lastScrollPointer[0] =3D 0;=0A=
      if (Draggables._lastScrollPointer[1] < 0)=0A=
        Draggables._lastScrollPointer[1] =3D 0;=0A=
      this.draw(Draggables._lastScrollPointer);=0A=
    }=0A=
    =0A=
    if(this.options.change) this.options.change(this);=0A=
  },=0A=
  =0A=
  _getWindowScroll: function(w) {=0A=
    var T, L, W, H;=0A=
    with (w.document) {=0A=
      if (w.document.documentElement && documentElement.scrollTop) {=0A=
        T =3D documentElement.scrollTop;=0A=
        L =3D documentElement.scrollLeft;=0A=
      } else if (w.document.body) {=0A=
        T =3D body.scrollTop;=0A=
        L =3D body.scrollLeft;=0A=
      }=0A=
      if (w.innerWidth) {=0A=
        W =3D w.innerWidth;=0A=
        H =3D w.innerHeight;=0A=
      } else if (w.document.documentElement && =
documentElement.clientWidth) {=0A=
        W =3D documentElement.clientWidth;=0A=
        H =3D documentElement.clientHeight;=0A=
      } else {=0A=
        W =3D body.offsetWidth;=0A=
        H =3D body.offsetHeight=0A=
      }=0A=
    }=0A=
    return { top: T, left: L, width: W, height: H };=0A=
  }=0A=
});=0A=
=0A=
Draggable._dragging =3D { };=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var SortableObserver =3D Class.create({=0A=
  initialize: function(element, observer) {=0A=
    this.element   =3D $(element);=0A=
    this.observer  =3D observer;=0A=
    this.lastValue =3D Sortable.serialize(this.element);=0A=
  },=0A=
  =0A=
  onStart: function() {=0A=
    this.lastValue =3D Sortable.serialize(this.element);=0A=
  },=0A=
  =0A=
  onEnd: function() {=0A=
    Sortable.unmark();=0A=
    if(this.lastValue !=3D Sortable.serialize(this.element))=0A=
      this.observer(this.element)=0A=
  }=0A=
});=0A=
=0A=
var Sortable =3D {=0A=
  SERIALIZE_RULE: /^[^_\-](?:[A-Za-z0-9\-\_]*)[_](.*)$/,=0A=
  =0A=
  sortables: { },=0A=
  =0A=
  _findRootElement: function(element) {=0A=
    while (element.tagName.toUpperCase() !=3D "BODY") {  =0A=
      if(element.id && Sortable.sortables[element.id]) return element;=0A=
      element =3D element.parentNode;=0A=
    }=0A=
  },=0A=
=0A=
  options: function(element) {=0A=
    element =3D Sortable._findRootElement($(element));=0A=
    if(!element) return;=0A=
    return Sortable.sortables[element.id];=0A=
  },=0A=
  =0A=
  destroy: function(element){=0A=
    var s =3D Sortable.options(element);=0A=
    =0A=
    if(s) {=0A=
      Draggables.removeObserver(s.element);=0A=
      s.droppables.each(function(d){ Droppables.remove(d) });=0A=
      s.draggables.invoke('destroy');=0A=
      =0A=
      delete Sortable.sortables[s.element.id];=0A=
    }=0A=
  },=0A=
=0A=
  create: function(element) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend({ =0A=
      element:     element,=0A=
      tag:         'li',       // assumes li children, override with =
tag: 'tagname'=0A=
      dropOnEmpty: false,=0A=
      tree:        false,=0A=
      treeTag:     'ul',=0A=
      overlap:     'vertical', // one of 'vertical', 'horizontal'=0A=
      constraint:  'vertical', // one of 'vertical', 'horizontal', false=0A=
      containment: element,    // also takes array of elements (or =
id's); or false=0A=
      handle:      false,      // or a CSS class=0A=
      only:        false,=0A=
      delay:       0,=0A=
      hoverclass:  null,=0A=
      ghosting:    false,=0A=
      quiet:       false, =0A=
      scroll:      false,=0A=
      scrollSensitivity: 20,=0A=
      scrollSpeed: 15,=0A=
      format:      this.SERIALIZE_RULE,=0A=
      =0A=
      // these take arrays of elements or ids and can be =0A=
      // used for better initialization performance=0A=
      elements:    false,=0A=
      handles:     false,=0A=
      =0A=
      onChange:    Prototype.emptyFunction,=0A=
      onUpdate:    Prototype.emptyFunction=0A=
    }, arguments[1] || { });=0A=
=0A=
    // clear any old sortable with same element=0A=
    this.destroy(element);=0A=
=0A=
    // build options for the draggables=0A=
    var options_for_draggable =3D {=0A=
      revert:      true,=0A=
      quiet:       options.quiet,=0A=
      scroll:      options.scroll,=0A=
      scrollSpeed: options.scrollSpeed,=0A=
      scrollSensitivity: options.scrollSensitivity,=0A=
      delay:       options.delay,=0A=
      ghosting:    options.ghosting,=0A=
      constraint:  options.constraint,=0A=
      handle:      options.handle };=0A=
=0A=
    if(options.starteffect)=0A=
      options_for_draggable.starteffect =3D options.starteffect;=0A=
=0A=
    if(options.reverteffect)=0A=
      options_for_draggable.reverteffect =3D options.reverteffect;=0A=
    else=0A=
      if(options.ghosting) options_for_draggable.reverteffect =3D =
function(element) {=0A=
        element.style.top  =3D 0;=0A=
        element.style.left =3D 0;=0A=
      };=0A=
=0A=
    if(options.endeffect)=0A=
      options_for_draggable.endeffect =3D options.endeffect;=0A=
=0A=
    if(options.zindex)=0A=
      options_for_draggable.zindex =3D options.zindex;=0A=
=0A=
    // build options for the droppables  =0A=
    var options_for_droppable =3D {=0A=
      overlap:     options.overlap,=0A=
      containment: options.containment,=0A=
      tree:        options.tree,=0A=
      hoverclass:  options.hoverclass,=0A=
      onHover:     Sortable.onHover=0A=
    }=0A=
    =0A=
    var options_for_tree =3D {=0A=
      onHover:      Sortable.onEmptyHover,=0A=
      overlap:      options.overlap,=0A=
      containment:  options.containment,=0A=
      hoverclass:   options.hoverclass=0A=
    }=0A=
=0A=
    // fix for gecko engine=0A=
    Element.cleanWhitespace(element); =0A=
=0A=
    options.draggables =3D [];=0A=
    options.droppables =3D [];=0A=
=0A=
    // drop on empty handling=0A=
    if(options.dropOnEmpty || options.tree) {=0A=
      Droppables.add(element, options_for_tree);=0A=
      options.droppables.push(element);=0A=
    }=0A=
=0A=
    (options.elements || this.findElements(element, options) || =
[]).each( function(e,i) {=0A=
      var handle =3D options.handles ? $(options.handles[i]) :=0A=
        (options.handle ? $(e).select('.' + options.handle)[0] : e); =0A=
      options.draggables.push(=0A=
        new Draggable(e, Object.extend(options_for_draggable, { handle: =
handle })));=0A=
      Droppables.add(e, options_for_droppable);=0A=
      if(options.tree) e.treeNode =3D element;=0A=
      options.droppables.push(e);      =0A=
    });=0A=
    =0A=
    if(options.tree) {=0A=
      (Sortable.findTreeElements(element, options) || []).each( =
function(e) {=0A=
        Droppables.add(e, options_for_tree);=0A=
        e.treeNode =3D element;=0A=
        options.droppables.push(e);=0A=
      });=0A=
    }=0A=
=0A=
    // keep reference=0A=
    this.sortables[element.id] =3D options;=0A=
=0A=
    // for onupdate=0A=
    Draggables.addObserver(new SortableObserver(element, =
options.onUpdate));=0A=
=0A=
  },=0A=
=0A=
  // return all suitable-for-sortable elements in a guaranteed order=0A=
  findElements: function(element, options) {=0A=
    return Element.findChildren(=0A=
      element, options.only, options.tree ? true : false, options.tag);=0A=
  },=0A=
  =0A=
  findTreeElements: function(element, options) {=0A=
    return Element.findChildren(=0A=
      element, options.only, options.tree ? true : false, =
options.treeTag);=0A=
  },=0A=
=0A=
  onHover: function(element, dropon, overlap) {=0A=
    if(Element.isParent(dropon, element)) return;=0A=
=0A=
    if(overlap > .33 && overlap < .66 && Sortable.options(dropon).tree) {=0A=
      return;=0A=
    } else if(overlap>0.5) {=0A=
      Sortable.mark(dropon, 'before');=0A=
      if(dropon.previousSibling !=3D element) {=0A=
        var oldParentNode =3D element.parentNode;=0A=
        element.style.visibility =3D "hidden"; // fix gecko rendering=0A=
        dropon.parentNode.insertBefore(element, dropon);=0A=
        if(dropon.parentNode!=3DoldParentNode) =0A=
          Sortable.options(oldParentNode).onChange(element);=0A=
        Sortable.options(dropon.parentNode).onChange(element);=0A=
      }=0A=
    } else {=0A=
      Sortable.mark(dropon, 'after');=0A=
      var nextElement =3D dropon.nextSibling || null;=0A=
      if(nextElement !=3D element) {=0A=
        var oldParentNode =3D element.parentNode;=0A=
        element.style.visibility =3D "hidden"; // fix gecko rendering=0A=
        dropon.parentNode.insertBefore(element, nextElement);=0A=
        if(dropon.parentNode!=3DoldParentNode) =0A=
          Sortable.options(oldParentNode).onChange(element);=0A=
        Sortable.options(dropon.parentNode).onChange(element);=0A=
      }=0A=
    }=0A=
  },=0A=
  =0A=
  onEmptyHover: function(element, dropon, overlap) {=0A=
    var oldParentNode =3D element.parentNode;=0A=
    var droponOptions =3D Sortable.options(dropon);=0A=
        =0A=
    if(!Element.isParent(dropon, element)) {=0A=
      var index;=0A=
      =0A=
      var children =3D Sortable.findElements(dropon, {tag: =
droponOptions.tag, only: droponOptions.only});=0A=
      var child =3D null;=0A=
            =0A=
      if(children) {=0A=
        var offset =3D Element.offsetSize(dropon, droponOptions.overlap) =
* (1.0 - overlap);=0A=
        =0A=
        for (index =3D 0; index < children.length; index +=3D 1) {=0A=
          if (offset - Element.offsetSize (children[index], =
droponOptions.overlap) >=3D 0) {=0A=
            offset -=3D Element.offsetSize (children[index], =
droponOptions.overlap);=0A=
          } else if (offset - (Element.offsetSize (children[index], =
droponOptions.overlap) / 2) >=3D 0) {=0A=
            child =3D index + 1 < children.length ? children[index + 1] =
: null;=0A=
            break;=0A=
          } else {=0A=
            child =3D children[index];=0A=
            break;=0A=
          }=0A=
        }=0A=
      }=0A=
      =0A=
      dropon.insertBefore(element, child);=0A=
      =0A=
      Sortable.options(oldParentNode).onChange(element);=0A=
      droponOptions.onChange(element);=0A=
    }=0A=
  },=0A=
=0A=
  unmark: function() {=0A=
    if(Sortable._marker) Sortable._marker.hide();=0A=
  },=0A=
=0A=
  mark: function(dropon, position) {=0A=
    // mark on ghosting only=0A=
    var sortable =3D Sortable.options(dropon.parentNode);=0A=
    if(sortable && !sortable.ghosting) return; =0A=
=0A=
    if(!Sortable._marker) {=0A=
      Sortable._marker =3D =0A=
        ($('dropmarker') || =
Element.extend(document.createElement('DIV'))).=0A=
          =
hide().addClassName('dropmarker').setStyle({position:'absolute'});=0A=
      =
document.getElementsByTagName("body").item(0).appendChild(Sortable._marke=
r);=0A=
    }    =0A=
    var offsets =3D Position.cumulativeOffset(dropon);=0A=
    Sortable._marker.setStyle({left: offsets[0]+'px', top: offsets[1] + =
'px'});=0A=
    =0A=
    if(position=3D=3D'after')=0A=
      if(sortable.overlap =3D=3D 'horizontal') =0A=
        Sortable._marker.setStyle({left: (offsets[0]+dropon.clientWidth) =
+ 'px'});=0A=
      else=0A=
        Sortable._marker.setStyle({top: (offsets[1]+dropon.clientHeight) =
+ 'px'});=0A=
    =0A=
    Sortable._marker.show();=0A=
  },=0A=
  =0A=
  _tree: function(element, options, parent) {=0A=
    var children =3D Sortable.findElements(element, options) || [];=0A=
  =0A=
    for (var i =3D 0; i < children.length; ++i) {=0A=
      var match =3D children[i].id.match(options.format);=0A=
=0A=
      if (!match) continue;=0A=
      =0A=
      var child =3D {=0A=
        id: encodeURIComponent(match ? match[1] : null),=0A=
        element: element,=0A=
        parent: parent,=0A=
        children: [],=0A=
        position: parent.children.length,=0A=
        container: $(children[i]).down(options.treeTag)=0A=
      }=0A=
      =0A=
      /* Get the element containing the children and recurse over it */=0A=
      if (child.container)=0A=
        this._tree(child.container, options, child)=0A=
      =0A=
      parent.children.push (child);=0A=
    }=0A=
=0A=
    return parent; =0A=
  },=0A=
=0A=
  tree: function(element) {=0A=
    element =3D $(element);=0A=
    var sortableOptions =3D this.options(element);=0A=
    var options =3D Object.extend({=0A=
      tag: sortableOptions.tag,=0A=
      treeTag: sortableOptions.treeTag,=0A=
      only: sortableOptions.only,=0A=
      name: element.id,=0A=
      format: sortableOptions.format=0A=
    }, arguments[1] || { });=0A=
    =0A=
    var root =3D {=0A=
      id: null,=0A=
      parent: null,=0A=
      children: [],=0A=
      container: element,=0A=
      position: 0=0A=
    }=0A=
    =0A=
    return Sortable._tree(element, options, root);=0A=
  },=0A=
=0A=
  /* Construct a [i] index for a particular node */=0A=
  _constructIndex: function(node) {=0A=
    var index =3D '';=0A=
    do {=0A=
      if (node.id) index =3D '[' + node.position + ']' + index;=0A=
    } while ((node =3D node.parent) !=3D null);=0A=
    return index;=0A=
  },=0A=
=0A=
  sequence: function(element) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend(this.options(element), arguments[1] || =
{ });=0A=
    =0A=
    return $(this.findElements(element, options) || []).map( =
function(item) {=0A=
      return item.id.match(options.format) ? =
item.id.match(options.format)[1] : '';=0A=
    });=0A=
  },=0A=
=0A=
  setSequence: function(element, new_sequence) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend(this.options(element), arguments[2] || =
{ });=0A=
    =0A=
    var nodeMap =3D { };=0A=
    this.findElements(element, options).each( function(n) {=0A=
        if (n.id.match(options.format))=0A=
            nodeMap[n.id.match(options.format)[1]] =3D [n, n.parentNode];=0A=
        n.parentNode.removeChild(n);=0A=
    });=0A=
   =0A=
    new_sequence.each(function(ident) {=0A=
      var n =3D nodeMap[ident];=0A=
      if (n) {=0A=
        n[1].appendChild(n[0]);=0A=
        delete nodeMap[ident];=0A=
      }=0A=
    });=0A=
  },=0A=
  =0A=
  serialize: function(element) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend(Sortable.options(element), =
arguments[1] || { });=0A=
    var name =3D encodeURIComponent(=0A=
      (arguments[1] && arguments[1].name) ? arguments[1].name : =
element.id);=0A=
    =0A=
    if (options.tree) {=0A=
      return Sortable.tree(element, arguments[1]).children.map( function =
(item) {=0A=
        return [name + Sortable._constructIndex(item) + "[id]=3D" + =0A=
                =
encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));=0A=
      }).flatten().join('&');=0A=
    } else {=0A=
      return Sortable.sequence(element, arguments[1]).map( =
function(item) {=0A=
        return name + "[]=3D" + encodeURIComponent(item);=0A=
      }).join('&');=0A=
    }=0A=
  }=0A=
}=0A=
=0A=
// Returns true if child is contained within element=0A=
Element.isParent =3D function(child, element) {=0A=
  if (!child.parentNode || child =3D=3D element) return false;=0A=
  if (child.parentNode =3D=3D element) return true;=0A=
  return Element.isParent(child.parentNode, element);=0A=
}=0A=
=0A=
Element.findChildren =3D function(element, only, recursive, tagName) {   =0A=
  if(!element.hasChildNodes()) return null;=0A=
  tagName =3D tagName.toUpperCase();=0A=
  if(only) only =3D [only].flatten();=0A=
  var elements =3D [];=0A=
  $A(element.childNodes).each( function(e) {=0A=
    if(e.tagName && e.tagName.toUpperCase()=3D=3DtagName &&=0A=
      (!only || (Element.classNames(e).detect(function(v) { return =
only.include(v) }))))=0A=
        elements.push(e);=0A=
    if(recursive) {=0A=
      var grandchildren =3D Element.findChildren(e, only, recursive, =
tagName);=0A=
      if(grandchildren) elements.push(grandchildren);=0A=
    }=0A=
  });=0A=
=0A=
  return (elements.length>0 ? elements.flatten() : []);=0A=
}=0A=
=0A=
Element.offsetSize =3D function (element, type) {=0A=
  return element['offset' + ((type=3D=3D'vertical' || =
type=3D=3D'height') ? 'Height' : 'Width')];=0A=
}=0A=

------=_NextPart_000_0021_01C8F7DA.3C475C60
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://devimages.apple.com/global/scripts/browserdetect.js

/**=0A=
 * Same logic as before. Have removed some detection capabilities in an =
effort=0A=
 * to reduce reliance on browser detection in general.=0A=
 * =0A=
 * If there is a particualr detection you feel you need please file a =
ticket=0A=
 * with the request or add the detection yourself with the exact reason =
you=0A=
 * need said detection. Hopefully we'll be able to keep the number of=0A=
 * detection utility functions to a minimum in favor of behavioral =
testing.=0A=
 * =0A=
 * This may also be the place for very common behavioral functions.=0A=
 * =0A=
 */=0A=
=0A=
if (typeof(AC) =3D=3D=3D "undefined") { =0A=
	AC =3D {}; =0A=
}=0A=
=0A=
AC.Detector =3D {=0A=
=0A=
	getAgent: function() {=0A=
		return navigator.userAgent.toLowerCase();=0A=
	},=0A=
	=0A=
	// detect platform=0A=
	isMac: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return !!agent.match(/mac/i);=0A=
	},=0A=
	=0A=
	isWin: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return !!agent.match(/win/i);=0A=
	},=0A=
	=0A=
	isWin2k: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return this.isWin(agent) && (agent.match(/nt\s*5/i));=0A=
	},=0A=
	=0A=
	isWinVista: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return this.isWin(agent) && (agent.match(/nt\s*6/i));=0A=
	},=0A=
	=0A=
	// detect browser=0A=
	isWebKit: function(userAgent) {=0A=
        if(this._isWebKit =3D=3D=3D undefined) {=0A=
            var agent =3D userAgent || this.getAgent();=0A=
            this._isWebKit =3D  !!agent.match(/AppleWebKit/i);=0A=
            this.isWebKit =3D function() {return this._isWebKit};=0A=
        }=0A=
        return this._isWebKit;=0A=
	},=0A=
    =0A=
	isSafari2: function(userAgent) {=0A=
        if(this._isSafari2 =3D=3D=3D undefined) {=0A=
            if(!this.isWebKit()) this._isSafari2 =3D false;=0A=
            else {=0A=
                var ua =3D navigator.userAgent.toLowerCase(); =0A=
               var version=3D parseInt(parseFloat( ua.substring( =
ua.lastIndexOf('safari/') + 7 ) ));=0A=
                this._isSafari2 =3D (version >=3D 419);=0A=
            }=0A=
            this.isSafari2 =3D function() {return this._isSafari2};=0A=
        }=0A=
        return this._isSafari2;=0A=
	},=0A=
	=0A=
	isOpera: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return !!agent.match(/opera/i);=0A=
	},=0A=
	=0A=
	isIE: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return !!agent.match(/msie/i);=0A=
	},=0A=
	=0A=
	isIEStrict: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return agent.match(/msie/i) && !this.isOpera(agent);=0A=
	},=0A=
	=0A=
	isFirefox: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return !!agent.match(/firefox/i);=0A=
	},=0A=
=0A=
	//deprecated, use isMobile=0A=
	isiPhone: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return this.isMobile(agent);=0A=
	},=0A=
	=0A=
	isMobile: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return this.isWebKit(agent) && agent.match(/Mobile/i);=0A=
	},=0A=
	=0A=
	// itunes compabibility=0A=
	isiTunesOK: function(userAgent) {=0A=
		var agent =3D userAgent || this.getAgent();=0A=
		return this.isMac(agent) || this.isWin2k(agent);=0A=
	},=0A=
	=0A=
	isQTInstalled: function() {=0A=
		=0A=
		var qtInstalled =3D false;=0A=
		=0A=
		if(navigator.plugins && navigator.plugins.length) {=0A=
			=0A=
			for(var i=3D0; i < navigator.plugins.length; i++ ) {=0A=
				=0A=
				var plugin =3D navigator.plugins[i];=0A=
				=0A=
				if(plugin.name.indexOf("QuickTime") > -1) { =0A=
					qtInstalled =3D true; =0A=
				}=0A=
			}=0A=
		} else if (typeof(execScript) !=3D 'undefined') {=0A=
			qtObj =3D false; //global variable written to by vbscript for ie=0A=
			execScript('on error resume next: qtObj =3D =
IsObject(CreateObject("QuickTimeCheckObject.QuickTimeCheck.1"))','VBScrip=
t');=0A=
			qtInstalled =3D qtObj;=0A=
		}=0A=
		=0A=
		return qtInstalled;=0A=
	},=0A=
	=0A=
	getQTVersion: function() {=0A=
		=0A=
		var version =3D "0";=0A=
		=0A=
		if (navigator.plugins && navigator.plugins.length) {=0A=
			for (var i =3D 0; i < navigator.plugins.length; i++) {=0A=
				=0A=
				var plugin =3D navigator.plugins[i];=0A=
				=0A=
				//Match: QuickTime Plugin X.Y.Z=0A=
				var match =3D plugin.name.match(/quicktime\D*([\.\d]*)/i);=0A=
				if (match && match[1]) {=0A=
					version =3D match[1];=0A=
				}=0A=
			}=0A=
		} else if (typeof(execScript) !=3D 'undefined') {=0A=
			ieQTVersion=3Dnull;=0A=
=0A=
			execScript('on error resume next: ieQTVersion =3D =
CreateObject("QuickTimeCheckObject.QuickTimeCheck.1").QuickTimeVersion','=
VBScript');=0A=
=0A=
			if(ieQTVersion){=0A=
			    version =3D (ieQTVersion >> 24).toString(16);=0A=
			}=0A=
		}=0A=
		=0A=
		return version;=0A=
	},=0A=
	=0A=
	isQTCompatible: function(required, actual) {=0A=
		=0A=
		function areCompatible(required, actual) {=0A=
			=0A=
			var requiredValue =3D parseInt(required[0], 10);=0A=
			if (isNaN(requiredValue)) {=0A=
				requiredValue =3D 0;=0A=
			}=0A=
			=0A=
			var actualValue =3D parseInt(actual[0], 10);=0A=
			if (isNaN(actualValue)) {=0A=
				actualValue =3D 0;=0A=
			}=0A=
			=0A=
			if (requiredValue =3D=3D=3D actualValue) {=0A=
				if (required.length > 1) {=0A=
					return areCompatible(required.slice(1), actual.slice(1));=0A=
				} else {=0A=
					return true;=0A=
				}=0A=
			} else if (requiredValue < actualValue) {=0A=
				return true;=0A=
			} else {=0A=
				return false;=0A=
			}=0A=
		}=0A=
=0A=
		var expectedVersion =3D required.split(/\./);=0A=
		var actualVersion =3D actual ? actual.split(/\./) : =
this.getQTVersion().split(/\./);=0A=
		=0A=
		return areCompatible(expectedVersion, actualVersion);=0A=
		=0A=
	},=0A=
	=0A=
	isValidQTAvailable: function(required) {=0A=
		return this.isQTInstalled() && this.isQTCompatible(required);=0A=
	}=0A=
	=0A=
};
------=_NextPart_000_0021_01C8F7DA.3C475C60
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://devimages.apple.com/global/scripts/apple_core.js

=0A=
//TODO load dependencies: browserdetect=0A=
=0A=
//onDOMReady Event Extension=0A=
//http://clientside.cnet.com/code-snippets/event-scripting/a-dom-ready-ex=
tension-for-prototype/=0A=
Object.extend(Event, {=0A=
  _domReady : function() {=0A=
    if (arguments.callee.done) return;=0A=
    arguments.callee.done =3D true;=0A=
=0A=
    if (this._timer)  clearInterval(this._timer);=0A=
    AC.isDomReady =3D true;=0A=
    if(this._readyCallbacks) this._readyCallbacks.each(function(f) { f() =
});=0A=
    this._readyCallbacks =3D null;=0A=
},=0A=
  onDOMReady : function(f) {=0A=
	if(AC.isDomReady) {=0A=
		f();=0A=
	}=0A=
    else {=0A=
		if (!this._readyCallbacks) {=0A=
			  var domReady =3D this._domReady.bind(this);=0A=
			  =0A=
			  if (document.addEventListener)=0A=
				document.addEventListener("DOMContentLoaded", domReady, false);=0A=
				=0A=
				/*@cc_on @*/=0A=
				/*@if (@_win32)=0A=
					document.write("<script id=3D__ie_onload defer =
src=3Djavascript:void(0)><\/script>");=0A=
					document.getElementById("__ie_onload").onreadystatechange =3D =
function() {=0A=
						if (this.readyState =3D=3D "complete") domReady(); =0A=
					};=0A=
				/*@end @*/=0A=
				=0A=
				if (/WebKit/i.test(navigator.userAgent)) { =0A=
				  this._timer =3D setInterval(function() {=0A=
					if (/loaded|complete/.test(document.readyState)) domReady(); =0A=
				  }, 10);=0A=
				}=0A=
				=0A=
				Event.observe(window, 'load', domReady);=0A=
				Event._readyCallbacks =3D  [];=0A=
			}=0A=
			Event._readyCallbacks.push(f);=0A=
	  }=0A=
  }=0A=
});=0A=
=0A=
=0A=
if (typeof(AC) =3D=3D "undefined") AC =3D {};=0A=
=0A=
AC.decorateSearchInput =3D function(field, options) {=0A=
	=0A=
	var searchField =3D $(field);=0A=
	var standIn =3D null;=0A=
=0A=
	var results =3D 0;=0A=
	var placeholder =3D '';=0A=
	var autosave =3D '';=0A=
=0A=
	if(options) {=0A=
		=0A=
		if(options.results) { results =3D options.results; }=0A=
		if(options.placeholder) { placeholder =3D options.placeholder; }=0A=
		if(options.autosave) { autosave =3D options.autosave; }=0A=
		=0A=
	}=0A=
	=0A=
	if(AC.Detector.isWebKit()) {=0A=
		=0A=
		searchField.setAttribute('type', 'search');=0A=
		if(!searchField.getAttribute('results')) {=0A=
			searchField.setAttribute('results', results);=0A=
		}=0A=
		=0A=
		if(null !=3D placeholder) {=0A=
			searchField.setAttribute('placeholder', placeholder);=0A=
			searchField.setAttribute('autosave', autosave);=0A=
		}=0A=
		=0A=
	} else {=0A=
		=0A=
		//prevent browser from doing its own autocomplete, threw odd xul =0A=
		//error on reset sometimes, although this feels a little=0A=
		//heavy handed=0A=
		searchField.setAttribute('autocomplete', 'off');=0A=
		=0A=
		//replace the field with a standin while we create the wrapper=0A=
		//we can't lose the reference to this field as other objects may=0A=
		//have already registered listeners on this field=0A=
		=0A=
		standIn =3D document.createElement('input');=0A=
		searchField.parentNode.replaceChild(standIn, searchField)=0A=
=0A=
		var left =3D document.createElement('span');=0A=
		Element.addClassName(left, 'left');=0A=
	=0A=
		var right =3D document.createElement('span');=0A=
		Element.addClassName(right, 'right');=0A=
		=0A=
		var reset =3D document.createElement('div');=0A=
		Element.addClassName(reset, 'reset');=0A=
		=0A=
		var wrapper =3D document.createElement('div');=0A=
		Element.addClassName(wrapper, 'search-wrapper');=0A=
		=0A=
		var alreadyHasPlaceholder =3D field.value =3D=3D placeholder;=0A=
		var isEmpty =3D field.value.length =3D=3D 0;=0A=
		=0A=
		if (alreadyHasPlaceholder || isEmpty) {=0A=
			searchField.value =3D placeholder;=0A=
			Element.addClassName(wrapper, 'blurred');=0A=
			Element.addClassName(wrapper, 'empty');=0A=
		}=0A=
	=0A=
		wrapper.appendChild(left);=0A=
		wrapper.appendChild(searchField);=0A=
		wrapper.appendChild(right);=0A=
		wrapper.appendChild(reset);=0A=
	=0A=
		var focus =3D function() {=0A=
			=0A=
			var blurred =3D Element.hasClassName(wrapper, 'blurred');=0A=
=0A=
			//need to check for flag AND placeholder lest somebody need to =0A=
			//search for the placeholder text itself=0A=
			if(searchField.value =3D=3D placeholder && blurred) {=0A=
				searchField.value =3D '';=0A=
			}=0A=
			=0A=
			Element.removeClassName(wrapper, 'blurred');=0A=
		}=0A=
		Event.observe(searchField, 'focus', focus);=0A=
		=0A=
		var blur =3D function() {=0A=
			=0A=
			if(searchField.value =3D=3D '') {=0A=
				Element.addClassName(wrapper, 'empty');=0A=
				searchField.value =3D placeholder;=0A=
			}=0A=
			=0A=
			Element.addClassName(wrapper, 'blurred');=0A=
		}=0A=
		Event.observe(searchField, 'blur', blur);=0A=
		=0A=
		=0A=
		var toggleReset =3D function() {=0A=
			=0A=
			if(searchField.value.length >=3D 0) {=0A=
				Element.removeClassName(wrapper, 'empty');=0A=
			}=0A=
		}=0A=
		Event.observe(searchField, 'keydown', toggleReset);=0A=
	=0A=
	=0A=
		var resetField =3D function() {=0A=
			return( function(evt) {=0A=
				=0A=
				var escaped =3D false;=0A=
				=0A=
				if(evt.type =3D=3D 'keydown') {=0A=
					if(evt.keyCode !=3D 27) {=0A=
						return; //if it's not escape ignore it=0A=
					} else {=0A=
						escaped =3D true;=0A=
					}=0A=
				}=0A=
				=0A=
				searchField.blur(); //can't change value while in field=0A=
				searchField.value =3D '';=0A=
				Element.addClassName(wrapper, 'empty');=0A=
				searchField.focus();=0A=
=0A=
			})=0A=
		}=0A=
		Event.observe(reset, 'mousedown', resetField());=0A=
		Event.observe(searchField, 'keydown', resetField());=0A=
	=0A=
		if (standIn) {=0A=
			standIn.parentNode.replaceChild(wrapper, standIn);=0A=
		}=0A=
		=0A=
	}=0A=
}=0A=
=0A=
// this is called Element2 because=0A=
// adding methods to Element BLOWS UP IE7 =0A=
// for a reason I still haven't got to the bottom=0A=
// of.  It appears to be fine though, as long=0A=
// as you don't try to add additional methods=0A=
// to Element itself.=0A=
var Element2 =3D {};=0A=
Element2.Methods =3D {=0A=
	=0A=
	getInnerDimensions: function(element) {=0A=
    	=0A=
		element =3D $(element);=0A=
		var d =3D Element.getDimensions(element);=0A=
		=0A=
		var innerHeight =3D d.height;=0A=
		var styleOf =3D Element.getStyle;=0A=
		innerHeight -=3D styleOf(element, 'border-top-width') && =
styleOf(element, 'border-top-width') !=3D 'medium' ? =
parseInt(styleOf(element, 'border-top-width'), 10) : 0;=0A=
		innerHeight -=3D styleOf(element, 'border-bottom-width') && =
styleOf(element, 'border-bottom-width') !=3D 'medium' ? =
parseInt(styleOf(element, 'border-bottom-width'), 10) : 0;=0A=
		innerHeight -=3D styleOf(element, 'padding-top') ? =
parseInt(styleOf(element, 'padding-top'), 10) : 0;=0A=
		innerHeight -=3D styleOf(element, 'padding-bottom') ? =
parseInt(styleOf(element, 'padding-bottom'), 10) : 0;=0A=
=0A=
		var innerWidth =3D d.width;=0A=
		innerWidth -=3D styleOf(element, 'border-left-width') && =
styleOf(element, 'border-left-width') !=3D 'medium' ? =
parseInt(styleOf(element, 'border-left-width'), 10) : 0;=0A=
		innerWidth -=3D styleOf(element, 'border-right-width') && =
styleOf(element, 'border-right-width') !=3D 'medium' ? =
parseInt(styleOf(element, 'border-right-width'), 10) : 0;=0A=
		innerWidth -=3D styleOf(element, 'padding-left') ? =
parseInt(styleOf(element, 'padding-left'), 10) : 0;=0A=
		innerWidth -=3D styleOf(element, 'padding-right') ? =
parseInt(styleOf(element, 'padding-right'), 10) : 0;=0A=
=0A=
	    return {width: innerWidth, height: innerHeight};=0A=
	},=0A=
	=0A=
	/*=0A=
		Yes, we understand this is a hack. Safari is calculating margins for =
unpositioned elements=0A=
		as the total remaining viewport width=0A=
	*/=0A=
	getOuterDimensions: function(element) {=0A=
		element =3D $(element);=0A=
		var clone =3D element.cloneNode(true);=0A=
		=0A=
		document.body.appendChild(clone);=0A=
		Element.setStyle(clone, { position: "absolute", visibility: "hidden" =
});=0A=
		var d =3D Element.getDimensions(clone);=0A=
		=0A=
		var outerHeight =3D d.height;=0A=
		var styleOf =3D Element.getStyle;=0A=
		outerHeight +=3D styleOf(clone, 'margin-top') ? =
parseInt(styleOf(clone, 'margin-top'), 10) : 0;=0A=
		outerHeight +=3D styleOf(clone, 'margin-bottom') ? =
parseInt(styleOf(clone, 'margin-bottom'), 10) : 0;=0A=
=0A=
		var outerWidth =3D d.width;=0A=
		outerWidth +=3D styleOf(clone, 'margin-left') ? =
parseInt(styleOf(clone, 'margin-left'), 10) : 0;=0A=
		outerWidth +=3D styleOf(clone, 'margin-right') ? =
parseInt(styleOf(clone, 'margin-right'), 10) : 0;=0A=
=0A=
		Element.remove(clone);=0A=
		=0A=
		return {width: outerWidth, height: outerHeight};=0A=
	},=0A=
	=0A=
	removeAllChildNodes: function(element) {=0A=
		element =3D $(element);=0A=
		if(! element) { return; }=0A=
		=0A=
		while (element.hasChildNodes()) {=0A=
	  		element.removeChild(element.lastChild);=0A=
		}=0A=
	}=0A=
	=0A=
};=0A=
=0A=
Object.extend(Element, Element2.Methods);=0A=
=0A=
=0A=
=0A=
=0A=
/**=0A=
* Omniture Tracking library=0A=
*/=0A=
if (typeof(AC.Tracking) =3D=3D "undefined") {AC.Tracking =3D {};}=0A=
=0A=
AC.Tracking.getLinkClicked =3D function(target) {=0A=
	=0A=
	if (!target) {=0A=
		return null;=0A=
	}=0A=
	=0A=
	while (target.nodeName !=3D 'A' && target.nodeName !=3D 'BODY') {=0A=
		target =3D target.parentNode;=0A=
	}=0A=
	=0A=
	if (!target.href) {=0A=
		target =3D null;=0A=
	}=0A=
	=0A=
	return target;=0A=
};=0A=
=0A=
AC.Tracking.trackLinksWithin =3D function(container, test, title, =
properties, options) {=0A=
	=0A=
	$(container).observe('mousedown', function(evt) {=0A=
		=0A=
		var target =3D AC.Tracking.getLinkClicked(Event.element(evt));=0A=
		=0A=
		if (target && test(target)) {=0A=
			=0A=
			if (options && options.beforeTrack) {=0A=
				// provides a way to alter the properties or the title in some way =
for the mousedown=0A=
				// most felixble way to capture what link was actually clicked or =
whatever else=0A=
				// you want at the time of the event=0A=
				var altered =3D options.beforeTrack(target, title, properties);=0A=
				if (altered) {=0A=
					title =3D altered.title;=0A=
					properties =3D altered.properties;=0A=
				}=0A=
			}=0A=
			=0A=
			AC.Tracking.trackClick(properties, this, 'o', title);=0A=
		}=0A=
		=0A=
	});=0A=
	=0A=
}=0A=
=0A=
/**=0A=
 * Effectively tags all links within a container conforming to the =
supplied =0A=
 * test function reference with the specified key and value.=0A=
 * =0A=
 * The test argument should be a function reference expecting the link =
as =0A=
 * its first and only parameter. It should simply return true or false =0A=
 * indicating whether the link should be tagged or not.=0A=
 */=0A=
AC.Tracking.tagLinksWithin =3D function(container, key, value, test) {=0A=
	=0A=
	$(container).observe('mousedown', function(evt) {=0A=
		=0A=
		var link =3D Event.element(evt);=0A=
=0A=
		if (!link) {=0A=
			return;=0A=
		}=0A=
=0A=
		while (link.nodeName !=3D 'A' && link.nodeName !=3D 'BODY') {=0A=
			link =3D link.parentNode;=0A=
		}=0A=
		=0A=
		if (link.href && test(link)) {=0A=
			AC.Tracking.tagLink(link, key, value);=0A=
		}=0A=
		=0A=
		link =3D null;=0A=
	})=0A=
	=0A=
};=0A=
=0A=
/**=0A=
 * Appends the specified key and value to the querystring of the =
supplied =0A=
 * anchor's href attribute.=0A=
 */=0A=
AC.Tracking.tagLink =3D function(link, key, value) {=0A=
	=0A=
	var href =3D link.getAttribute('href');=0A=
	=0A=
	if (href.match(/\?/)) {=0A=
		var params =3D href.toQueryParams();=0A=
		params[key] =3D value;=0A=
		href =3D href.split(/\?/)[0] + '?' + $H(params).toQueryString();=0A=
	} else {=0A=
		href +=3D '?' + key + '=3D' + value;=0A=
	}=0A=
	=0A=
	link.setAttribute('href', href);=0A=
};=0A=
=0A=
/**=0A=
 * Makes a tracking request=0A=
 * =0A=
 * Note: Typically you won't need to call this directly, instead you =
should=0A=
 * track events using either TrackClick or TrackPage whihc provide more=0A=
 * friendly interfaces to this method =0A=
 * =0A=
 * @trackingMethod the method of Omniture tracking to use=0A=
 * @properties associative array of property names and their associated =
values to track=0A=
 * @options associate array of options to use in this tracking context, =0A=
 * 	some of these are required depending upon the trackingMethod you =
have chose=0A=
 */=0A=
AC.Tracking.track =3D function(trackingMethod, properties, options) {=0A=
=0A=
	if (typeof(s_gi) =3D=3D 'undefined' || !s_gi) {=0A=
		return;=0A=
	}=0A=
=0A=
	options =3D options || {};=0A=
=0A=
	//use existing tracking account if available, or use one from the =
options=0A=
	if (typeof(s_account) !=3D 'undefined') {=0A=
		s =3D s_gi(s_account)=0A=
	} else if (options.s_account){=0A=
		s =3D s_gi(options.s_account);=0A=
	} else {=0A=
		return;=0A=
	}=0A=
=0A=
	if (trackingMethod =3D=3D s.tl) {=0A=
		=0A=
		var linkTrackVars =3D ''=0A=
		=0A=
		for (var key in properties) {=0A=
			linkTrackVars +=3D key + ',';=0A=
		}=0A=
		linkTrackVars =3D linkTrackVars.replace(/,$/, '');=0A=
		=0A=
		s.linkTrackVars =3D linkTrackVars;=0A=
	} else {=0A=
		s.linkTrackVars =3D '';=0A=
	}=0A=
=0A=
	//clear properties set by default within a page=0A=
	s.prop4 =3D "";=0A=
	s.g_prop4 =3D "";=0A=
	s.prop6 =3D "";=0A=
	s.g_prop6 =3D "";=0A=
	s.pageName =3D "";=0A=
	s.g_pageName =3D "";=0A=
	s.pageURL =3D "";=0A=
	s.g_pageURL =3D "";=0A=
	s.g_channel =3D "";=0A=
	=0A=
	var sanitize =3D function(value) {=0A=
	    if (typeof(value) =3D=3D "string") {=0A=
	        return =
value.replace(/[\'\"\=C3=A2=E2=82=AC=C5=93\=C3=A2=E2=82=AC=C2=9D\=C3=A2=E2=
=82=AC=CB=9C\=C3=A2=E2=82=AC=E2=84=A2]/g, '');=0A=
	    } else {=0A=
	        return value;=0A=
	    }=0A=
	}=0A=
=0A=
	for (var key in properties) {=0A=
=0A=
		s[key] =3D sanitize(properties[key]);=0A=
=0A=
		if (key =3D=3D 'events') {=0A=
			s.linkTrackEvents =3D sanitize(properties[key]);=0A=
		}=0A=
	}=0A=
=0A=
	if (trackingMethod =3D=3D s.t) {=0A=
		void(s.t());=0A=
	} else {=0A=
		s.tl(options.obj, options.linkType, sanitize(options.title));=0A=
	}=0A=
	=0A=
	for (var key in properties) {=0A=
		s[key] =3D '';=0A=
		=0A=
		if (key =3D=3D 'events') {=0A=
			s.linkTrackEvents =3D 'None';=0A=
		}=0A=
	}=0A=
=0A=
};=0A=
=0A=
/**=0A=
 * Uses the Omniture s.tl Tracking method to track a "click"=0A=
 * =0A=
 * @properties associative array of params and associated values=0A=
 * @obj object for context, usually "this"=0A=
 * @linkType type of link for Omniture usually 'o'=0A=
 * @title human readable title for this link that shows up in reports=0A=
 * @options associative array of options to apply to this tracking =
context (currently no valid options are available)=0A=
 */=0A=
AC.Tracking.trackClick =3D function(properties, obj, linkType, title, =
options) {=0A=
	=0A=
	var options =3D {=0A=
		obj: obj,=0A=
		linkType: linkType,=0A=
		title: title=0A=
	};=0A=
	=0A=
	AC.Tracking.track(s.tl, properties, options);=0A=
}=0A=
=0A=
/**=0A=
 * Uses the Omniture s.t Tracking method to track a "page load"=0A=
 * =0A=
 * @properties associative array of params and associated values=0A=
 * @options associative array of options to apply to this tracking =
context=0A=
 */=0A=
AC.Tracking.trackPage =3D function(properties, options) {=0A=
	AC.Tracking.track(s.t, properties, options);=0A=
}=0A=
=0A=
=0A=
Element.Methods.childNodeWithNodeTypeAtIndex =3D function(element, =
nodeType,index) {=0A=
	var node =3D element.firstChild;=0A=
    if (!node) return null;=0A=
	var i=3D0;=0A=
    while (node) {=0A=
		if(node.nodeType =3D=3D=3D nodeType) {=0A=
			if(index =3D=3D=3D i) {=0A=
				return node;=0A=
			}=0A=
			i++;=0A=
		}=0A=
		node =3D node.nextSibling;=0A=
	}=0A=
    return null;=0A=
};=0A=
=0A=
=0A=
=0A=
/* String Extensions Begin */=0A=
String.prototype.lastPathComponent =3D function() {=0A=
	var index =3D this.lastIndexOf("/");=0A=
	if(index !=3D -1) {=0A=
		return this.substring(index+1,this.length-1);=0A=
	}=0A=
	else return null;=0A=
}=0A=
=0A=
String.prototype.stringByDeletingLastPathComponent =3D function() {=0A=
	var index =3D this.lastIndexOf("/");=0A=
	if(index !=3D -1) {=0A=
		return this.slice(0,index);=0A=
	}=0A=
	else return null;=0A=
}=0A=
=0A=
String.prototype.stringByAppendingPathComponent =3D function(value) {=0A=
 	return (this.lastIndexOf("/") !=3D=3D (this.length-1)) ? =
(this+"/"+value) : (this+value);=0A=
}=0A=
=0A=
String.prototype.stringByRemovingPrefix =3D function(value) {=0A=
	var index =3D this.indexOf(value);=0A=
	if(index > -1) {=0A=
		var result =3D this.substring(index+value.length,this.length);=0A=
		return result;=0A=
	}=0A=
	else {=0A=
		return this;=0A=
	}=0A=
}=0A=
String.prototype.pathExtension =3D function() {=0A=
	var lastPathComponent =3D this.lastPathComponent();=0A=
	var index =3D lastPathComponent.lastIndexOf(".");=0A=
	if(index !=3D -1) {=0A=
		return lastPathComponent.slice(index,lastPathComponent.length);=0A=
	}=0A=
	else return "";=0A=
}=0A=
=0A=
=0A=
/* String Extensions End */=0A=
=0A=
/* Array Extensions Begin */=0A=
=0A=
Array.prototype.addObjectsFromArray =3D function(array) {=0A=
	if(array.constructor =3D=3D=3D Array) {=0A=
		this.push.apply(this,array);=0A=
	}=0A=
	else {=0A=
		for(var i=3D0,item;(item =3D array[i]);i++) {=0A=
			this[this.length] =3D item;=0A=
		}=0A=
	}=0A=
}=0A=
=0A=
//To let an array behave like a node list=0A=
Array.prototype.item =3D function(index) {=0A=
	return this[index];=0A=
}=0A=
 =0A=
/* Array Extensions End */=0A=
=0A=
=0A=
document._importNode =3D function(node, allChildren) {=0A=
	/* find the node type to import */=0A=
	if (node.nodeType =3D=3D=3D Node.ELEMENT_NODE) {=0A=
			/* create a new element */=0A=
			var newNode =3D document.createElement(node.nodeName);=0A=
			var i, il;=0A=
			/* does the node have any attributes to add? */=0A=
			if (node.attributes && node.attributes.length > 0)=0A=
				/* add all of the attributes */=0A=
				var nodeAttributes =3D node.attributes;=0A=
				var iNodeName, iNodeValue;=0A=
				for (i =3D 0, il =3D node.attributes.length; i < il;) {=0A=
					iNodeName =3D nodeAttributes[i].nodeName;=0A=
					iNodeValue =3D node.getAttribute(nodeAttributes[i++].nodeName);=0A=
					if(iNodeName =3D=3D=3D "class") {=0A=
						//iNodeName =3D "className";=0A=
						newNode.setAttribute("className", iNodeValue);=0A=
					}=0A=
					newNode.setAttribute(iNodeName, iNodeValue);=0A=
				}=0A=
			/* are we going after children too, and does the node have any? */=0A=
			if (allChildren && node.childNodes && node.childNodes.length > 0){=0A=
				/* recursively get all of the child nodes */=0A=
				for (i =3D 0, il =3D node.childNodes.length; i < il;)=0A=
					newNode.appendChild(document._importNode(node.childNodes[i++], =
allChildren));=0A=
			}=0A=
			return newNode;=0A=
	}=0A=
		else if (node.nodeType =3D=3D=3D Node.TEXT_NODE) {=0A=
			return document.createTextNode(node.nodeValue);=0A=
		}=0A=
		else if(node.nodeType =3D=3D=3D Node.COMMENT_NODE) {=0A=
			return document.createComment(node.nodeValue);=0A=
		}=0A=
		else if(node.nodeType =3D=3D=3D Node.CDATA_SECTION_NODE) {=0A=
			return document.createCDATASection(node.nodeValue);=0A=
		}=0A=
		else return null;=0A=
};=0A=
if(!document.importNode) {=0A=
	document.importNode =3D document._importNode;=0A=
}=0A=
=0A=
if(AC.Detector.isIEStrict()) {=0A=
=0A=
	Element.Methods.hasAttribute =3D function(element, attributeName ) {=0A=
		if ( attributeName =3D=3D "class") attributeName =3D "className";=0A=
		else if(attributeName =3D=3D "for") attributeName =3D "htmlFor";=0A=
		var result =3D element.getAttribute(attributeName);=0A=
		return ((result !=3D null) && (result !=3D=3D ""));=0A=
		=0A=
	};=0A=
=0A=
	document._getElementsByName =3D document.getElementsByName;=0A=
	document._HTMLElementsWithName =3D =
["a","apple","button","form","frame","iframe","img","input","object","map=
","meta","param","textarea","select"];=0A=
=0A=
	document.getElementsByName =3D function(name) {=0A=
		var _HTMLElementsWithName =3D this._HTMLElementsWithName;=0A=
		var result =3D [], ieResult, i, iNode;=0A=
		for(var e=3D0, element;(element =3D _HTMLElementsWithName[e]);e++) {=0A=
			ieResult =3D document.getElementsByTagName(element);=0A=
			for(i =3D 0;(iNode=3DieResult[i]); i++) {=0A=
				if(iNode.name =3D=3D=3D name) {=0A=
					 result[result.length] =3D iNode;=0A=
				}=0A=
			}=0A=
		}=0A=
=0A=
		return result;=0A=
	}=0A=
}=0A=

------=_NextPart_000_0021_01C8F7DA.3C475C60
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://devimages.apple.com/global/scripts/search_decorator.js

Event.onDOMReady(function() {=0A=
	=0A=
	var inputs =3D document.getElementsByTagName('input');=0A=
	=0A=
	for (var i =3D 0; i < inputs.length; i++) {=0A=
		var input =3D $(inputs[i])=0A=
		if(input.hasClassName('prettysearch')) {=0A=
			=0A=
			var options =3D {};=0A=
			=0A=
			//these are unique autosave names for globally used=0A=
			//autosave collections=0A=
			=0A=
			//after decoration you can simply:=0A=
			//	field.setAttribute('autosave', 'autosaveName');=0A=
			=0A=
			if(input.hasClassName('applesearch')) {=0A=
				options.autosave =3D 'Apple.com';=0A=
			} else if (input.hasClassName('reseller')) {=0A=
				options.autosave =3D 'Apple.com Reseller';=0A=
			}=0A=
			=0A=
			if(input.parentNode.tagName =3D=3D 'LABEL') {=0A=
				=0A=
				var placeholderText =3D "";=0A=
				=0A=
				var labelElement =3D =
input.up().getElementsByClassName('prettyplaceholder')[0];=0A=
				=0A=
				//either grab text in a classed element=0A=
				if(labelElement) {=0A=
					placeholderText =3D labelElement.innerHTML;=0A=
				=0A=
				//or grab text from right inside the label=0A=
				} else {=0A=
					placeholderText =3D input.parentNode.firstChild.nodeValue;=0A=
					input.parentNode.firstChild.nodeValue =3D '';=0A=
				}=0A=
				=0A=
				placeholderText =3D placeholderText.split('\n')[0];=0A=
				options.placeholder =3D placeholderText;=0A=
=0A=
			}=0A=
			=0A=
			AC.decorateSearchInput(input, options);=0A=
		}=0A=
	}	=0A=
});=0A=

------=_NextPart_000_0021_01C8F7DA.3C475C60
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://devimages.apple.com/global/scripts/adc_core.js

Event.onDOMReady(function() {=0A=
	var container =3D $(document.body);=0A=
	container.addClassName('hasjs');=0A=
});=0A=
=0A=
Event.onDOMReady(function() {=0A=
	var tables =3D $$('table.stroke');=0A=
	tables.each(function(table) {=0A=
		var select =3D function(selector1, selector2) {=0A=
			var cells =3D table.select(selector1);=0A=
			cells =3D cells.concat(table.select(selector2));=0A=
			return cells;=0A=
		}.bind(table);=0A=
=0A=
		var cells =3D select('tr:first-child th', 'tr:first-child td');=0A=
		cells.each(function(cell) { cell.style.borderTop =3D 'none' });=0A=
=0A=
		var cells =3D select('tr:last-child th', 'tr:last-child td');=0A=
		cells.each(function(cell) { cell.style.borderBottom =3D 'none' });=0A=
=0A=
		var cells =3D select('tr th:first-child', 'tr td:first-child');=0A=
		cells.each(function(cell) { cell.style.borderLeft =3D 'none' });=0A=
=0A=
		var cells =3D select('tr th:last-child', 'tr td:last-child');=0A=
		cells.each(function(cell) { cell.style.borderRight =3D 'none' });=0A=
	});=0A=
});=0A=
=0A=
=0A=
=0A=
// =0A=
// ADC Core=0A=
// =0A=
=0A=
if (typeof(ADC) =3D=3D "undefined") ADC =3D {};=0A=
=0A=
ADC.cancelEvent =3D function(evt) {=0A=
	if (evt) {=0A=
		var link =3D evt.findElement('a');=0A=
		if (link) {=0A=
			if (!link.href.match('#')) {=0A=
				evt.stop();=0A=
			} else if (!AC.Detector.isWebKit() || (AC.Detector.isWebKit() && =
parseInt(AC.Detector.getAgent().match(/version\/(\d)/)[1])>2)) {=0A=
				evt.stop();=0A=
				document.location.hash =3D link.href.replace(/.*#/, '');=0A=
			}=0A=
		}=0A=
	}=0A=
}=0A=
=0A=
ADC.Menus =3D Class.create({=0A=
	menus: [],=0A=
=0A=
	initialize: function(menus, event) {=0A=
		this.setMenus(menus, event);=0A=
	},=0A=
=0A=
	setMenus: function(menus, event) {=0A=
		if (!event) var event =3D 'click';=0A=
=0A=
		menus.each(function(menu) {=0A=
			var menu =3D new ADC.Menu(menu, event);=0A=
			this.setEvent(menu, event);=0A=
			this.menus.push(menu);=0A=
		}.bind(this));=0A=
	},=0A=
=0A=
	setEvent: function(menu, event) {=0A=
		Event.observe(menu.menu, event, function(evt) {=0A=
			ADC.cancelEvent(evt);=0A=
			var menus =3D this.menus.without(menu);=0A=
			menus.each(function(menu) {=0A=
				menu.close();=0A=
			});=0A=
		}.bind(this), false);=0A=
	}=0A=
});=0A=
=0A=
ADC.Menu =3D Class.create({=0A=
	initialize: function(menu, event) {=0A=
		this.menu =3D menu;=0A=
		this.setEvents(event);=0A=
	},=0A=
=0A=
	setEvents: function(event) {=0A=
		if (!event) var event =3D 'click';=0A=
		=0A=
		if (event =3D=3D 'click') this.setHovers();=0A=
=0A=
		Event.observe(this.menu, event, this.toggleMenu.bind(this), false);=0A=
	},=0A=
=0A=
	setHovers: function(event) {=0A=
		Event.observe(this.menu, 'mouseover', function() {=0A=
			Element.addClassName(this.menu, 'hover');=0A=
		}.bind(this), false);=0A=
=0A=
		Event.observe(this.menu, 'mouseout', function() {=0A=
			Element.removeClassName(this.menu, 'hover');=0A=
		}.bind(this), false);=0A=
	},=0A=
	=0A=
	linkWithin: function(evt) {=0A=
		var link =3D evt.findElement('a');=0A=
		if (link.up().up().up() =3D=3D this.menu) {=0A=
			document.location =3D link.href;=0A=
			return true;=0A=
		}=0A=
		=0A=
		return false;=0A=
	},=0A=
=0A=
	toggleMenu: function(evt) {=0A=
		if (!this.linkWithin(evt)) ADC.cancelEvent(evt);=0A=
=0A=
		if (!this.menu.hasClassName('active')) {=0A=
			this.open();=0A=
		} else {=0A=
			this.close();=0A=
		}=0A=
	},=0A=
=0A=
	open: function() {=0A=
		this.menu.addClassName('active');=0A=
	},=0A=
=0A=
	close: function() {=0A=
		this.menu.removeClassName('active');=0A=
	}=0A=
=0A=
});=0A=

------=_NextPart_000_0021_01C8F7DA.3C475C60
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://images.apple.com/global/metrics/js/cid_check.js

if (typeof(AC) =3D=3D "undefined") {AC =3D {};}=0A=
AC.AosCheck =3D function() {	=0A=
	if (document.location.search && s_account) {=0A=
		var dls =3D document.location.search;=0A=
		if (dls.indexOf("?cid=3DAOS-") > -1 || dls.indexOf("&cid=3DAOS-") > -1)=0A=
			s_account +=3D ",applestoreWW";=0A=
	}=0A=
}=0A=
AC.AosCheck();=0A=

------=_NextPart_000_0021_01C8F7DA.3C475C60
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://images.apple.com/global/metrics/js/s_code_h.js

/* SiteCatalyst code version: H.8. Copyright 1997-2007 Omniture, Inc. =
More info available at http://www.omniture.com */=0A=
// 2007-01-26: Added Relative Link Patch=0A=
// 2007-01-30: Fixed Relative Link Patch=0A=
// 2007-07-24: ClickMap Image Map Patch=0A=
// 2008-04-03: Genesis DFA integration plugin, doPlugins function call, =
s.variableProvider=0A=
/************************ ADDITIONAL FEATURES ************************=0A=
     Dynamic Report Suite Selection=0A=
*/=0A=
/* Specify the Report Suite ID(s) to track here */=0A=
//var s_account=3D"appleglobal"=0A=
var s=3Ds_gi(s_account)=0A=
/************************** CONFIG SECTION **************************/=0A=
/* You may add or alter any code config here. */=0A=
=0A=
/* E-commerce Config */=0A=
s.currencyCode=3D"USD"=0A=
/* Link Tracking Config */=0A=
s.trackDownloadLinks=3Dtrue=0A=
s.trackExternalLinks=3Dtrue=0A=
s.trackInlineStats=3Dtrue=0A=
s.linkDownloadFileTypes=3D"zip,wav,mp3,mp4,doc,pdf,xls,rss,dmg,sit,pkg,ex=
e,xml,mov"=0A=
s.linkInternalFilters=3D"javascript:,apple.com"=0A=
s.linkLeaveQueryString=3Dfalse=0A=
s.linkTrackVars=3D"campaign"=0A=
s.linkTrackEvents=3D"None"=0A=
s.variableProvider =
=3D'DFA#1513429:v46=3D[["DFA-"+lis+"-"+lip+"-"+lastimp+"-"+lastimptime+"-=
"+lcs+"-"+lcp+"-"+lastclk+"-"+lastclktime]]';=0A=
=0A=
function getZipCode() {=0A=
	var cookies =3D document.cookie.split(/;/g);=0A=
	=0A=
	for (var i =3D cookies.length - 1; i >=3D 0; i--){=0A=
		var cookie =3D cookies[i];=0A=
		zipCode =3D cookie.match(/PostalCode=3D(\d{5})/i);=0A=
		if(zipCode) {=0A=
			zipCode =3D zipCode[1];=0A=
			break;=0A=
		}=0A=
	}=0A=
	=0A=
	if(!zipCode) {=0A=
		zipCode =3D "No Zip";=0A=
	}=0A=
	=0A=
	return zipCode;=0A=
}=0A=
=0A=
function QTCheck() {=0A=
	if (typeof(AC) !=3D "undefined" && typeof(AC.Detector) !=3D "undefined" =
&& typeof(AC.Detector.getQTVersion) !=3D "undefined") {=0A=
		=0A=
		if (AC.Detector.isMobile()) {=0A=
			return "Mobile"=0A=
		}=0A=
		=0A=
		var version =3D AC.Detector.getQTVersion();=0A=
		if ("0" =3D=3D version) {=0A=
			return "No QuickTime"=0A=
		} else {=0A=
			return version;=0A=
		}=0A=
	} else {=0A=
		return "Not detected"=0A=
	}=0A=
}=0A=
=0A=
if (typeof(iTunesDetected) =3D=3D=3D 'function') {=0A=
    =0A=
    var activeX =3D document.createElement('object');=0A=
    activeX.setAttribute('width', 1);=0A=
    activeX.setAttribute('height', 1);=0A=
    activeX.id =3D 'iTunesDetectorIE';=0A=
    activeX.setAttribute('classid', =
"clsid:D719897A-B07A-4C0C-AEA9-9B663A28DFCB");=0A=
    document.getElementsByTagName('head')[0].appendChild(activeX);=0A=
    =0A=
    s.prop12 =3D iTunesDetected() ? "iTunes" : "No iTunes";=0A=
}=0A=
=0A=
=0A=
var isIE  =3D (navigator.appVersion.indexOf("MSIE") !=3D -1) ? true : =
false;=0A=
var isWin =3D (navigator.appVersion.toLowerCase().indexOf("win") !=3D =
-1) ? true : false;=0A=
var isOpera =3D (navigator.userAgent.indexOf("Opera") !=3D -1) ? true : =
false;=0A=
=0A=
=0A=
// Flash Player Version Detection - Rev 1.6=0A=
// Detect Client Browser type=0A=
// Copyright(c) 2005-2006 Adobe Macromedia Software, LLC. All rights =
reserved.=0A=
function ControlVersion()=0A=
{=0A=
	var version;=0A=
	var axo;=0A=
	var e;=0A=
=0A=
=0A=
	try {=0A=
		// version will be set for 7.X or greater players=0A=
		axo =3D new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7");=0A=
		version =3D axo.GetVariable("$version");=0A=
	} catch (e) {=0A=
	}=0A=
=0A=
	if (!version)=0A=
	{=0A=
		try {=0A=
			// version will be set for 6.X players only=0A=
			axo =3D new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6");=0A=
			=0A=
			// installed player is some revision of 6.0=0A=
			// GetVariable("$version") crashes for versions 6.0.22 through 6.0.29,=0A=
			// so we have to be careful. =0A=
			=0A=
			// default to the first public version=0A=
			version =3D "WIN 6,0,21,0";=0A=
=0A=
			// throws if AllowScripAccess does not exist (introduced in 6.0r47)		=0A=
			axo.AllowScriptAccess =3D "always";=0A=
=0A=
			// safe to call for 6.0r47 or greater=0A=
			version =3D axo.GetVariable("$version");=0A=
=0A=
		} catch (e) {=0A=
		}=0A=
	}=0A=
=0A=
	if (!version)=0A=
	{=0A=
		try {=0A=
			// version will be set for 4.X or 5.X player=0A=
			axo =3D new ActiveXObject("ShockwaveFlash.ShockwaveFlash.3");=0A=
			version =3D axo.GetVariable("$version");=0A=
		} catch (e) {=0A=
		}=0A=
	}=0A=
=0A=
	if (!version)=0A=
	{=0A=
		try {=0A=
			// version will be set for 3.X player=0A=
			axo =3D new ActiveXObject("ShockwaveFlash.ShockwaveFlash.3");=0A=
			version =3D "WIN 3,0,18,0";=0A=
		} catch (e) {=0A=
		}=0A=
	}=0A=
=0A=
	if (!version)=0A=
	{=0A=
		try {=0A=
			// version will be set for 2.X player=0A=
			axo =3D new ActiveXObject("ShockwaveFlash.ShockwaveFlash");=0A=
			version =3D "WIN 2,0,0,11";=0A=
		} catch (e) {=0A=
			version =3D "No Flash";=0A=
		}=0A=
	}=0A=
	=0A=
	return version;=0A=
}=0A=
=0A=
// JavaScript helper required to detect Flash Player PlugIn version =
information=0A=
function GetSwfVer(){=0A=
	// NS/Opera version >=3D 3 check for Flash plugin in plugin array=0A=
	var flashVer =3D 'No Flash';=0A=
	=0A=
	if (navigator.plugins !=3D null && navigator.plugins.length > 0) {=0A=
		if (navigator.plugins["Shockwave Flash 2.0"] || =
navigator.plugins["Shockwave Flash"]) {=0A=
			var swVer2 =3D navigator.plugins["Shockwave Flash 2.0"] ? " 2.0" : "";=0A=
			var flashDescription =3D navigator.plugins["Shockwave Flash" + =
swVer2].description;=0A=
			var descArray =3D flashDescription.split(" ");=0A=
			var tempArrayMajor =3D descArray[2].split(".");=0A=
			var versionMajor =3D tempArrayMajor[0];=0A=
			var versionMinor =3D tempArrayMajor[1];=0A=
			var versionRevision =3D descArray[3];=0A=
			if (versionRevision =3D=3D "") {=0A=
				versionRevision =3D descArray[4];=0A=
			}=0A=
			if (versionRevision[0] =3D=3D "d") {=0A=
				versionRevision =3D versionRevision.substring(1);=0A=
			} else if (versionRevision[0] =3D=3D "r") {=0A=
				versionRevision =3D versionRevision.substring(1);=0A=
				if (versionRevision.indexOf("d") > 0) {=0A=
					versionRevision =3D versionRevision.substring(0, =
versionRevision.indexOf("d"));=0A=
				}=0A=
			}=0A=
			var flashVer =3D versionMajor + "." + versionMinor + "." + =
versionRevision;=0A=
		}=0A=
	}=0A=
	=0A=
	else if ( isIE && isWin && !isOpera ) {=0A=
		flashVer =3D ControlVersion();=0A=
	}=0A=
	=0A=
	return flashVer;=0A=
}=0A=
=0A=
function FormatFlashVersion(reported) {=0A=
	=0A=
	var matched =3D reported.match(/^(?:win[\D0]*)?(\d)/i);=0A=
	if (matched && matched[1]) {=0A=
		reported =3D matched[1];=0A=
	}=0A=
	=0A=
	return reported;=0A=
}=0A=
=0A=
/* Plugin Config */=0A=
s.usePlugins=3Dtrue=0A=
function s_doPlugins(s) {=0A=
	/* Add calls to plugins here */=0A=
	=0A=
	/* Plugin Example: Genesis DFA 0.6 */=0A=
	s.partnerDFACheck("dfa_cookie","dfa","prop44");=0A=
	//Cookie stored as 'dfa_cookie'=0A=
	//Looks for 'dfa' in query string for mid visit click throughs=0A=
	=0A=
	// Processor Platform: 2007-06-08=0A=
	s.prop5=3Dnavigator.platform;=0A=
	=0A=
	// Redirect Referrer=0A=
	tempVar1=3Ds.getQueryParam('ref');=0A=
	if(tempVar1)s.referrer=3DtempVar1;=0A=
	=0A=
	// Redirect Alias=0A=
	tempVar2=3Ds.getQueryParam('alias');=0A=
	if(tempVar2)s.server=3DtempVar2;=0A=
	=0A=
	// External Campaigns=0A=
	if(!s.campaign){=0A=
		s.campaign=3Ds.getQueryParam('cid');=0A=
		s.campaign=3Ds.getValOnce(s.campaign,"s_campaign",0)=0A=
		=0A=
	// Email ClickMap=0A=
		s.setClickMapEmail('Email_PageName,Email_OID','Email_OT');=0A=
	}=0A=
	=0A=
	// Internal Campaigns - Session=0A=
	s.eVar7=3Ds.getQueryParam('aid');=0A=
	s.eVar7=3Ds.getValOnce(s.eVar7,'s_var_7',0)=0A=
	=0A=
	// Internal Campaigns - 30 Days=0A=
	s.eVar8=3Ds.getValOnce(s.eVar8,'s_var_8',30)=0A=
	=0A=
	// Campaign Pathing=0A=
	s.prop6=3Ds.getQueryParam('cp')+": "+s.pageName;=0A=
	=0A=
	// Campaign Channel=0A=
	s.prop11=3Ds.getQueryParam('sr');=0A=
	=0A=
	// Zip code=0A=
	s.prop15=3DgetZipCode();=0A=
	=0A=
	/* getNewRepeat 1.0 */=0A=
	s.prop16=3Ds.getNewRepeat();=0A=
	=0A=
	// Mac OS X Versions: 2007-06-08 : Start=0A=
	// Added Leopard: 2007-11-06=0A=
	// Updated Leopard Webkit lookup: 2007-12-20=0A=
	if (typeof(AC) =3D=3D "undefined") {AC =3D {};}=0A=
	=0A=
		AC.AosCheck =3D function() {=0A=
			if (typeof(s) !=3D "undefined") {=0A=
				=0A=
				if (navigator.userAgent.match(/windows/i)) {=0A=
					s.prop9 =3D "windows"=0A=
					return;=0A=
				}=0A=
				=0A=
				var mv =3D AC.getWebkitVersion().major;=0A=
				=0A=
				if (mv > 522) s.prop9 =3D "10.5.x";=0A=
				else if (mv > 400) s.prop9 =3D "10.4.x";=0A=
				else if (mv > 99) s.prop9 =3D "10.3.x";=0A=
				else if (mv > 80) s.prop9 =3D "10.2.x";=0A=
				else s.prop9 =3D "mac unknown or non-safari";=0A=
			}=0A=
		}=0A=
		=0A=
		AC.parseWebkitVersion =3D function(version) {=0A=
		 var bits =3D version.split(".");=0A=
		 var is_nightly =3D (version[version.length - 1] =3D=3D "+");=0A=
		 if (is_nightly) {=0A=
			var minor =3D "+";=0A=
		 } else {=0A=
			var minor =3D parseInt(bits[1]);=0A=
			// If minor is Not a Number (NaN) return an empty string=0A=
			if (isNaN(minor)) {=0A=
			 minor =3D "";=0A=
			}=0A=
		 }=0A=
		 return {major: parseInt(bits[0]), minor: minor, is_nightly: =
is_nightly};=0A=
		}=0A=
		=0A=
		AC.getWebkitVersion =3D function() {=0A=
		 var regex =3D new RegExp("\\(.*\\) AppleWebKit/(.*) \\((.*)");=0A=
		 var matches =3D regex.exec(navigator.userAgent);=0A=
		 if (matches) {=0A=
			var webkit_version =3D AC.parseWebkitVersion(matches[1]);=0A=
		 }=0A=
		 if (webkit_version)=0A=
				return {major: webkit_version['major'], minor: =
webkit_version['minor'], is_nightly: webkit_version['is_nightly']};=0A=
			else // can't resolve version, we're not webkit=0A=
				return {major: 0, minor: 'not webkit', is_nightly: 0};=0A=
		}=0A=
		AC.AosCheck();=0A=
	// Mac OS X Versions: 2007-06-08 : En=0A=
=0A=
=0A=
=0A=
=0A=
	/* Plugin Example: getQueryParam v2.0=0A=
	s.campaign=3Ds.getQueryParam('cid')=0A=
	*/=0A=
=0A=
	/* Plugin Example: getValOnce v0.2=0A=
	s.campaign=3Ds.getValOnce(s.campaign,"s_campaign",0)=0A=
	*/=0A=
	=0A=
	/* Plugin Example: =0A=
		s.setClickMapEmail('Email_PageName,Email_OID,Email_OT');=0A=
	*/=0A=
=0A=
	/* Plugin Example: getAndPersistValue 0.3 */=0A=
	/* param1 - variable to persist */=0A=
	/* param2 - cookie name */=0A=
	/* param1 - Number of days to expiration - 0 for session */=0A=
	/* returns value of persisted variable */=0A=
	/* s.prop1=3Ds.getAndPersistValue(s.campaign,'s_cp_pers',0); */=0A=
=0A=
	/* Plugin Example: getDaysSinceLastVisit 1.0 */=0A=
	/* s.prop1=3Ds.getDaysSinceLastVisit(); */=0A=
	=0A=
	/* Plugin Example: getTimeToComplete 0.4 */=0A=
	/* if(s.events.indexOf('event1')>-1)=0A=
	/* 	s.prop1=3D'start';=0A=
	/* if(s.events.indexOf('event2')>-1)=0A=
	/* 	s.prop1=3D'stop';=0A=
	/* s.prop1=3Ds.getTimeToComplete(s.prop1,'ttc',0); */=0A=
=0A=
	/* Plugin Example: getNewRepeat 1.0 */=0A=
	/* s.prop5=3Ds.getNewRepeat(); */=0A=
	=0A=
	/* Plugin Example: getVisitStart */=0A=
	/* param1 - cookie name */=0A=
	/* returns 1 on first page of visit, otherwise 0  */=0A=
	/* s.prop50=3Ds.getVisitStart("s_visit"); */=0A=
	=0A=
	/* Plugin Example: formAnalysis 2.0	*/=0A=
	/* s.setupFormAnalysis();		*/=0A=
=0A=
	/* Plugin Examples: getPreviousValue =0A=
	// get previous value for s.pageName variable, set to prop5 on every =
page	=0A=
	/*	s.prop5=3Ds.getPreviousValue(s.pageName,'gpv_p5','');=0A=
	// get previous value for s.prop1, set to prop6 only when event1 is in =
the events variable=0A=
	/*	s.prop6=3Ds.getPreviousValue(s.prop1,'gpv_p6','event1');=0A=
	// get previous value for s.prop1, set to prop6 when either event1 or =
event10 is in the events variable=0A=
	/*	s.prop7=3Ds.getPreviousValue(s.channel,'gpv_p4','event1,event10');*/=0A=
=0A=
}=0A=
s.doPlugins=3Ds_doPlugins=0A=
=0A=
/************************** PLUGINS SECTION *************************/=0A=
/*=0A=
* Plugin: getTimeParting 1.4 - Set timeparting values based on time zone =
(15 min)=0A=
*/=0A=
=0A=
s.getTimeParting=3Dnew Function("t","z","y",""=0A=
+"dc=3Dnew Date('1/1/2000');var f=3D15;var ne=3D8;if(dc.getDay()!=3D6||"=0A=
+"dc.getMonth()!=3D0){return'Data Not Available'}else{;z=3DparseInt(z);"=0A=
+"if(y=3D=3D'2009'){f=3D8;ne=3D1};gmar=3Dnew =
Date('3/1/'+y);dsts=3Df-gmar.getDay("=0A=
+");gnov=3Dnew Date('11/1/'+y);dste=3Dne-gnov.getDay();spr=3Dnew =
Date('3/'"=0A=
+"+dsts+'/'+y);fl=3Dnew Date('11/'+dste+'/'+y);cd=3Dnew Date();"=0A=
+"if(cd>spr&&cd<fl){z=3Dz+1}else{z=3Dz};utc=3Dcd.getTime()+(cd.getTimezon=
eO"=0A=
+"ffset()*60000);tz=3Dnew Date(utc + =
(3600000*z));thisy=3Dtz.getFullYear("=0A=
+");var days=3D['Sunday','Monday','Tuesday','Wednesday','Thursday','Fr"=0A=
+"iday','Saturday'];if(thisy!=3Dy){return'Data Not Available'}else{;thi"=0A=
+"sh=3Dtz.getHours();thismin=3Dtz.getMinutes();thisd=3Dtz.getDay();var =
dow=3D"=0A=
+"days[thisd];var ap=3D'AM';var dt=3D'Weekday';var =
mint=3D'00';if(thismin>1"=0A=
+"5&&thismin<30){mint=3D'15'}if(thismin>30&&thismin<45){mint=3D'30'}if(th=
"=0A=
+"ismin>45&&thismin<60){mint=3D'45'}"=0A=
+"if(thish>=3D12){ap=3D'PM';thish=3Dthish-12};if (thish=3D=3D0){th"=0A=
+"ish=3D12};if(thisd=3D=3D6||thisd=3D=3D0){dt=3D'Weekend'};var =
timestring=3Dthish+'"=0A=
+":'+mint+ap;var daystring=3Ddow;var =
endstring=3Ddt;if(t=3D=3D'h'){return tim"=0A=
+"estring}if(t=3D=3D'd'){return daystring};if(t=3D=3D'w'){return en"=0A=
+"dstring}}};"=0A=
);=0A=
/*=0A=
 * Plugin: getQueryParam 2.0 - return query string parameter(s)=0A=
 */=0A=
s.getQueryParam=3Dnew Function("p","d","u",""=0A=
+"var =
s=3Dthis,v=3D'',i,t;d=3Dd?d:'';u=3Du?u:(s.pageURL?s.pageURL:''+s.wd.loc"=0A=
+"ation);u=3Du=3D=3D'f'?''+s.gtfs().location:u;while(p){i=3Dp.indexOf(','=
);i=3D"=0A=
+"i<0?p.length:i;t=3Ds.p_gpv(p.substring(0,i),u);if(t)v+=3Dv?d+t:t;p=3Dp.=
su"=0A=
+"bstring(i=3D=3Dp.length?i:i+1)}return v");=0A=
s.p_gpv=3Dnew Function("k","u",""=0A=
+"var =
s=3Dthis,v=3D'',i=3Du.indexOf('?'),q;if(k&&i>-1){q=3Du.substring(i+1);v"=0A=
+"=3Ds.pt(q,'&','p_gvf',k)}return v");=0A=
s.p_gvf=3Dnew Function("t","k",""=0A=
+"if(t){var =
s=3Dthis,i=3Dt.indexOf('=3D'),p=3Di<0?t:t.substring(0,i),v=3Di<0?'T"=0A=
+"rue':t.substring(i+1);if(p.toLowerCase()=3D=3Dk.toLowerCase())return =
s."=0A=
+"epa(v)}return ''");=0A=
/*=0A=
 * Plugin: getValOnce 0.2 - get a value once per session or number of =
days=0A=
 */=0A=
s.getValOnce=3Dnew Function("v","c","e",""=0A=
+"var s=3Dthis,k=3Ds.c_r(c),a=3Dnew =
Date;e=3De?e:0;if(v){a.setTime(a.getTime("=0A=
+")+e*86400000);s.c_w(c,v,e?a:0);}return v=3D=3Dk?'':v");=0A=
/*=0A=
 * Plugin: setClickMapEmail v1.3 - sets ClickMap variables w/ q-string =
values=0A=
 */=0A=
s.setClickMapEmail=3Dnew Function("qp","ot",""=0A=
+"var =
s=3Dthis,v=3Ds.getQueryParam(qp,'~'),d,pn,oid,ot=3Ds.getQueryParam(ot)"=0A=
+",ot=3Dot?ot:'A',cv;d=3Dv.indexOf('~');if(!v)return =
'';if(d>-1){pn=3Dv.subs"=0A=
+"tring(0,d);oid=3Dv.substring(d+1);}cv=3D'&pid=3D'+s.ape(s.fl(pn,255))+'=
&pi"=0A=
+"dt=3D1&oid=3D'+s.ape(s.fl(oid,100))+'&oidt=3D1&ot=3D'+ot+'&oi=3D1';s.sq=
(cv);");=0A=
/*=0A=
 * Plugin: Form Analysis 2.0 (Success, Error, Abandonment)=0A=
 */=0A=
s.setupFormAnalysis=3Dnew Function(""=0A=
+"var s=3Dthis;if(!s.fa){s.fa=3Dnew Object;var =
f=3Ds.fa;f.ol=3Ds.wd.onload;s."=0A=
+"wd.onload=3Ds.faol;f.uc=3Ds.useCommerce;f.vu=3Ds.varUsed;f.vl=3Df.uc?s.=
even"=0A=
+"tList:'';f.tfl=3Ds.trackFormList;f.fl=3Ds.formList;f.va=3Dnew =
Array('',''"=0A=
+",'','')}");=0A=
s.sendFormEvent=3Dnew Function("t","pn","fn","en",""=0A=
+"var =
s=3Dthis,f=3Ds.fa;t=3Dt=3D=3D's'?t:'e';f.va[0]=3Dpn;f.va[1]=3Dfn;f.va[3]=3D=
t=3D=3D'"=0A=
+"s'?'Success':en;s.fasl(t);f.va[1]=3D'';f.va[3]=3D'';");=0A=
s.faol=3Dnew Function("e",""=0A=
+"var =
s=3Ds_c_il["+s._in+"],f=3Ds.fa,r=3Dtrue,fo,fn,i,en,t,tf;if(!e)e=3Ds.wd."=0A=
+"event;f.os=3Dnew =
Array;if(f.ol)r=3Df.ol(e);if(s.d.forms&&s.d.forms.leng"=0A=
+"th>0){for(i=3Ds.d.forms.length-1;i>=3D0;i--){fo=3Ds.d.forms[i];fn=3Dfo.=
name"=0A=
+";tf=3Df.tfl&&s.pt(f.fl,',','ee',fn)||!f.tfl&&!s.pt(f.fl,',','ee',fn);"=0A=
+"if(tf){f.os[fn]=3Dfo.onsubmit;fo.onsubmit=3Ds.faos;f.va[1]=3Dfn;f.va[3]=
=3D'"=0A=
+"No Data =
Entered';for(en=3D0;en<fo.elements.length;en++){el=3Dfo.element"=0A=
+"s[en];t=3Del.type;if(t&&t.toUpperCase){t=3Dt.toUpperCase();var =
md=3Del.on"=0A=
+"mousedown,kd=3Del.onkeydown,omd=3Dmd?md.toString():'',okd=3Dkd?kd.toStr=
in"=0A=
+"g():'';if(omd.indexOf('.fam(')<0&&okd.indexOf('.fam(')<0){el.s_famd"=0A=
+"=3Dmd;el.s_fakd=3Dkd;el.onmousedown=3Ds.fam;el.onkeydown=3Ds.fam}}}}}f.=
ul=3Ds"=0A=
+".wd.onunload;s.wd.onunload=3Ds.fasl;}return r;");=0A=
s.faos=3Dnew Function("e",""=0A=
+"var =
s=3Ds_c_il["+s._in+"],f=3Ds.fa,su;if(!e)e=3Ds.wd.event;if(f.vu){s[f.v"=0A=
+"u]=3D'';f.va[1]=3D'';f.va[3]=3D'';}su=3Df.os[this.name];return =
su?su(e):tru"=0A=
+"e;");=0A=
s.fasl=3Dnew Function("e",""=0A=
+"var =
s=3Ds_c_il["+s._in+"],f=3Ds.fa,a=3Df.va,l=3Ds.wd.location,ip=3Ds.trackPag=
"=0A=
+"eName,p=3Ds.pageName;if(a[1]!=3D''&&a[3]!=3D''){a[0]=3D!p&&ip?l.host+l.=
path"=0A=
+"name:a[0]?a[0]:p;if(!f.uc&&a[3]!=3D'No Data =
Entered'){if(e=3D=3D'e')a[2]=3D"=0A=
+"'Error';else if(e=3D=3D's')a[2]=3D'Success';else a[2]=3D'Abandon'}else =
a[2]"=0A=
+"=3D'';var =
tp=3Dip?a[0]+':':'',t3=3De!=3D's'?':('+a[3]+')':'',ym=3D!f.uc&&a[3]"=0A=
+"!=3D'No Data =
Entered'?tp+a[1]+':'+a[2]+t3:tp+a[1]+t3,ltv=3Ds.linkTrackV"=0A=
+"ars,lte=3Ds.linkTrackEvents,up=3Ds.usePlugins;if(f.uc){s.linkTrackVars=3D=
"=0A=
+"ltv=3D=3D'None'?f.vu+',events':ltv+',events,'+f.vu;s.linkTrackEvents=3D=
lt"=0A=
+"e=3D=3D'None'?f.vl:lte+','+f.vl;f.cnt=3D-1;if(e=3D=3D'e')s.events=3Ds.p=
t(f.vl,'"=0A=
+",','fage',2);else =
if(e=3D=3D's')s.events=3Ds.pt(f.vl,',','fage',1);else s"=0A=
+".events=3Ds.pt(f.vl,',','fage',0)}else{s.linkTrackVars=3Dltv=3D=3D'None=
'?f."=0A=
+"vu:ltv+','+f.vu}s[f.vu]=3Dym;s.usePlugins=3Dfalse;s.tl(true,'o','Form =
A"=0A=
+"nalysis');s[f.vu]=3D'';s.usePlugins=3Dup}return =
f.ul&&e!=3D'e'&&e!=3D's'?f."=0A=
+"ul(e):true;");=0A=
s.fam=3Dnew Function("e",""=0A=
+"var s=3Ds_c_il["+s._in+"],f=3Ds.fa;if(!e) e=3Ds.wd.event;var =
o=3Ds.trackLas"=0A=
+"tChanged,et=3De.type.toUpperCase(),t=3Dthis.type.toUpperCase(),fn=3Dthi=
s."=0A=
+"form.name,en=3Dthis.name,sc=3Dfalse;if(document.layers){kp=3De.which;b=3D=
e."=0A=
+"which}else{kp=3De.keyCode;b=3De.button}et=3Det=3D=3D'MOUSEDOWN'?1:et=3D=
=3D'KEYDOW"=0A=
+"N'?2:et;if(f.ce!=3Den||f.cf!=3Dfn){if(et=3D=3D1&&b!=3D2&&'BUTTONSUBMITR=
ESETIM"=0A=
+"AGERADIOCHECKBOXSELECT-ONEFILE'.indexOf(t)>-1){f.va[1]=3Dfn;f.va[3]=3De=
"=0A=
+"n;sc=3Dtrue}else =
if(et=3D=3D1&&b=3D=3D2&&'TEXTAREAPASSWORDFILE'.indexOf(t)>-1"=0A=
+"){f.va[1]=3Dfn;f.va[3]=3Den;sc=3Dtrue}else =
if(et=3D=3D2&&kp!=3D9&&kp!=3D13){f.va["=0A=
+"1]=3Dfn;f.va[3]=3Den;sc=3Dtrue}if(sc){nface=3Den;nfacf=3Dfn}}if(et=3D=3D=
1&&this.s"=0A=
+"_famd)return this.s_famd(e);if(et=3D=3D2&&this.s_fakd)return =
this.s_fak"=0A=
+"d(e);");=0A=
s.ee=3Dnew Function("e","n",""=0A=
+"return n&&n.toLowerCase?e.toLowerCase()=3D=3Dn.toLowerCase():false;");=0A=
s.fage=3Dnew Function("e","a",""=0A=
+"var s=3Dthis,f=3Ds.fa,x=3Df.cnt;x=3Dx?x+1:1;f.cnt=3Dx;return =
x=3D=3Da?e:'';");=0A=
/*=0A=
 * Plugin: getAndPersistValue 0.3 - get a value on every page=0A=
 */=0A=
s.getAndPersistValue=3Dnew Function("v","c","e",""=0A=
+"var s=3Dthis,a=3Dnew =
Date;e=3De?e:0;a.setTime(a.getTime()+e*86400000);if("=0A=
+"v)s.c_w(c,v,e?a:0);return s.c_r(c);");=0A=
/*=0A=
 * Plugin: Days since last Visit 1.0.H - capture time from last visit=0A=
 */=0A=
s.getDaysSinceLastVisit=3Dnew Function(""=0A=
+"var s=3Dthis,e=3Dnew =
Date(),cval,ct=3De.getTime(),c=3D's_lastvisit',day=3D24*"=0A=
+"60*60*1000;e.setTime(ct+3*365*day);cval=3Ds.c_r(c);if(!cval){s.c_w(c,"=0A=
+"ct,e);return 'First page view or cookies not supported';}else{var d"=0A=
+"=3Dct-cval;if(d>30*60*1000){if(d>30*day){s.c_w(c,ct,e);return 'More t"=0A=
+"han 30 days';}if(d<30*day+1 && d>7*day){s.c_w(c,ct,e);return 'More "=0A=
+"than 7 days';}if(d<7*day+1 && d>day){s.c_w(c,ct,e);return 'Less tha"=0A=
+"n 7 days';}if(d<day+1){s.c_w(c,ct,e);return 'Less than 1 day';}}els"=0A=
+"e return '';}");=0A=
/*=0A=
 * Plugin: getTimeToComplete 0.4 - return the time from start to stop=0A=
 */=0A=
s.getTimeToComplete=3Dnew Function("v","cn","e",""=0A=
+"var s=3Dthis,d=3Dnew =
Date,x=3Dd,k;if(!s.ttcr){e=3De?e:0;if(v=3D=3D'start'||v=3D=3D'"=0A=
+"stop')s.ttcr=3D1;x.setTime(x.getTime()+e*86400000);if(v=3D=3D'start'){s=
.c"=0A=
+"_w(cn,d.getTime(),e?x:0);return =
'';}if(v=3D=3D'stop'){k=3Ds.c_r(cn);if(!s"=0A=
+".c_w(cn,'',d)||!k)return '';v=3D(d.getTime()-k)/1000;var =
td=3D86400,th=3D"=0A=
+"3600,tm=3D60,r=3D5,u,un;if(v>td){u=3Dtd;un=3D'days';}else =
if(v>th){u=3Dth;un=3D"=0A=
+"'hours';}else =
if(v>tm){r=3D2;u=3Dtm;un=3D'minutes';}else{r=3D.2;u=3D1;un=3D'sec"=0A=
+"onds';}v=3Dv*r/u;return (Math.round(v)/r)+' '+un;}}return '';");=0A=
/*=0A=
 * Plugin: getNewRepeat 1.0 - Return whether user is new or repeat=0A=
 */=0A=
s.getNewRepeat=3Dnew Function(""=0A=
+"var s=3Dthis,e=3Dnew =
Date(),cval,ct=3De.getTime(),y=3De.getYear();e.setTime"=0A=
+"(ct+30*24*60*60*1000);cval=3Ds.c_r('s_nr');if(cval.length=3D=3D0){s.c_w=
("=0A=
+"'s_nr',ct,e);return 'New';}if(cval.length!=3D0&&ct-cval<30*60*1000){s"=0A=
+".c_w('s_nr',ct,e);return 'New';}if(cval<1123916400001){e.setTime(cv"=0A=
+"al+30*24*60*60*1000);s.c_w('s_nr',ct,e);return 'Repeat';}else retur"=0A=
+"n 'Repeat';");=0A=
/*=0A=
 * Plugin: getVisitStart v2.0=0A=
 */=0A=
s.getVisitStart=3Dnew Function("c",""=0A=
+"var s=3Dthis,v=3D1,t=3Dnew =
Date;t.setTime(t.getTime()+1800000);if(s.c_r(c"=0A=
+")){v=3D0}if(!s.c_w(c,1,t)){s.c_w(c,1,0)}if(!s.c_r(c)){v=3D0}return =
v;"); =0A=
/*=0A=
 * Plugin: getPreviousValue_v1.0 - return previous value of designated=0A=
 *   variable (requires split utility)=0A=
 */=0A=
s.getPreviousValue=3Dnew Function("v","c","el",""=0A=
+"var s=3Dthis,t=3Dnew =
Date,i,j,r=3D'';t.setTime(t.getTime()+1800000);if(el"=0A=
+"){if(s.events){i=3Ds.split(el,',');j=3Ds.split(s.events,',');for(x in =
i"=0A=
+"){for(y in j){if(i[x]=3D=3Dj[y]){if(s.c_r(c)) =
r=3Ds.c_r(c);v?s.c_w(c,v,t)"=0A=
+":s.c_w(c,'no value',t);return r}}}}}else{if(s.c_r(c)) r=3Ds.c_r(c);v?"=0A=
+"s.c_w(c,v,t):s.c_w(c,'no value',t);return r}");=0A=
/*=0A=
 * Utility Function: split v1.5 - split a string (JS 1.0 compatible)=0A=
 */=0A=
s.split=3Dnew Function("l","d",""=0A=
+"var i,x=3D0,a=3Dnew =
Array;while(l){i=3Dl.indexOf(d);i=3Di>-1?i:l.length;a[x"=0A=
+"++]=3Dl.substring(0,i);l=3Dl.substring(i+d.length);}return a");=0A=
/*=0A=
 * Partner Plugin: DFA Check 0.6 - Restrict DFA calls to once a visit, =0A=
 * per report suite, per click through. Used in conjunction with VISTA=0A=
 */=0A=
s.partnerDFACheck=3Dnew Function("c","src","p",""=0A=
+"var s=3Dthis,dl=3D',',cr,nc,q,g,i,j,k,fnd,v=3D1,t=3Dnew =
Date,cn=3D0,ca=3Dnew Ar"=0A=
+"ray,aa=3Dnew Array,cs=3Dnew =
Array;t.setTime(t.getTime()+1800000);cr=3Ds.c"=0A=
+"_r(c);if(cr){v=3D0}ca=3Ds.split(cr,dl);aa=3Ds.split(s.un,dl);for(i=3D0;=
i<aa"=0A=
+".length;i++){fnd=3D0;for(j=3D0;j<ca.length;j++){if(aa[i]=3D=3Dca[j]){fn=
d=3D1}"=0A=
+"}if(!fnd){cs[cn]=3Daa[i];cn++}}if(cs.length){for(k=3D0;k<cs.length;k++)=
"=0A=
+"{nc=3D(nc?nc+dl:'')+cs[k]}cr=3D(cr?cr+dl:'')+nc;s.vpr(p,nc);v=3D1}q=3Ds=
.wd."=0A=
+"location.search.toLowerCase();g=3Dq.indexOf(src+'=3D');if(g>0){s.vpr(p,=
"=0A=
+"cr);v=3D1}if(!s.c_w(c,cr,t)){s.c_w(c,cr,0)}if(!s.c_r(c)){v=3D0}if(v<1)s=
"=0A=
+".vpr('variableProvider','')");=0A=
/*=0A=
 * Utility Function: vpr - set the variable vs with value v=0A=
 */=0A=
s.vpr=3Dnew Function("vs","v",=0A=
"if(typeof(v)!=3D'undefined'){var s=3Dthis; =
eval('s.'+vs+'=3D\"'+v+'\"')}");=0A=
=0A=
/************* DO NOT ALTER ANYTHING BELOW THIS LINE ! **************/=0A=
var s_objectID;function s_c2fe(f){var x=3D'',s=3D0,e,a,b,c;while(1){e=3D=0A=
f.indexOf('"',s);b=3Df.indexOf('\\',s);c=3Df.indexOf("\n",s);if(e<0||(b>=3D=0A=
0&&b<e))e=3Db;if(e<0||(c>=3D0&&c<e))e=3Dc;if(e>=3D0){x+=3D(e>s?f.substrin=
g(s,e):=0A=
'')+(e=3D=3Dc?'\\n':'\\'+f.substring(e,e+1));s=3De+1}else return x=0A=
+f.substring(s)}return f}function s_c2fa(f){var s=3Df.indexOf('(')+1,e=3D=0A=
f.indexOf(')'),a=3D'',c;while(s>=3D0&&s<e){c=3Df.substring(s,s+1);if(c=3D=
=3D',')=0A=
a+=3D'","';else if(("\n\r\t ").indexOf(c)<0)a+=3Dc;s++}return =
a?'"'+a+'"':=0A=
a}function s_c2f(cc){cc=3D''+cc;var fc=3D'var f=3Dnew Function(',s=3D=0A=
cc.indexOf(';',cc.indexOf('{')),e=3Dcc.lastIndexOf('}'),o,a,d,q,c,f,h,x=0A=
fc+=3Ds_c2fa(cc)+',"var s=3Dnew Object;';c=3Dcc.substring(s+1,e);s=3D=0A=
c.indexOf('function');while(s>=3D0){d=3D1;q=3D'';x=3D0;f=3Dc.substring(s)=
;a=3D=0A=
s_c2fa(f);e=3Do=3Dc.indexOf('{',s);e++;while(d>0){h=3Dc.substring(e,e+1);=
if(=0A=
q){if(h=3D=3Dq&&!x)q=3D'';if(h=3D=3D'\\')x=3Dx?0:1;else =
x=3D0}else{if(h=3D=3D'"'||h=3D=3D"'"=0A=
)q=3Dh;if(h=3D=3D'{')d++;if(h=3D=3D'}')d--}if(d>0)e++}c=3Dc.substring(0,s=
)=0A=
+'new Function('+(a?a+',':'')+'"'+s_c2fe(c.substring(o+1,e))+'")'=0A=
+c.substring(e+1);s=3Dc.indexOf('function')}fc+=3Ds_c2fe(c)+';return =
s");'=0A=
eval(fc);return f}function s_gi(un,pg,ss){var c=3D"function s_c(un,pg,s"=0A=
+"s){var s=3Dthis;s.wd=3Dwindow;if(!s.wd.s_c_in){s.wd.s_c_il=3Dnew =
Array;s."=0A=
+"wd.s_c_in=3D0;}s._il=3Ds.wd.s_c_il;s._in=3Ds.wd.s_c_in;s._il[s._in]=3Ds=
;s.w"=0A=
+"d.s_c_in++;s.m=3Dfunction(m){return =
(''+m).indexOf('{')<0};s.fl=3Dfunct"=0A=
+"ion(x,l){return x?(''+x).substring(0,l):x};s.co=3Dfunction(o){if(!o)r"=0A=
+"eturn o;var n=3Dnew Object,x;for(x in o)if(x.indexOf('select')<0&&x.i"=0A=
+"ndexOf('filter')<0)n[x]=3Do[x];return =
n};s.num=3Dfunction(x){x=3D''+x;for"=0A=
+"(var p=3D0;p<x.length;p++)if(('0123456789').indexOf(x.substring(p,p+1"=0A=
+"))<0)return 0;return 1};s.rep=3Dfunction(x,o,n){var =
i=3Dx.indexOf(o),l=3D"=0A=
+"n.length>0?n.length:1;while(x&&i>=3D0){x=3Dx.substring(0,i)+n+x.substri=
"=0A=
+"ng(i+o.length);i=3Dx.indexOf(o,i+l)}return x};s.ape=3Dfunction(x){var =
s"=0A=
+"=3Dthis,i;x=3Dx?s.rep(escape(''+x),'+','%2B'):x;if(x&&s.charSet&&s.em=3D=
=3D"=0A=
+"1&&x.indexOf('%u')<0&&x.indexOf('%U')<0){i=3Dx.indexOf('%');while(i>=3D=
"=0A=
+"0){i++;if(('89ABCDEFabcdef').indexOf(x.substring(i,i+1))>=3D0)return "=0A=
+"x.substring(0,i)+'u00'+x.substring(i);i=3Dx.indexOf('%',i)}}return x}"=0A=
+";s.epa=3Dfunction(x){var s=3Dthis;return x?unescape(s.rep(''+x,'+',' =
')"=0A=
+"):x};s.pt=3Dfunction(x,d,f,a){var =
s=3Dthis,t=3Dx,z=3D0,y,r;while(t){y=3Dt.ind"=0A=
+"exOf(d);y=3Dy<0?t.length:y;t=3Dt.substring(0,y);r=3Ds.m(f)?s[f](t,a):f(=
t,"=0A=
+"a);if(r)return =
r;z+=3Dy+d.length;t=3Dx.substring(z,x.length);t=3Dz<x.leng"=0A=
+"th?t:''}return ''};s.isf=3Dfunction(t,a){var =
c=3Da.indexOf(':');if(c>=3D0"=0A=
+")a=3Da.substring(0,c);if(t.substring(0,2)=3D=3D's_')t=3Dt.substring(2);=
retu"=0A=
+"rn (t!=3D''&&t=3D=3Da)};s.fsf=3Dfunction(t,a){var =
s=3Dthis;if(s.pt(a,',','isf"=0A=
+"',t))s.fsg+=3D(s.fsg!=3D''?',':'')+t;return =
0};s.fs=3Dfunction(x,f){var s"=0A=
+"=3Dthis;s.fsg=3D'';s.pt(x,',','fsf',f);return =
s.fsg};s.c_d=3D'';s.c_gdf=3Df"=0A=
+"unction(t,a){var s=3Dthis;if(!s.num(t))return 1;return =
0};s.c_gd=3Dfunc"=0A=
+"tion(){var =
s=3Dthis,d=3Ds.wd.location.hostname,n=3Ds.fpCookieDomainPeriod"=0A=
+"s,p;if(!n)n=3Ds.cookieDomainPeriods;if(d&&!s.c_d){n=3Dn?parseInt(n):2;n=
"=0A=
+"=3Dn>2?n:2;p=3Dd.lastIndexOf('.');if(p>=3D0){while(p>=3D0&&n>1){p=3Dd.l=
astInd"=0A=
+"exOf('.',p-1);n--}s.c_d=3Dp>0&&s.pt(d,'.','c_gdf',0)?d.substring(p):d"=0A=
+"}}return s.c_d};s.c_r=3Dfunction(k){var s=3Dthis;k=3Ds.ape(k);var =
c=3D' '+s"=0A=
+".d.cookie,i=3Dc.indexOf(' =
'+k+'=3D'),e=3Di<0?i:c.indexOf(';',i),v=3Di<0?'':"=0A=
+"s.epa(c.substring(i+2+k.length,e<0?c.length:e));return v!=3D'[[B]]'?v"=0A=
+":''};s.c_w=3Dfunction(k,v,e){var =
s=3Dthis,d=3Ds.c_gd(),l=3Ds.cookieLifetime"=0A=
+",t;v=3D''+v;l=3Dl?(''+l).toUpperCase():'';if(e&&l!=3D'SESSION'&&l!=3D'N=
ONE'"=0A=
+"){t=3D(v!=3D''?parseInt(l?l:0):-60);if(t){e=3Dnew =
Date;e.setTime(e.getTim"=0A=
+"e()+(t*1000))}}if(k&&l!=3D'NONE'){s.d.cookie=3Dk+'=3D'+s.ape(v!=3D''?v:=
'[[B"=0A=
+"]]')+'; path=3D/;'+(e&&l!=3D'SESSION'?' =
expires=3D'+e.toGMTString()+';':'"=0A=
+"')+(d?' domain=3D'+d+';':'');return s.c_r(k)=3D=3Dv}return =
0};s.eh=3Dfuncti"=0A=
+"on(o,e,r,f){var =
s=3Dthis,b=3D's_'+e+'_'+s._in,n=3D-1,l,i,x;if(!s.ehl)s.eh"=0A=
+"l=3Dnew =
Array;l=3Ds.ehl;for(i=3D0;i<l.length&&n<0;i++){if(l[i].o=3D=3Do&&l[i]"=0A=
+".e=3D=3De)n=3Di}if(n<0){n=3Di;l[n]=3Dnew =
Object}x=3Dl[n];x.o=3Do;x.e=3De;f=3Dr?x.b:f;"=0A=
+"if(r||f){x.b=3Dr?0:o[e];x.o[e]=3Df}if(x.b){x.o[b]=3Dx.b;return =
b}return 0"=0A=
+"};s.cet=3Dfunction(f,a,t,o,b){var =
s=3Dthis,r;if(s.apv>=3D5&&(!s.isopera||"=0A=
+"s.apv>=3D7))eval('try{r=3Ds.m(f)?s[f](a):f(a)}catch(e){r=3Ds.m(t)?s[t](=
e)"=0A=
+":t(e)}');else{if(s.ismac&&s.u.indexOf('MSIE =
4')>=3D0)r=3Ds.m(b)?s[b](a)"=0A=
+":b(a);else{s.eh(s.wd,'onerror',0,o);r=3Ds.m(f)?s[f](a):f(a);s.eh(s.wd"=0A=
+",'onerror',1)}}return r};s.gtfset=3Dfunction(e){var s=3Dthis;return =
s.t"=0A=
+"fs};s.gtfsoe=3Dnew Function('e','var =
s=3Ds_c_il['+s._in+'];s.eh(window,"=0A=
+"\"onerror\",1);s.etfs=3D1;var =
c=3Ds.t();if(c)s.d.write(c);s.etfs=3D0;retu"=0A=
+"rn true');s.gtfsfb=3Dfunction(a){return =
window};s.gtfsf=3Dfunction(w){v"=0A=
+"ar =
s=3Dthis,p=3Dw.parent,l=3Dw.location;s.tfs=3Dw;if(p&&p.location!=3Dl&&p.l=
o"=0A=
+"cation.host=3D=3Dl.host){s.tfs=3Dp;return s.gtfsf(s.tfs)}return =
s.tfs};s."=0A=
+"gtfs=3Dfunction(){var =
s=3Dthis;if(!s.tfs){s.tfs=3Ds.wd;if(!s.etfs)s.tfs=3Ds"=0A=
+".cet('gtfsf',s.tfs,'gtfset',s.gtfsoe,'gtfsfb')}return s.tfs};s.ca=3Df"=0A=
+"unction(){var =
s=3Dthis,imn=3D's_i_'+s.fun;if(s.d.images&&s.apv>=3D3&&(!s."=0A=
+"isopera||s.apv>=3D7)&&(s.ns6<0||s.apv>=3D6.1)){s.ios=3D1;if(!s.d.images=
[i"=0A=
+"mn]&&(!s.isns||(s.apv<4||s.apv>=3D5))){s.d.write('<im'+'g =
name=3D\"'+im"=0A=
+"n+'\" height=3D1 width=3D1 border=3D0 =
alt=3D\"\">');if(!s.d.images[imn])s.i"=0A=
+"os=3D0}}};s.mr=3Dfunction(sess,q,ta){var =
s=3Dthis,ns=3Ds.visitorNamespace,u"=0A=
+"nc=3Ds.rep(s.fun,'_','-'),imn=3D's_i_'+s.fun,im,b,e,rs=3D'http'+(s.ssl?=
's"=0A=
+"':'')+'://'+(s.ssl?'securemetrics':'metrics')+'.apple.com/b/ss/'+s.un+'=
/1"=0A=
+"/H.8-pdvu-2/'+sess+'?[AQB]&ndh=3D1'+(q?q:'')+(s.q?s.q:'')+'&[AQE]';if"=0A=
+"(s.isie&&!s.ismac){if(s.apv>5.5)rs=3Ds.fl(rs,4095);else =
rs=3Ds.fl(rs,20"=0A=
+"47)}if(s.ios||s.ss){if (!s.ss)s.ca();im=3Ds.wd[imn]?s.wd[imn]:s.d.ima"=0A=
+"ges[imn];if(!im)im=3Ds.wd[imn]=3Dnew =
Image;im.src=3Drs;if(rs.indexOf('&pe"=0A=
+"=3D')>=3D0&&(!ta||ta=3D=3D'_self'||ta=3D=3D'_top'||(s.wd.name&&ta=3D=3D=
s.wd.name)))"=0A=
+"{b=3De=3Dnew Date;while(e.getTime()-b.getTime()<500)e=3Dnew =
Date}return '"=0A=
+"'}return '<im'+'g sr'+'c=3D\"'+rs+'\" width=3D1 height=3D1 border=3D0 =
alt=3D"=0A=
+"\"\">'};s.gg=3Dfunction(v){var s=3Dthis;return =
s.wd['s_'+v]};s.glf=3Dfunc"=0A=
+"tion(t,a){if(t.substring(0,2)=3D=3D's_')t=3Dt.substring(2);var =
s=3Dthis,v=3Ds"=0A=
+".gg(t);if(v)s[t]=3Dv};s.gl=3Dfunction(v){var =
s=3Dthis;s.pt(v,',','glf',0)"=0A=
+"};s.gv=3Dfunction(v){var s=3Dthis;return =
s['vpm_'+v]?s['vpv_'+v]:(s[v]?"=0A=
+"s[v]:'')};s.havf=3Dfunction(t,a){var =
s=3Dthis,b=3Dt.substring(0,4),x=3Dt.su"=0A=
+"bstring(4),n=3DparseInt(x),k=3D'g_'+t,m=3D'vpm_'+t,q=3Dt,v=3Ds.linkTrac=
kVars,"=0A=
+"e=3Ds.linkTrackEvents;s[k]=3Ds.gv(t);if(s.lnk||s.eo){v=3Dv?v+','+s.vl_l=
:'"=0A=
+"';if(v&&!s.pt(v,',','isf',t))s[k]=3D'';if(t=3D=3D'events'&&e)s[k]=3Ds.f=
s(s["=0A=
+"k],e)}s[m]=3D0;if(t=3D=3D'pageURL')q=3D'g';else =
if(t=3D=3D'referrer')q=3D'r';else"=0A=
+" if(t=3D=3D'vmk')q=3D'vmt';else =
if(t=3D=3D'charSet'){q=3D'ce';if(s[k]&&s.em=3D=3D2)"=0A=
+"s[k]=3D'UTF-8'}else if(t=3D=3D'visitorNamespace')q=3D'ns';else =
if(t=3D=3D'cooki"=0A=
+"eDomainPeriods')q=3D'cdp';else =
if(t=3D=3D'cookieLifetime')q=3D'cl';else if("=0A=
+"t=3D=3D'variableProvider')q=3D'vvp';else =
if(t=3D=3D'currencyCode')q=3D'cc';else"=0A=
+" if(t=3D=3D'channel')q=3D'ch';else if(t=3D=3D'campaign')q=3D'v0';else =
if(s.num("=0A=
+"x)) {if(b=3D=3D'prop')q=3D'c'+n;else if(b=3D=3D'eVar')q=3D'v'+n;else =
if(b=3D=3D'hie"=0A=
+"r'){q=3D'h'+n;s[k]=3Ds.fl(s[k],255)}}if(s[k]&&t!=3D'linkName'&&t!=3D'li=
nkTy"=0A=
+"pe')s.qav+=3D'&'+q+'=3D'+s.ape(s[k]);return ''};s.hav=3Dfunction(){var =
s=3D"=0A=
+"this;s.qav=3D'';s.pt(s.vl_t,',','havf',0);return =
s.qav};s.lnf=3Dfunctio"=0A=
+"n(t,h){t=3Dt?t.toLowerCase():'';h=3Dh?h.toLowerCase():'';var =
te=3Dt.index"=0A=
+"Of('=3D');if(t&&te>0&&h.indexOf(t.substring(te+1))>=3D0)return =
t.substr"=0A=
+"ing(0,te);return ''};s.ln=3Dfunction(h){var =
s=3Dthis,n=3Ds.linkNames;if(n"=0A=
+")return s.pt(n,',','lnf',h);return =
''};s.ltdf=3Dfunction(t,h){t=3Dt?t.t"=0A=
+"oLowerCase():'';h=3Dh?h.toLowerCase():'';var =
qi=3Dh.indexOf('?');h=3Dqi>=3D"=0A=
+"0?h.substring(0,qi):h;if(t&&h.substring(h.length-(t.length+1))=3D=3D'.'=
"=0A=
+"+t)return 1;return =
0};s.ltef=3Dfunction(t,h){t=3Dt?t.toLowerCase():'';h"=0A=
+"=3Dh?h.toLowerCase():'';if(t&&h.indexOf(t)>=3D0)return 1;return =
0};s.lt"=0A=
+"=3Dfunction(h){var =
s=3Dthis,lft=3Ds.linkDownloadFileTypes,lef=3Ds.linkExter"=0A=
+"nalFilters,lif=3Ds.linkInternalFilters;lif=3Dlif?lif:s.wd.location.host=
"=0A=
+"name;h=3Dh.toLowerCase();if(s.trackDownloadLinks&&lft&&s.pt(lft,',','"=0A=
+"ltdf',h))return 'd';if(s.trackExternalLinks&&(lef||lif)&&(!lef||s.p"=0A=
+"t(lef,',','ltef',h))&&(!lif||!s.pt(lif,',','ltef',h)))return 'e';re"=0A=
+"turn ''};s.lc=3Dnew Function('e','var =
s=3Ds_c_il['+s._in+'],b=3Ds.eh(this"=0A=
+",\"onclick\");s.lnk=3Ds.co(this);s.t();s.lnk=3D0;if(b)return =
this[b](e)"=0A=
+";return true');s.bc=3Dnew Function('e','var =
s=3Ds_c_il['+s._in+'],f;if("=0A=
+"s.d&&s.d.all&&s.d.all.cppXYctnr)return;s.eo=3De.srcElement?e.srcEleme"=0A=
+"nt:e.target;eval(\"try{if(s.eo&&(s.eo.tagName||s.eo.parentElement||"=0A=
+"s.eo.parentNode))s.t()}catch(f){}\");s.eo=3D0');s.ot=3Dfunction(o){var =
"=0A=
+"a=3Do.type,b=3Do.tagName;return =
(a&&a.toUpperCase?a:b&&b.toUpperCase?b:"=0A=
+"o.href?'A':'').toUpperCase()};s.oid=3Dfunction(o){var =
s=3Dthis,t=3Ds.ot(o"=0A=
+"),p=3Do.protocol,c=3Do.onclick,n=3D'',x=3D0;if(!o.s_oid){if(o.href&&(t=3D=
=3D'A'"=0A=
+"||t=3D=3D'AREA')&&(!c||!p||p.toLowerCase().indexOf('javascript')<0))n=3D=
o"=0A=
+".href;else if(c){n=3Ds.rep(s.rep(s.rep(s.rep(''+c,\"\\r\",''),\"\\n\""=0A=
+",''),\"\\t\",''),' ','');x=3D2}else =
if(o.value&&(t=3D=3D'INPUT'||t=3D=3D'SUBM"=0A=
+"IT')){n=3Do.value;x=3D3}else =
if(o.src&&t=3D=3D'IMAGE')n=3Do.src;if(n){o.s_oid"=0A=
+"=3Ds.fl(n,100);o.s_oidt=3Dx}}return =
o.s_oid};s.rqf=3Dfunction(t,un){var s"=0A=
+"=3Dthis,e=3Dt.indexOf('=3D'),u=3De>=3D0?','+t.substring(0,e)+',':'';ret=
urn u&"=0A=
+"&u.indexOf(','+un+',')>=3D0?s.epa(t.substring(e+1)):''};s.rq=3Dfunction=
"=0A=
+"(un){var =
s=3Dthis,c=3Dun.indexOf(','),v=3Ds.c_r('s_sq'),q=3D'';if(c<0)retur"=0A=
+"n s.pt(v,'&','rqf',un);return s.pt(un,',','rq',0)};s.sqp=3Dfunction(t"=0A=
+",a){var =
s=3Dthis,e=3Dt.indexOf('=3D'),q=3De<0?'':s.epa(t.substring(e+1));s."=0A=
+"sqq[q]=3D'';if(e>=3D0)s.pt(t.substring(0,e),',','sqs',q);return =
0};s.sq"=0A=
+"s=3Dfunction(un,q){var s=3Dthis;s.squ[un]=3Dq;return =
0};s.sq=3Dfunction(q){"=0A=
+"var s=3Dthis,k=3D's_sq',v=3Ds.c_r(k),x,c=3D0;s.sqq=3Dnew =
Object;s.squ=3Dnew Obj"=0A=
+"ect;s.sqq[q]=3D'';s.pt(v,'&','sqp',0);s.pt(s.un,',','sqs',q);v=3D'';for=
"=0A=
+"(x in s.squ)s.sqq[s.squ[x]]+=3D(s.sqq[s.squ[x]]?',':'')+x;for(x in s."=0A=
+"sqq)if(x&&s.sqq[x]&&(x=3D=3Dq||c<2)){v+=3D(v?'&':'')+s.sqq[x]+'=3D'+s.a=
pe(x"=0A=
+");c++}return s.c_w(k,v,0)};s.wdl=3Dnew Function('e','var =
s=3Ds_c_il['+s"=0A=
+"._in+'],r=3Dtrue,b=3Ds.eh(s.wd,\"onload\"),i,o,oc;if(b)r=3Dthis[b](e);f=
or"=0A=
+"(i=3D0;i<s.d.links.length;i++){o=3Ds.d.links[i];oc=3Do.onclick?\"\"+o.o=
nc"=0A=
+"lick:\"\";if((oc.indexOf(\"s_gs(\")<0||oc.indexOf(\".s_oc(\")>=3D0)&&"=0A=
+"oc.indexOf(\".tl(\")<0)s.eh(o,\"onclick\",0,s.lc);}return r');s.wds"=0A=
+"=3Dfunction(){var =
s=3Dthis;if(s.apv>3&&(!s.isie||!s.ismac||s.apv>=3D5)){i"=0A=
+"f(s.b&&s.b.attachEvent)s.b.attachEvent('onclick',s.bc);else if(s.b&"=0A=
+"&s.b.addEventListener)s.b.addEventListener('click',s.bc,false);else"=0A=
+" s.eh(s.wd,'onload',0,s.wdl)}};s.vs=3Dfunction(x){var =
s=3Dthis,v=3Ds.visi"=0A=
+"torSampling,g=3Ds.visitorSamplingGroup,k=3D's_vsn_'+s.un+(g?'_'+g:''),n=
"=0A=
+"=3Ds.c_r(k),e=3Dnew =
Date,y=3De.getYear();e.setYear(y+10+(y<1900?1900:0));"=0A=
+"if(v){v*=3D100;if(!n){if(!s.c_w(k,x,e))return =
0;n=3Dx}if(n%10000>v)retu"=0A=
+"rn 0}return =
1};s.dyasmf=3Dfunction(t,m){if(t&&m&&m.indexOf(t)>=3D0)retu"=0A=
+"rn 1;return 0};s.dyasf=3Dfunction(t,m){var =
s=3Dthis,i=3Dt?t.indexOf('=3D'):"=0A=
+"-1,n,x;if(i>=3D0&&m){var =
n=3Dt.substring(0,i),x=3Dt.substring(i+1);if(s.p"=0A=
+"t(x,',','dyasmf',m))return n}return 0};s.uns=3Dfunction(){var =
s=3Dthis,"=0A=
+"x=3Ds.dynamicAccountSelection,l=3Ds.dynamicAccountList,m=3Ds.dynamicAcc=
ou"=0A=
+"ntMatch,n,i;s.un.toLowerCase();if(x&&l){if(!m)m=3Ds.wd.location.host;"=0A=
+"if(!m.toLowerCase)m=3D''+m;l=3Dl.toLowerCase();m=3Dm.toLowerCase();n=3D=
s.pt"=0A=
+"(l,';','dyasf',m);if(n)s.un=3Dn}i=3Ds.un.indexOf(',');s.fun=3Di<0?s.un:=
s."=0A=
+"un.substring(0,i)};s.t=3Dfunction(){var s=3Dthis,trk=3D1,tm=3Dnew =
Date,sed=3D"=0A=
+"Math&&Math.random?Math.floor(Math.random()*10000000000000):tm.getTi"=0A=
+"me(),sess=3D's'+Math.floor(tm.getTime()/10800000)%10+sed,yr=3Dtm.getYea=
"=0A=
+"r(),vt=3Dtm.getDate()+'/'+tm.getMonth()+'/'+(yr<1900?yr+1900:yr)+' '+"=0A=
+"tm.getHours()+':'+tm.getMinutes()+':'+tm.getSeconds()+' '+tm.getDay"=0A=
+"()+' =
'+tm.getTimezoneOffset(),tfs=3Ds.gtfs(),ta=3D'',q=3D'',qs=3D'';s.uns()"=0A=
+";if(!s.q){var =
tl=3Dtfs.location,x=3D'',c=3D'',v=3D'',p=3D'',bw=3D'',bh=3D'',j=3D'1."=0A=
+"0',k=3Ds.c_w('s_cc','true',0)?'Y':'N',hp=3D'',ct=3D'',pn=3D0,ps;if(s.ap=
v>=3D4"=0A=
+")x=3Dscreen.width+'x'+screen.height;if(s.isns||s.isopera){if(s.apv>=3D3=
"=0A=
+"){j=3D'1.1';v=3Ds.n.javaEnabled()?'Y':'N';if(s.apv>=3D4){j=3D'1.2';c=3D=
screen"=0A=
+".pixelDepth;bw=3Ds.wd.innerWidth;bh=3Ds.wd.innerHeight;if(s.apv>=3D4.06=
)j"=0A=
+"=3D'1.3'}}s.pl=3Ds.n.plugins}else =
if(s.isie){if(s.apv>=3D4){v=3Ds.n.javaEna"=0A=
+"bled()?'Y':'N';j=3D'1.2';c=3Dscreen.colorDepth;if(s.apv>=3D5){bw=3Ds.d.=
docu"=0A=
+"mentElement.offsetWidth;bh=3Ds.d.documentElement.offsetHeight;j=3D'1.3'=
"=0A=
+";if(!s.ismac&&s.b){s.b.addBehavior('#default#homePage');hp=3Ds.b.isHo"=0A=
+"mePage(tl)?\"Y\":\"N\";s.b.addBehavior('#default#clientCaps');ct=3Ds."=0A=
+"b.connectionType}}}else r=3D''}if(s.pl)while(pn<s.pl.length&&pn<30){p"=0A=
+"s=3Ds.fl(s.pl[pn].name,100)+';';if(p.indexOf(ps)<0)p+=3Dps;pn++}s.q=3D(=
x?"=0A=
+"'&s=3D'+s.ape(x):'')+(c?'&c=3D'+s.ape(c):'')+(j?'&j=3D'+j:'')+(v?'&v=3D=
'+v:"=0A=
+"'')+(k?'&k=3D'+k:'')+(bw?'&bw=3D'+bw:'')+(bh?'&bh=3D'+bh:'')+(ct?'&ct=3D=
'+s"=0A=
+".ape(ct):'')+(hp?'&hp=3D'+hp:'')+(p?'&p=3D'+s.ape(p):'')}if(s.usePlugin=
"=0A=
+"s)s.doPlugins(s);var =
l=3Ds.wd.location,r=3Dtfs.document.referrer;if(!s."=0A=
+"pageURL)s.pageURL=3Ds.fl(l?l:'',255);if(!s.referrer)s.referrer=3Ds.fl(r=
"=0A=
+"?r:'',255);if(s.lnk||s.eo){var o=3Ds.eo?s.eo:s.lnk;if(!o)return '';va"=0A=
+"r =
p=3Ds.gv('pageName'),w=3D1,t=3Ds.ot(o),n=3Ds.oid(o),x=3Do.s_oidt,h,l,i,oc=
;i"=0A=
+"f(s.eo&&o=3D=3Ds.eo){while(o&&!n&&t!=3D'BODY'){o=3Do.parentElement?o.pa=
rent"=0A=
+"Element:o.parentNode;if(!o)return =
'';t=3Ds.ot(o);n=3Ds.oid(o);x=3Do.s_oid"=0A=
+"t}oc=3Do.onclick?''+o.onclick:'';if((oc.indexOf(\"s_gs(\")>=3D0&&oc.ind=
"=0A=
+"exOf(\".s_oc(\")<0)||oc.indexOf(\".tl(\")>=3D0)return =
''}ta=3Dn?o.targe"=0A=
+"t:1;"=0A=
=0A=
/* Begin Modified Code for Relative Exit Links */=0A=
/*h=3Do.href?o.href:'';*/=0A=
+"var a_l=3Ds.wd.location;"=0A=
+"h=3Do.href?o.href.indexOf('http')=3D=3D-1&&o.href.indexOf('file')=3D=3D=
-1?((o.protocol?o.protocol:a_l.protocol)+'//'+(o.hostname?o.hostname:"=0A=
+"a_l.hostname)+(o.pathname?o.pathname:'')+(o.search?(o.search.substring(=
"=0A=
+"0,1)!=3D'?'?'?':'')+o.search:'')):o.href:'';"=0A=
/* End Modified Code for Relative Exit Links */=0A=
=0A=
+"i=3Dh.indexOf('?');h=3Ds.linkLeaveQueryString||i"=0A=
+"<0?h:h.substring(0,i);l=3Ds.linkName?s.linkName:s.ln(h);t=3Ds.linkType?=
"=0A=
+"s.linkType.toLowerCase():s.lt(h);if(t&&(h||l))q+=3D'&pe=3Dlnk_'+(t=3D=3D=
'd'"=0A=
+"||t=3D=3D'e'?s.ape(t):'o')+(h?'&pev1=3D'+s.ape(h):'')+(l?'&pev2=3D'+s.a=
pe(l"=0A=
+"):'');else =
trk=3D0;if(s.trackInlineStats){if(!p){p=3Ds.gv('pageURL');w=3D"=0A=
+"0}t=3Ds.ot(o);i=3Do.sourceIndex;if(s.gg('objectID')){n=3Ds.gg('objectID=
')"=0A=
+";x=3D1;i=3D1}if(p&&n&&t)qs=3D'&pid=3D'+s.ape(s.fl(p,255))+(w?'&pidt=3D'=
+w:'')"=0A=
+"+'&oid=3D'+s.ape(s.fl(n,100))+(x?'&oidt=3D'+x:'')+'&ot=3D'+s.ape(t)+(i?=
'&"=0A=
+"oi=3D'+i:'')}}if(!trk&&!qs)return '';if(s.p_r)s.p_r();var =
code=3D'';if("=0A=
+"trk&&s.vs(sed))code=3Ds.mr(sess,(vt?'&t=3D'+s.ape(vt):'')+s.hav()+q+(qs=
"=0A=
+"?qs:s.rq(s.un)),ta);s.sq(trk?'':qs);s.lnk=3Ds.eo=3Ds.linkName=3Ds.linkT=
yp"=0A=
+"e=3Ds.wd.s_objectID=3Ds.ppu=3D'';return =
code};s.tl=3Dfunction(o,t,n){var s=3D"=0A=
+"this;s.lnk=3Ds.co(o);s.linkType=3Dt;s.linkName=3Dn;s.t()};s.ssl=3D(s.wd=
.loc"=0A=
+"ation.protocol.toLowerCase().indexOf('https')>=3D0);s.d=3Ddocument;s.b=3D=
"=0A=
+"s.d.body;s.n=3Dnavigator;s.u=3Ds.n.userAgent;s.ns6=3Ds.u.indexOf('Netsc=
ap"=0A=
+"e6/');var apn=3Ds.n.appName,v=3Ds.n.appVersion,ie=3Dv.indexOf('MSIE =
'),o=3D"=0A=
+"s.u.indexOf('Opera =
'),i;if(v.indexOf('Opera')>=3D0||o>0)apn=3D'Opera';s"=0A=
+".isie=3D(apn=3D=3D'Microsoft Internet =
Explorer');s.isns=3D(apn=3D=3D'Netscape')"=0A=
+";s.isopera=3D(apn=3D=3D'Opera');s.ismac=3D(s.u.indexOf('Mac')>=3D0);if(=
o>0)s."=0A=
+"apv=3DparseFloat(s.u.substring(o+6));else =
if(ie>0){s.apv=3DparseInt(i=3Dv"=0A=
+".substring(ie+5));if(s.apv>3)s.apv=3DparseFloat(i)}else if(s.ns6>0)s."=0A=
+"apv=3DparseFloat(s.u.substring(s.ns6+10));else =
s.apv=3DparseFloat(v);s."=0A=
+"em=3D0;if(String.fromCharCode){i=3Descape(String.fromCharCode(256)).toU=
"=0A=
+"pperCase();s.em=3D(i=3D=3D'%C4%80'?2:(i=3D=3D'%U0100'?1:0))}s.un=3Dun;s=
.uns();s"=0A=
+".vl_l=3D'vmk,ppu,charSet,visitorNamespace,cookieDomainPeriods,cookieL"=0A=
+"ifetime,pageName,pageURL,referrer,currencyCode,purchaseID';s.vl_t=3Ds"=0A=
+".vl_l+',variableProvider,channel,server,pageType,campaign,state,zip"=0A=
+",events,products,linkName,linkType';for(var =
n=3D1;n<51;n++)s.vl_t+=3D',"=0A=
+"prop'+n+',eVar'+n+',hier'+n;s.vl_g=3Ds.vl_t+',trackDownloadLinks,trac"=0A=
+"kExternalLinks,trackInlineStats,linkLeaveQueryString,linkDownloadFi"=0A=
+"leTypes,linkExternalFilters,linkInternalFilters,linkNames';if(pg)s."=0A=
+"gl(s.vl_g);s.ss=3Dss;if(!ss){s.wds();s.ca()}}",=0A=
l=3Dwindow.s_c_il,n=3Dnavigator,u=3Dn.userAgent,v=3Dn.appVersion,e=3Dv.in=
dexOf(=0A=
'MSIE =
'),m=3Du.indexOf('Netscape6/'),a,i,s;if(l)for(i=3D0;i<l.length;i++){=0A=
s=3Dl[i];s.uns();if(s.un=3D=3Dun)return s;else =
if(s.pt(s.un,',','isf',un)){=0A=
s=3Ds.co(s);s.un=3Dun;s.uns();return =
s}}if(e>0){a=3DparseInt(i=3Dv.substring(e=0A=
+5));if(a>3)a=3DparseFloat(i)}else =
if(m>0)a=3DparseFloat(u.substring(m+10)=0A=
);else a=3DparseFloat(v);if(a>=3D5&&v.indexOf('Opera')<0&&u.indexOf(=0A=
'Opera')<0){eval(c);return new s_c(un,pg,ss)}else s=3Ds_c2f(c);return s(=0A=
un,pg,ss)}=0A=
=0A=

------=_NextPart_000_0021_01C8F7DA.3C475C60--
